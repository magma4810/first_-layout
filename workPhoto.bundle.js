(()=>{"use strict";var n,e,t={90:(n,e,t)=>{t.r(e),t.d(e,{default:()=>A});var r=t(354),o=t.n(r),i=t(314),a=t.n(i)()(o());a.push([n.id,"footer {\n  background-color: rgb(151, 192, 222);\n  border-top: 3px solid rgb(238, 123, 81);\n  height: 150px;\n  width: auto;\n}\n\n.footer-info {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n\n.social {\n  display: flex;\n  justify-content: space-around;\n}\n\n.social-vk {\n  height: 50px;\n}\n\n.social-whatsapp {\n  height: 50px;\n}\n","",{version:3,sources:["webpack://./src/footer.css"],names:[],mappings:"AAAA;EACE,oCAAoC;EACpC,uCAAuC;EACvC,aAAa;EACb,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;AACd",sourcesContent:["footer {\n  background-color: rgb(151, 192, 222);\n  border-top: 3px solid rgb(238, 123, 81);\n  height: 150px;\n  width: auto;\n}\n\n.footer-info {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n\n.social {\n  display: flex;\n  justify-content: space-around;\n}\n\n.social-vk {\n  height: 50px;\n}\n\n.social-whatsapp {\n  height: 50px;\n}\n"],sourceRoot:""}]);const A=a},336:(n,e,t)=>{t.r(e),t.d(e,{default:()=>A});var r=t(354),o=t.n(r),i=t(314),a=t.n(i)()(o());a.push([n.id,'a {\n  text-decoration: none;\n  color: aliceblue;\n}\n.header-line {\n  position: relative;\n  z-index: 3;\n}\n\n.header-logo > img {\n  width: 200px;\n  max-width: 100%;\n  margin-left: 10px;\n  position: relative;\n  z-index: 3;\n}\n\nheader {\n  position: fixed;\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 99;\n}\n\nheader:before {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background-color: rgb(151, 192, 222);\n  box-shadow: 0 7px 20px rgba(0, 0, 0, 0.3);\n  border-bottom: 3px solid rgb(238, 123, 81);\n  z-index: 2;\n}\n\n.header-body {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  height: 120px;\n  align-items: center;\n}\n\n.header-list-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  position: relative;\n  z-index: 3;\n}\n\n.header-link {\n  color: aliceblue;\n  font-size: 14px;\n  font-weight: 700px;\n  margin-right: 25px;\n  transition: color 0.3s linear;\n  cursor: pointer;\n}\n\n.header-link:hover {\n  color: rgb(238, 123, 81);\n}\n\n.container {\n  max-width: 1600px;\n  margin: 0px auto;\n  padding: 0px 10px;\n}\n\n.header-burger {\n  display: none;\n}\n\n.header-burger.active:before {\n  transform: rotate(45deg);\n  top: 9px;\n}\n\n.header-burger.active:after {\n  transform: rotate(-45deg);\n  bottom: 9px;\n}\n\n.header-burger.active span {\n  transform: scale(0);\n}\n\n.header-phone {\n  padding-left: 20px;\n  position: relative;\n  z-index: 2;\n}\n\n.header-phone-number {\n  display: flex;\n  align-items: center;\n}\n\n.header-phone-text {\n  font-size: 14px;\n  font-weight: 400;\n  color: aliceblue;\n}\n\n.num {\n  color: aliceblue;\n  font-weight: 700;\n  margin-left: 10px;\n  transition: color 0.3s linear;\n}\n\n.num:hover {\n  color: rgb(238, 123, 81);\n}\n\n.button {\n  background-color: rgb(238, 123, 81);\n  padding: 14px 18px;\n  font-weight: 700;\n  transition: background-color 0.3s linear;\n  position: relative;\n  z-index: 2;\n}\n\n.button:hover {\n  background-color: rgb(255, 104, 70);\n}\n',"",{version:3,sources:["webpack://./src/header.css"],names:[],mappings:"AAAA;EACE,qBAAqB;EACrB,gBAAgB;AAClB;AACA;EACE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,iBAAiB;EACjB,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,eAAe;EACf,WAAW;EACX,MAAM;EACN,OAAO;EACP,WAAW;AACb;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,MAAM;EACN,OAAO;EACP,oCAAoC;EACpC,yCAAyC;EACzC,0CAA0C;EAC1C,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,8BAA8B;EAC9B,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,6BAA6B;EAC7B,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,gBAAgB;EAChB,eAAe;EACf,kBAAkB;EAClB,kBAAkB;EAClB,6BAA6B;EAC7B,eAAe;AACjB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,wBAAwB;EACxB,QAAQ;AACV;;AAEA;EACE,yBAAyB;EACzB,WAAW;AACb;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,iBAAiB;EACjB,6BAA6B;AAC/B;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,mCAAmC;EACnC,kBAAkB;EAClB,gBAAgB;EAChB,wCAAwC;EACxC,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,mCAAmC;AACrC",sourcesContent:['a {\n  text-decoration: none;\n  color: aliceblue;\n}\n.header-line {\n  position: relative;\n  z-index: 3;\n}\n\n.header-logo > img {\n  width: 200px;\n  max-width: 100%;\n  margin-left: 10px;\n  position: relative;\n  z-index: 3;\n}\n\nheader {\n  position: fixed;\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 99;\n}\n\nheader:before {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background-color: rgb(151, 192, 222);\n  box-shadow: 0 7px 20px rgba(0, 0, 0, 0.3);\n  border-bottom: 3px solid rgb(238, 123, 81);\n  z-index: 2;\n}\n\n.header-body {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  height: 120px;\n  align-items: center;\n}\n\n.header-list-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  position: relative;\n  z-index: 3;\n}\n\n.header-link {\n  color: aliceblue;\n  font-size: 14px;\n  font-weight: 700px;\n  margin-right: 25px;\n  transition: color 0.3s linear;\n  cursor: pointer;\n}\n\n.header-link:hover {\n  color: rgb(238, 123, 81);\n}\n\n.container {\n  max-width: 1600px;\n  margin: 0px auto;\n  padding: 0px 10px;\n}\n\n.header-burger {\n  display: none;\n}\n\n.header-burger.active:before {\n  transform: rotate(45deg);\n  top: 9px;\n}\n\n.header-burger.active:after {\n  transform: rotate(-45deg);\n  bottom: 9px;\n}\n\n.header-burger.active span {\n  transform: scale(0);\n}\n\n.header-phone {\n  padding-left: 20px;\n  position: relative;\n  z-index: 2;\n}\n\n.header-phone-number {\n  display: flex;\n  align-items: center;\n}\n\n.header-phone-text {\n  font-size: 14px;\n  font-weight: 400;\n  color: aliceblue;\n}\n\n.num {\n  color: aliceblue;\n  font-weight: 700;\n  margin-left: 10px;\n  transition: color 0.3s linear;\n}\n\n.num:hover {\n  color: rgb(238, 123, 81);\n}\n\n.button {\n  background-color: rgb(238, 123, 81);\n  padding: 14px 18px;\n  font-weight: 700;\n  transition: background-color 0.3s linear;\n  position: relative;\n  z-index: 2;\n}\n\n.button:hover {\n  background-color: rgb(255, 104, 70);\n}\n'],sourceRoot:""}]);const A=a},523:(n,e,t)=>{t.r(e),t.d(e,{default:()=>A});var r=t(354),o=t.n(r),i=t(314),a=t.n(i)()(o());a.push([n.id,".img > img {\n  max-width: 650px;\n  height: auto;\n}\n\n.first-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0px 20px 0px 20px;\n  height: 610px;\n}\n\n.first-container-info {\n  display: flex;\n  flex-direction: column;\n  border-top: 3px solid rgb(238, 123, 81);\n  border-bottom: 3px solid rgb(238, 123, 81);\n  margin-left: 20px;\n  height: 80%;\n}\n\n.ul-item {\n  font-size: large;\n  color: aliceblue;\n  margin: 10px 0px 0px 10px;\n}\n\nbutton {\n  border: none;\n  outline: none;\n  background-color: transparent;\n}\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,yBAAyB;EACzB,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uCAAuC;EACvC,0CAA0C;EAC1C,iBAAiB;EACjB,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,yBAAyB;AAC3B;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,6BAA6B;AAC/B",sourcesContent:[".img > img {\n  max-width: 650px;\n  height: auto;\n}\n\n.first-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0px 20px 0px 20px;\n  height: 610px;\n}\n\n.first-container-info {\n  display: flex;\n  flex-direction: column;\n  border-top: 3px solid rgb(238, 123, 81);\n  border-bottom: 3px solid rgb(238, 123, 81);\n  margin-left: 20px;\n  height: 80%;\n}\n\n.ul-item {\n  font-size: large;\n  color: aliceblue;\n  margin: 10px 0px 0px 10px;\n}\n\nbutton {\n  border: none;\n  outline: none;\n  background-color: transparent;\n}\n"],sourceRoot:""}]);const A=a},208:(n,e,t)=>{t.r(e),t.d(e,{default:()=>A});var r=t(354),o=t.n(r),i=t(314),a=t.n(i)()(o());a.push([n.id,'html,\nbody {\n  height: 100%;\n}\n\n*,\n*:before,\n*:after {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  box-sizing: border-box;\n}\n\na {\n  text-decoration: none;\n  color: aliceblue;\n}\n\nbody {\n  font-family: "Open Sans", sans-serif;\n  margin: 0;\n  padding: 0;\n  background-color: rgb(164, 200, 226);\n  color: aliceblue;\n  padding-top: 134px;\n}\n\n@media (max-width: 1200px) {\n  body.lock {\n    overflow: hidden;\n  }\n  .first-container {\n    height: auto;\n    margin-top: 50px;\n  }\n  .header-nav,\n  .header-line,\n  .btn {\n    display: none;\n  }\n  .img {\n    display: none;\n  }\n  .header-burger {\n    display: block;\n    position: relative;\n    width: 30px;\n    height: 20px;\n    margin-right: 30px;\n    position: relative;\n    z-index: 3;\n  }\n  .header-burger span {\n    position: absolute;\n    background-color: rgb(238, 123, 81);\n    left: 0;\n    width: 100%;\n    height: 2px;\n    top: 9px;\n    transition: all 0.3s ease 0s;\n  }\n  .header-burger:before,\n  .header-burger:after {\n    position: absolute;\n    content: "";\n    background-color: rgb(238, 123, 81);\n    width: 100%;\n    height: 2px;\n    left: 0;\n    transition: all 0.3s ease 0s;\n  }\n  .header-burger:before {\n    top: 0;\n  }\n  .header-burger:after {\n    bottom: 0;\n  }\n  .header-list {\n    overflow: auto;\n    position: fixed;\n    top: -100%;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(236, 147, 115, 0.99);\n    z-index: 1;\n    padding: 150px 10px 30px 20px;\n    transition: all 0.9s ease 0s;\n  }\n  .header-list-container {\n    display: flex;\n    flex-direction: column;\n    height: 50%;\n  }\n  .third-container {\n    max-width: 450px;\n    height: 450px;\n  }\n  .header-list.active {\n    top: 1%;\n  }\n}\n\n@media (max-width: 767px) {\n  .header-logo > img {\n    max-width: 130px;\n    height: auto;\n  }\n  .header-list {\n    padding: 110px 10px 30px 20px;\n  }\n  .third-container {\n    max-width: 300px;\n    height: 300px;\n  }\n  .first-container {\n    margin: 0px;\n    margin-right: 20px;\n  }\n  .ul-item {\n    font-size: 15px;\n    color: aliceblue;\n    margin: 10px 0px 0px 10px;\n  }\n  .card-img {\n    width: 200px;\n  }\n  .header-body {\n    height: 80px;\n  }\n  .header-phone {\n    overflow: auto;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    position: fixed;\n    top: -100%;\n    left: 0;\n    width: 100%;\n    height: 35%;\n    margin-top: 80vh;\n    z-index: 1;\n    transition: all 0.9s ease 0s;\n  }\n  .header-phone-text {\n    display: none;\n  }\n  .header-phone.active {\n    top: 1%;\n  }\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;EAEE,YAAY;AACd;;AAEA;;;EAGE,UAAU;EACV,SAAS;EACT,SAAS;EACT,sBAAsB;AACxB;;AAEA;EACE,qBAAqB;EACrB,gBAAgB;AAClB;;AAEA;EACE,oCAAoC;EACpC,SAAS;EACT,UAAU;EACV,oCAAoC;EACpC,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE;IACE,gBAAgB;EAClB;EACA;IACE,YAAY;IACZ,gBAAgB;EAClB;EACA;;;IAGE,aAAa;EACf;EACA;IACE,aAAa;EACf;EACA;IACE,cAAc;IACd,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;IAClB,UAAU;EACZ;EACA;IACE,kBAAkB;IAClB,mCAAmC;IACnC,OAAO;IACP,WAAW;IACX,WAAW;IACX,QAAQ;IACR,4BAA4B;EAC9B;EACA;;IAEE,kBAAkB;IAClB,WAAW;IACX,mCAAmC;IACnC,WAAW;IACX,WAAW;IACX,OAAO;IACP,4BAA4B;EAC9B;EACA;IACE,MAAM;EACR;EACA;IACE,SAAS;EACX;EACA;IACE,cAAc;IACd,eAAe;IACf,UAAU;IACV,OAAO;IACP,WAAW;IACX,YAAY;IACZ,2CAA2C;IAC3C,UAAU;IACV,6BAA6B;IAC7B,4BAA4B;EAC9B;EACA;IACE,aAAa;IACb,sBAAsB;IACtB,WAAW;EACb;EACA;IACE,gBAAgB;IAChB,aAAa;EACf;EACA;IACE,OAAO;EACT;AACF;;AAEA;EACE;IACE,gBAAgB;IAChB,YAAY;EACd;EACA;IACE,6BAA6B;EAC/B;EACA;IACE,gBAAgB;IAChB,aAAa;EACf;EACA;IACE,WAAW;IACX,kBAAkB;EACpB;EACA;IACE,eAAe;IACf,gBAAgB;IAChB,yBAAyB;EAC3B;EACA;IACE,YAAY;EACd;EACA;IACE,YAAY;EACd;EACA;IACE,cAAc;IACd,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,eAAe;IACf,UAAU;IACV,OAAO;IACP,WAAW;IACX,WAAW;IACX,gBAAgB;IAChB,UAAU;IACV,4BAA4B;EAC9B;EACA;IACE,aAAa;EACf;EACA;IACE,OAAO;EACT;AACF",sourcesContent:['html,\nbody {\n  height: 100%;\n}\n\n*,\n*:before,\n*:after {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  box-sizing: border-box;\n}\n\na {\n  text-decoration: none;\n  color: aliceblue;\n}\n\nbody {\n  font-family: "Open Sans", sans-serif;\n  margin: 0;\n  padding: 0;\n  background-color: rgb(164, 200, 226);\n  color: aliceblue;\n  padding-top: 134px;\n}\n\n@media (max-width: 1200px) {\n  body.lock {\n    overflow: hidden;\n  }\n  .first-container {\n    height: auto;\n    margin-top: 50px;\n  }\n  .header-nav,\n  .header-line,\n  .btn {\n    display: none;\n  }\n  .img {\n    display: none;\n  }\n  .header-burger {\n    display: block;\n    position: relative;\n    width: 30px;\n    height: 20px;\n    margin-right: 30px;\n    position: relative;\n    z-index: 3;\n  }\n  .header-burger span {\n    position: absolute;\n    background-color: rgb(238, 123, 81);\n    left: 0;\n    width: 100%;\n    height: 2px;\n    top: 9px;\n    transition: all 0.3s ease 0s;\n  }\n  .header-burger:before,\n  .header-burger:after {\n    position: absolute;\n    content: "";\n    background-color: rgb(238, 123, 81);\n    width: 100%;\n    height: 2px;\n    left: 0;\n    transition: all 0.3s ease 0s;\n  }\n  .header-burger:before {\n    top: 0;\n  }\n  .header-burger:after {\n    bottom: 0;\n  }\n  .header-list {\n    overflow: auto;\n    position: fixed;\n    top: -100%;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(236, 147, 115, 0.99);\n    z-index: 1;\n    padding: 150px 10px 30px 20px;\n    transition: all 0.9s ease 0s;\n  }\n  .header-list-container {\n    display: flex;\n    flex-direction: column;\n    height: 50%;\n  }\n  .third-container {\n    max-width: 450px;\n    height: 450px;\n  }\n  .header-list.active {\n    top: 1%;\n  }\n}\n\n@media (max-width: 767px) {\n  .header-logo > img {\n    max-width: 130px;\n    height: auto;\n  }\n  .header-list {\n    padding: 110px 10px 30px 20px;\n  }\n  .third-container {\n    max-width: 300px;\n    height: 300px;\n  }\n  .first-container {\n    margin: 0px;\n    margin-right: 20px;\n  }\n  .ul-item {\n    font-size: 15px;\n    color: aliceblue;\n    margin: 10px 0px 0px 10px;\n  }\n  .card-img {\n    width: 200px;\n  }\n  .header-body {\n    height: 80px;\n  }\n  .header-phone {\n    overflow: auto;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    position: fixed;\n    top: -100%;\n    left: 0;\n    width: 100%;\n    height: 35%;\n    margin-top: 80vh;\n    z-index: 1;\n    transition: all 0.9s ease 0s;\n  }\n  .header-phone-text {\n    display: none;\n  }\n  .header-phone.active {\n    top: 1%;\n  }\n}\n'],sourceRoot:""}]);const A=a},182:(n,e,t)=>{t.r(e),t.d(e,{default:()=>A});var r=t(354),o=t.n(r),i=t(314),a=t.n(i)()(o());a.push([n.id,".slider {\n  display: flex;\n  overflow: hidden;\n  max-width: 650px;\n  width: 100%;\n  height: 650px;\n  margin: 0px auto 50px auto;\n  border: 5px solid aliceblue;\n  position: relative;\n  border-radius: 10px;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n}\n\n.points {\n  width: 150px;\n  display: flex;\n  justify-content: space-between;\n  position: absolute;\n  bottom: 5%;\n}\n\n.point {\n  display: flex;\n  width: 12px;\n  height: 12px;\n  background-color: aliceblue;\n  border-radius: 100px;\n  cursor: pointer;\n}\n\n.point:hover {\n  background-color: rgb(238, 123, 81);\n}\n\n.card-img-work.active-img {\n  display: flex;\n}\n\n.active-point {\n  background-color: rgb(238, 123, 81);\n}\n\n.card-img-work {\n  display: none;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  animation: slide 3s;\n}\n\n.slider-buttons {\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  width: 95%;\n}\n\ni.fa.fa-angle-left,\ni.fa.fa-angle-right {\n  color: rgb(238, 123, 81);\n  font-size: 34px;\n  cursor: pointer;\n  font-weight: 800;\n}\n\n.block-arrow > i {\n  display: flex;\n  width: 40px;\n  height: 40px;\n  background-color: aliceblue;\n  border: 1px solid rgb(238, 123, 81);\n  border-radius: 50px;\n  align-items: center;\n  justify-content: center;\n  transition: color 0.3s linear;\n}\n\n.block-arrow > i:hover {\n  background-color: rgba(238, 123, 81, 0.69);\n  border-radius: 50px;\n  color: aliceblue;\n  cursor: pointer;\n}\n\n.block-arrow > i:active {\n  background: rgba(238, 123, 81, 0.79);\n  border-radius: 50px;\n  color: aliceblue;\n  cursor: pointer;\n}\n\n@keyframes slide {\n  0% {\n    opacity: 0.5;\n  }\n  100% {\n    opacity: 2;\n  }\n}\n","",{version:3,sources:["webpack://./src/stylesSlider.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,gBAAgB;EAChB,gBAAgB;EAChB,WAAW;EACX,aAAa;EACb,0BAA0B;EAC1B,2BAA2B;EAC3B,kBAAkB;EAClB,mBAAmB;EACnB,WAAW;EACX,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,8BAA8B;EAC9B,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,WAAW;EACX,YAAY;EACZ,2BAA2B;EAC3B,oBAAoB;EACpB,eAAe;AACjB;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,8BAA8B;EAC9B,UAAU;AACZ;;AAEA;;EAEE,wBAAwB;EACxB,eAAe;EACf,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,YAAY;EACZ,2BAA2B;EAC3B,mCAAmC;EACnC,mBAAmB;EACnB,mBAAmB;EACnB,uBAAuB;EACvB,6BAA6B;AAC/B;;AAEA;EACE,0CAA0C;EAC1C,mBAAmB;EACnB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,oCAAoC;EACpC,mBAAmB;EACnB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE;IACE,YAAY;EACd;EACA;IACE,UAAU;EACZ;AACF",sourcesContent:[".slider {\n  display: flex;\n  overflow: hidden;\n  max-width: 650px;\n  width: 100%;\n  height: 650px;\n  margin: 0px auto 50px auto;\n  border: 5px solid aliceblue;\n  position: relative;\n  border-radius: 10px;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n}\n\n.points {\n  width: 150px;\n  display: flex;\n  justify-content: space-between;\n  position: absolute;\n  bottom: 5%;\n}\n\n.point {\n  display: flex;\n  width: 12px;\n  height: 12px;\n  background-color: aliceblue;\n  border-radius: 100px;\n  cursor: pointer;\n}\n\n.point:hover {\n  background-color: rgb(238, 123, 81);\n}\n\n.card-img-work.active-img {\n  display: flex;\n}\n\n.active-point {\n  background-color: rgb(238, 123, 81);\n}\n\n.card-img-work {\n  display: none;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  animation: slide 3s;\n}\n\n.slider-buttons {\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  width: 95%;\n}\n\ni.fa.fa-angle-left,\ni.fa.fa-angle-right {\n  color: rgb(238, 123, 81);\n  font-size: 34px;\n  cursor: pointer;\n  font-weight: 800;\n}\n\n.block-arrow > i {\n  display: flex;\n  width: 40px;\n  height: 40px;\n  background-color: aliceblue;\n  border: 1px solid rgb(238, 123, 81);\n  border-radius: 50px;\n  align-items: center;\n  justify-content: center;\n  transition: color 0.3s linear;\n}\n\n.block-arrow > i:hover {\n  background-color: rgba(238, 123, 81, 0.69);\n  border-radius: 50px;\n  color: aliceblue;\n  cursor: pointer;\n}\n\n.block-arrow > i:active {\n  background: rgba(238, 123, 81, 0.79);\n  border-radius: 50px;\n  color: aliceblue;\n  cursor: pointer;\n}\n\n@keyframes slide {\n  0% {\n    opacity: 0.5;\n  }\n  100% {\n    opacity: 2;\n  }\n}\n"],sourceRoot:""}]);const A=a},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var l=this[A][0];null!=l&&(a[l]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);r&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},371:(n,e,t)=>{t.r(e),t.d(e,{default:()=>b});var r=t(72),o=t.n(r),i=t(825),a=t.n(i),A=t(659),l=t.n(A),d=t(56),c=t.n(d),s=t(540),u=t.n(s),p=t(113),f=t.n(p),h=t(90),g={};g.styleTagTransform=f(),g.setAttributes=c(),g.insert=l().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=u();var C=o()(h.default,g);if(!h.default.locals||n.hot.invalidate){var E=!h.default.locals,m=E?h:h.default.locals;n.hot.accept(90,(e=>{h=t(90),function(n,e,t){if(!n&&e||n&&!e)return!1;var r;for(r in n)if((!t||"default"!==r)&&n[r]!==e[r])return!1;for(r in e)if(!(t&&"default"===r||n[r]))return!1;return!0}(m,E?h:h.default.locals,E)?(m=E?h:h.default.locals,C(h.default)):n.hot.invalidate()}))}n.hot.dispose((function(){C()}));const b=h.default&&h.default.locals?h.default.locals:void 0},617:(n,e,t)=>{t.r(e),t.d(e,{default:()=>b});var r=t(72),o=t.n(r),i=t(825),a=t.n(i),A=t(659),l=t.n(A),d=t(56),c=t.n(d),s=t(540),u=t.n(s),p=t(113),f=t.n(p),h=t(336),g={};g.styleTagTransform=f(),g.setAttributes=c(),g.insert=l().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=u();var C=o()(h.default,g);if(!h.default.locals||n.hot.invalidate){var E=!h.default.locals,m=E?h:h.default.locals;n.hot.accept(336,(e=>{h=t(336),function(n,e,t){if(!n&&e||n&&!e)return!1;var r;for(r in n)if((!t||"default"!==r)&&n[r]!==e[r])return!1;for(r in e)if(!(t&&"default"===r||n[r]))return!1;return!0}(m,E?h:h.default.locals,E)?(m=E?h:h.default.locals,C(h.default)):n.hot.invalidate()}))}n.hot.dispose((function(){C()}));const b=h.default&&h.default.locals?h.default.locals:void 0},216:(n,e,t)=>{t.r(e),t.d(e,{default:()=>b});var r=t(72),o=t.n(r),i=t(825),a=t.n(i),A=t(659),l=t.n(A),d=t(56),c=t.n(d),s=t(540),u=t.n(s),p=t(113),f=t.n(p),h=t(523),g={};g.styleTagTransform=f(),g.setAttributes=c(),g.insert=l().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=u();var C=o()(h.default,g);if(!h.default.locals||n.hot.invalidate){var E=!h.default.locals,m=E?h:h.default.locals;n.hot.accept(523,(e=>{h=t(523),function(n,e,t){if(!n&&e||n&&!e)return!1;var r;for(r in n)if((!t||"default"!==r)&&n[r]!==e[r])return!1;for(r in e)if(!(t&&"default"===r||n[r]))return!1;return!0}(m,E?h:h.default.locals,E)?(m=E?h:h.default.locals,C(h.default)):n.hot.invalidate()}))}n.hot.dispose((function(){C()}));const b=h.default&&h.default.locals?h.default.locals:void 0},511:(n,e,t)=>{t.r(e),t.d(e,{default:()=>b});var r=t(72),o=t.n(r),i=t(825),a=t.n(i),A=t(659),l=t.n(A),d=t(56),c=t.n(d),s=t(540),u=t.n(s),p=t(113),f=t.n(p),h=t(208),g={};g.styleTagTransform=f(),g.setAttributes=c(),g.insert=l().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=u();var C=o()(h.default,g);if(!h.default.locals||n.hot.invalidate){var E=!h.default.locals,m=E?h:h.default.locals;n.hot.accept(208,(e=>{h=t(208),function(n,e,t){if(!n&&e||n&&!e)return!1;var r;for(r in n)if((!t||"default"!==r)&&n[r]!==e[r])return!1;for(r in e)if(!(t&&"default"===r||n[r]))return!1;return!0}(m,E?h:h.default.locals,E)?(m=E?h:h.default.locals,C(h.default)):n.hot.invalidate()}))}n.hot.dispose((function(){C()}));const b=h.default&&h.default.locals?h.default.locals:void 0},863:(n,e,t)=>{t.r(e),t.d(e,{default:()=>b});var r=t(72),o=t.n(r),i=t(825),a=t.n(i),A=t(659),l=t.n(A),d=t(56),c=t.n(d),s=t(540),u=t.n(s),p=t(113),f=t.n(p),h=t(182),g={};g.styleTagTransform=f(),g.setAttributes=c(),g.insert=l().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=u();var C=o()(h.default,g);if(!h.default.locals||n.hot.invalidate){var E=!h.default.locals,m=E?h:h.default.locals;n.hot.accept(182,(e=>{h=t(182),function(n,e,t){if(!n&&e||n&&!e)return!1;var r;for(r in n)if((!t||"default"!==r)&&n[r]!==e[r])return!1;for(r in e)if(!(t&&"default"===r||n[r]))return!1;return!0}(m,E?h:h.default.locals,E)?(m=E?h:h.default.locals,C(h.default)):n.hot.invalidate()}))}n.hot.dispose((function(){C()}));const b=h.default&&h.default.locals?h.default.locals:void 0},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],A=0;A<n.length;A++){var l=n[A],d=r.base?l[0]+r.base:l[0],c=i[d]||0,s="".concat(d," ").concat(c);i[d]=c+1;var u=t(s),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=o(p,r);r.byIndex=A,e.splice(A,0,{identifier:s,updater:f,references:1})}a.push(s)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var l=r(n,o),d=0;d<i.length;d++){var c=t(i[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=l}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},156:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),t(617),t(511),t(371),t(216);const r=document.querySelector(".header-list"),o=document.querySelector(".header-burger"),i=document.querySelectorAll(".header-link"),a=document.querySelector(".header-phone"),A=Array.from(i);null==o||o.addEventListener("click",(()=>{r.classList.toggle("active"),o.classList.toggle("active"),a.classList.toggle("active"),document.body.classList.toggle("lock")})),A.map((n=>n.addEventListener("click",(()=>{r.classList.remove("active"),o.classList.remove("active"),a.classList.toggle("active"),document.body.classList.remove("lock")}))))},271:()=>{const n=document.querySelector(".slider"),e=document.querySelectorAll(".card-img-work"),t=document.createElement("div");t.className="points";for(let n=0;n<e.length;n++){let n=document.createElement("span");n.className="point",t&&t.append(n)}const r=document.createElement("div");r.className="slider-buttons",r.innerHTML='<div class="block-arrow" id="left-button">\n<i class="fa fa-angle-left"></i>\n</div>\n<div class="block-arrow" id="right-button">\n<i class="fa fa-angle-right"></i>\n</div>',null==n||n.append(t),null==n||n.append(r);const o=document.querySelectorAll(".point"),i=document.getElementById("left-button"),a=document.getElementById("right-button");o[0].classList.add("active-point"),e[0].classList.add("active-img");let A=0;for(let n=0;n<o.length;n++)o[n]&&o[n].addEventListener("click",(()=>{o[A].classList.remove("active-point"),e[A].classList.remove("active-img"),A=n,e[A]&&o[A]&&(e[A].classList.add("active-img"),o[A].classList.add("active-point"))}));function l(){o[A].classList.remove("active-point"),e[A].classList.remove("active-img"),A++,A>=e.length&&(A=0),e[A].classList.add("active-img"),o[A].classList.add("active-point")}null==i||i.addEventListener("click",(()=>{o[A].classList.remove("active-point"),e[A].classList.remove("active-img"),A--,A<0&&(A=e.length-1),e[A].classList.add("active-img"),o[A].classList.add("active-point")})),null==a||a.addEventListener("click",(()=>{l()}));let d=setInterval((()=>l()),3e3);null==n||n.addEventListener("mouseover",(()=>{clearInterval(d)})),null==n||n.addEventListener("mouseleave",(()=>{d=setInterval((()=>l()),3e3)}))},227:(n,e,t)=>{t(863),t(271),t(156)}},r={};function o(n){var e=r[n];if(void 0!==e){if(void 0!==e.error)throw e.error;return e.exports}var i=r[n]={id:n,exports:{}};try{var a={id:n,module:i,factory:t[n],require:o};o.i.forEach((function(n){n(a)})),i=a.module,a.factory.call(i.exports,i,i.exports,a.require)}catch(n){throw i.error=n,n}return i.exports}o.m=t,o.c=r,o.i=[],o.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return o.d(e,{a:e}),e},o.d=(n,e)=>{for(var t in e)o.o(e,t)&&!o.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},o.hu=n=>n+"."+o.h()+".hot-update.js",o.hmrF=()=>"workPhoto."+o.h()+".hot-update.json",o.h=()=>"d400df669de754368b84",o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),o.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),n={},e="first_layout:",o.l=(t,r,i,a)=>{if(n[t])n[t].push(r);else{var A,l;if(void 0!==i)for(var d=document.getElementsByTagName("script"),c=0;c<d.length;c++){var s=d[c];if(s.getAttribute("src")==t||s.getAttribute("data-webpack")==e+i){A=s;break}}A||(l=!0,(A=document.createElement("script")).charset="utf-8",A.timeout=120,o.nc&&A.setAttribute("nonce",o.nc),A.setAttribute("data-webpack",e+i),A.src=t),n[t]=[r];var u=(e,r)=>{A.onerror=A.onload=null,clearTimeout(p);var o=n[t];if(delete n[t],A.parentNode&&A.parentNode.removeChild(A),o&&o.forEach((n=>n(r))),e)return e(r)},p=setTimeout(u.bind(null,void 0,{type:"timeout",target:A}),12e4);A.onerror=u.bind(null,A.onerror),A.onload=u.bind(null,A.onload),l&&document.head.appendChild(A)}},o.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{var n,e,t,r={},i=o.c,a=[],A=[],l="idle",d=0,c=[];function s(n){l=n;for(var e=[],t=0;t<A.length;t++)e[t]=A[t].call(null,n);return Promise.all(e).then((function(){}))}function u(){0==--d&&s("ready").then((function(){if(0===d){var n=c;c=[];for(var e=0;e<n.length;e++)n[e]()}}))}function p(n){if("idle"!==l)throw new Error("check() is only allowed in idle status");return s("check").then(o.hmrM).then((function(t){return t?s("prepare").then((function(){var r=[];return e=[],Promise.all(Object.keys(o.hmrC).reduce((function(n,i){return o.hmrC[i](t.c,t.r,t.m,n,e,r),n}),[])).then((function(){return e=function(){return n?h(n):s("ready").then((function(){return r}))},0===d?e():new Promise((function(n){c.push((function(){n(e())}))}));var e}))})):s(g()?"ready":"idle").then((function(){return null}))}))}function f(n){return"ready"!==l?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+l+")")})):h(n)}function h(n){n=n||{},g();var r=e.map((function(e){return e(n)}));e=void 0;var o=r.map((function(n){return n.error})).filter(Boolean);if(o.length>0)return s("abort").then((function(){throw o[0]}));var i=s("dispose");r.forEach((function(n){n.dispose&&n.dispose()}));var a,A=s("apply"),l=function(n){a||(a=n)},d=[];return r.forEach((function(n){if(n.apply){var e=n.apply(l);if(e)for(var t=0;t<e.length;t++)d.push(e[t])}})),Promise.all([i,A]).then((function(){return a?s("fail").then((function(){throw a})):t?h(n).then((function(n){return d.forEach((function(e){n.indexOf(e)<0&&n.push(e)})),n})):s("idle").then((function(){return d}))}))}function g(){if(t)return e||(e=[]),Object.keys(o.hmrI).forEach((function(n){t.forEach((function(t){o.hmrI[n](t,e)}))})),t=void 0,!0}o.hmrD=r,o.i.push((function(c){var h,g,C,E,m=c.module,b=function(e,t){var r=i[t];if(!r)return e;var o=function(o){if(r.hot.active){if(i[o]){var A=i[o].parents;-1===A.indexOf(t)&&A.push(t)}else a=[t],n=o;-1===r.children.indexOf(o)&&r.children.push(o)}else console.warn("[HMR] unexpected require("+o+") from disposed module "+t),a=[];return e(o)},A=function(n){return{configurable:!0,enumerable:!0,get:function(){return e[n]},set:function(t){e[n]=t}}};for(var c in e)Object.prototype.hasOwnProperty.call(e,c)&&"e"!==c&&Object.defineProperty(o,c,A(c));return o.e=function(n,t){return function(n){switch(l){case"ready":s("prepare");case"prepare":return d++,n.then(u,u),n;default:return n}}(e.e(n,t))},o}(c.require,c.id);m.hot=(h=c.id,g=m,E={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:C=n!==h,_requireSelf:function(){a=g.parents.slice(),n=C?void 0:h,o(h)},active:!0,accept:function(n,e,t){if(void 0===n)E._selfAccepted=!0;else if("function"==typeof n)E._selfAccepted=n;else if("object"==typeof n&&null!==n)for(var r=0;r<n.length;r++)E._acceptedDependencies[n[r]]=e||function(){},E._acceptedErrorHandlers[n[r]]=t;else E._acceptedDependencies[n]=e||function(){},E._acceptedErrorHandlers[n]=t},decline:function(n){if(void 0===n)E._selfDeclined=!0;else if("object"==typeof n&&null!==n)for(var e=0;e<n.length;e++)E._declinedDependencies[n[e]]=!0;else E._declinedDependencies[n]=!0},dispose:function(n){E._disposeHandlers.push(n)},addDisposeHandler:function(n){E._disposeHandlers.push(n)},removeDisposeHandler:function(n){var e=E._disposeHandlers.indexOf(n);e>=0&&E._disposeHandlers.splice(e,1)},invalidate:function(){switch(this._selfInvalidated=!0,l){case"idle":e=[],Object.keys(o.hmrI).forEach((function(n){o.hmrI[n](h,e)})),s("ready");break;case"ready":Object.keys(o.hmrI).forEach((function(n){o.hmrI[n](h,e)}));break;case"prepare":case"check":case"dispose":case"apply":(t=t||[]).push(h)}},check:p,apply:f,status:function(n){if(!n)return l;A.push(n)},addStatusHandler:function(n){A.push(n)},removeStatusHandler:function(n){var e=A.indexOf(n);e>=0&&A.splice(e,1)},data:r[h]},n=void 0,E),m.parents=a,m.children=[],a=[],c.require=b})),o.hmrC={},o.hmrI={}})(),(()=>{var n;o.g.importScripts&&(n=o.g.location+"");var e=o.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");if(t.length)for(var r=t.length-1;r>-1&&(!n||!/^http(s?):/.test(n));)n=t[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=n})(),(()=>{var n,e,t,r,i,a=o.hmrS_jsonp=o.hmrS_jsonp||{724:0,792:0},A={};function l(e,t){return n=t,new Promise(((n,t)=>{A[e]=n;var r=o.p+o.hu(e),i=new Error;o.l(r,(n=>{if(A[e]){A[e]=void 0;var r=n&&("load"===n.type?"missing":n.type),o=n&&n.target&&n.target.src;i.message="Loading hot update chunk "+e+" failed.\n("+r+": "+o+")",i.name="ChunkLoadError",i.type=r,i.request=o,t(i)}}))}))}function d(n){function A(n){for(var e=[n],t={},r=e.map((function(n){return{chain:[n],id:n}}));r.length>0;){var i=r.pop(),a=i.id,A=i.chain,d=o.c[a];if(d&&(!d.hot._selfAccepted||d.hot._selfInvalidated)){if(d.hot._selfDeclined)return{type:"self-declined",chain:A,moduleId:a};if(d.hot._main)return{type:"unaccepted",chain:A,moduleId:a};for(var c=0;c<d.parents.length;c++){var s=d.parents[c],u=o.c[s];if(u){if(u.hot._declinedDependencies[a])return{type:"declined",chain:A.concat([s]),moduleId:a,parentId:s};-1===e.indexOf(s)&&(u.hot._acceptedDependencies[a]?(t[s]||(t[s]=[]),l(t[s],[a])):(delete t[s],e.push(s),r.push({chain:A.concat([s]),id:s})))}}}}return{type:"accepted",moduleId:n,outdatedModules:e,outdatedDependencies:t}}function l(n,e){for(var t=0;t<e.length;t++){var r=e[t];-1===n.indexOf(r)&&n.push(r)}}o.f&&delete o.f.jsonpHmr,e=void 0;var d={},c=[],s={},u=function(n){console.warn("[HMR] unexpected require("+n.id+") to disposed module")};for(var p in t)if(o.o(t,p)){var f,h=t[p],g=!1,C=!1,E=!1,m="";switch((f=h?A(p):{type:"disposed",moduleId:p}).chain&&(m="\nUpdate propagation: "+f.chain.join(" -> ")),f.type){case"self-declined":n.onDeclined&&n.onDeclined(f),n.ignoreDeclined||(g=new Error("Aborted because of self decline: "+f.moduleId+m));break;case"declined":n.onDeclined&&n.onDeclined(f),n.ignoreDeclined||(g=new Error("Aborted because of declined dependency: "+f.moduleId+" in "+f.parentId+m));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(f),n.ignoreUnaccepted||(g=new Error("Aborted because "+p+" is not accepted"+m));break;case"accepted":n.onAccepted&&n.onAccepted(f),C=!0;break;case"disposed":n.onDisposed&&n.onDisposed(f),E=!0;break;default:throw new Error("Unexception type "+f.type)}if(g)return{error:g};if(C)for(p in s[p]=h,l(c,f.outdatedModules),f.outdatedDependencies)o.o(f.outdatedDependencies,p)&&(d[p]||(d[p]=[]),l(d[p],f.outdatedDependencies[p]));E&&(l(c,[f.moduleId]),s[p]=u)}t=void 0;for(var b,B=[],x=0;x<c.length;x++){var v=c[x],y=o.c[v];y&&(y.hot._selfAccepted||y.hot._main)&&s[v]!==u&&!y.hot._selfInvalidated&&B.push({module:v,require:y.hot._requireSelf,errorHandler:y.hot._selfAccepted})}return{dispose:function(){var n;r.forEach((function(n){delete a[n]})),r=void 0;for(var e,t=c.slice();t.length>0;){var i=t.pop(),A=o.c[i];if(A){var l={},s=A.hot._disposeHandlers;for(x=0;x<s.length;x++)s[x].call(null,l);for(o.hmrD[i]=l,A.hot.active=!1,delete o.c[i],delete d[i],x=0;x<A.children.length;x++){var u=o.c[A.children[x]];u&&(n=u.parents.indexOf(i))>=0&&u.parents.splice(n,1)}}}for(var p in d)if(o.o(d,p)&&(A=o.c[p]))for(b=d[p],x=0;x<b.length;x++)e=b[x],(n=A.children.indexOf(e))>=0&&A.children.splice(n,1)},apply:function(e){for(var t in s)o.o(s,t)&&(o.m[t]=s[t]);for(var r=0;r<i.length;r++)i[r](o);for(var a in d)if(o.o(d,a)){var A=o.c[a];if(A){b=d[a];for(var l=[],u=[],p=[],f=0;f<b.length;f++){var h=b[f],g=A.hot._acceptedDependencies[h],C=A.hot._acceptedErrorHandlers[h];if(g){if(-1!==l.indexOf(g))continue;l.push(g),u.push(C),p.push(h)}}for(var E=0;E<l.length;E++)try{l[E].call(null,b)}catch(t){if("function"==typeof u[E])try{u[E](t,{moduleId:a,dependencyId:p[E]})}catch(r){n.onErrored&&n.onErrored({type:"accept-error-handler-errored",moduleId:a,dependencyId:p[E],error:r,originalError:t}),n.ignoreErrored||(e(r),e(t))}else n.onErrored&&n.onErrored({type:"accept-errored",moduleId:a,dependencyId:p[E],error:t}),n.ignoreErrored||e(t)}}}for(var m=0;m<B.length;m++){var x=B[m],v=x.module;try{x.require(v)}catch(t){if("function"==typeof x.errorHandler)try{x.errorHandler(t,{moduleId:v,module:o.c[v]})}catch(r){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:v,error:r,originalError:t}),n.ignoreErrored||(e(r),e(t))}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:v,error:t}),n.ignoreErrored||e(t)}}return c}}}self.webpackHotUpdatefirst_layout=(e,r,a)=>{for(var l in r)o.o(r,l)&&(t[l]=r[l],n&&n.push(l));a&&i.push(a),A[e]&&(A[e](),A[e]=void 0)},o.hmrI.jsonp=function(n,e){t||(t={},i=[],r=[],e.push(d)),o.o(t,n)||(t[n]=o.m[n])},o.hmrC.jsonp=function(n,A,c,s,u,p){u.push(d),e={},r=A,t=c.reduce((function(n,e){return n[e]=!1,n}),{}),i=[],n.forEach((function(n){o.o(a,n)&&void 0!==a[n]?(s.push(l(n,p)),e[n]=!0):e[n]=!1})),o.f&&(o.f.jsonpHmr=function(n,t){e&&o.o(e,n)&&!e[n]&&(t.push(l(n)),e[n]=!0)})},o.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(o.p+o.hmrF()).then((n=>{if(404!==n.status){if(!n.ok)throw new Error("Failed to fetch update manifest "+n.statusText);return n.json()}}))}})(),o.nc=void 0,o(227)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,