(()=>{"use strict";var n,e,t={320:(n,e,t)=>{t.r(e),t.d(e,{default:()=>A});var r=t(354),o=t.n(r),i=t(314),a=t.n(i)()(o());a.push([n.id,".materials {\n  display: flex;\n  justify-content: center;\n  margin: 60px;\n}\n.container-block {\n  display: flex;\n  justify-content: space-around;\n}\n\n.container-img {\n  width: 300px;\n  height: auto;\n  border: 3px solid aliceblue;\n  border-radius: 20px;\n}\n\n.container-block-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0px 30px;\n  padding-bottom: 100px;\n}\n","",{version:3,sources:["webpack://./src/about.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,uBAAuB;EACvB,YAAY;AACd;AACA;EACE,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,2BAA2B;EAC3B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,gBAAgB;EAChB,qBAAqB;AACvB",sourcesContent:[".materials {\n  display: flex;\n  justify-content: center;\n  margin: 60px;\n}\n.container-block {\n  display: flex;\n  justify-content: space-around;\n}\n\n.container-img {\n  width: 300px;\n  height: auto;\n  border: 3px solid aliceblue;\n  border-radius: 20px;\n}\n\n.container-block-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0px 30px;\n  padding-bottom: 100px;\n}\n"],sourceRoot:""}]);const A=a},90:(n,e,t)=>{t.r(e),t.d(e,{default:()=>A});var r=t(354),o=t.n(r),i=t(314),a=t.n(i)()(o());a.push([n.id,"footer {\n  background-color: rgb(151, 192, 222);\n  border-top: 3px solid rgb(238, 123, 81);\n  height: 150px;\n  width: auto;\n}\n\n.footer-info {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n\n.social {\n  display: flex;\n  justify-content: space-around;\n}\n\n.social-vk {\n  height: 50px;\n}\n\n.social-whatsapp {\n  height: 50px;\n}\n","",{version:3,sources:["webpack://./src/footer.css"],names:[],mappings:"AAAA;EACE,oCAAoC;EACpC,uCAAuC;EACvC,aAAa;EACb,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;AACd",sourcesContent:["footer {\n  background-color: rgb(151, 192, 222);\n  border-top: 3px solid rgb(238, 123, 81);\n  height: 150px;\n  width: auto;\n}\n\n.footer-info {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n\n.social {\n  display: flex;\n  justify-content: space-around;\n}\n\n.social-vk {\n  height: 50px;\n}\n\n.social-whatsapp {\n  height: 50px;\n}\n"],sourceRoot:""}]);const A=a},336:(n,e,t)=>{t.r(e),t.d(e,{default:()=>A});var r=t(354),o=t.n(r),i=t(314),a=t.n(i)()(o());a.push([n.id,'a {\n  text-decoration: none;\n  color: aliceblue;\n}\n.header-line {\n  position: relative;\n  z-index: 3;\n}\n\n.header-logo > img {\n  width: 200px;\n  max-width: 100%;\n  margin-left: 10px;\n  position: relative;\n  z-index: 3;\n}\n\nheader {\n  position: fixed;\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 99;\n}\n\nheader:before {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background-color: rgb(151, 192, 222);\n  box-shadow: 0 7px 20px rgba(0, 0, 0, 0.3);\n  border-bottom: 3px solid rgb(238, 123, 81);\n  z-index: 2;\n}\n\n.header-body {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  height: 120px;\n  align-items: center;\n}\n\n.header-list-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  position: relative;\n  z-index: 3;\n}\n\n.header-link {\n  color: aliceblue;\n  font-size: 14px;\n  font-weight: 700px;\n  margin-right: 25px;\n  transition: color 0.3s linear;\n  cursor: pointer;\n}\n\n.header-link:hover {\n  color: rgb(238, 123, 81);\n}\n\n.container {\n  max-width: 1600px;\n  margin: 0px auto;\n  padding: 0px 10px;\n}\n\n.header-burger {\n  display: none;\n}\n\n.header-burger.active:before {\n  transform: rotate(45deg);\n  top: 9px;\n}\n\n.header-burger.active:after {\n  transform: rotate(-45deg);\n  bottom: 9px;\n}\n\n.header-burger.active span {\n  transform: scale(0);\n}\n\n.header-phone {\n  padding-left: 20px;\n  position: relative;\n  z-index: 2;\n}\n\n.header-phone-number {\n  display: flex;\n  align-items: center;\n}\n\n.header-phone-text {\n  font-size: 14px;\n  font-weight: 400;\n  color: aliceblue;\n}\n\n.num {\n  color: aliceblue;\n  font-weight: 700;\n  margin-left: 10px;\n  transition: color 0.3s linear;\n}\n\n.num:hover {\n  color: rgb(238, 123, 81);\n}\n\n.button {\n  background-color: rgb(238, 123, 81);\n  padding: 14px 18px;\n  font-weight: 700;\n  transition: background-color 0.3s linear;\n  position: relative;\n  z-index: 2;\n}\n\n.button:hover {\n  background-color: rgb(255, 104, 70);\n}\n',"",{version:3,sources:["webpack://./src/header.css"],names:[],mappings:"AAAA;EACE,qBAAqB;EACrB,gBAAgB;AAClB;AACA;EACE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,iBAAiB;EACjB,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,eAAe;EACf,WAAW;EACX,MAAM;EACN,OAAO;EACP,WAAW;AACb;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,MAAM;EACN,OAAO;EACP,oCAAoC;EACpC,yCAAyC;EACzC,0CAA0C;EAC1C,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,8BAA8B;EAC9B,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,6BAA6B;EAC7B,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,gBAAgB;EAChB,eAAe;EACf,kBAAkB;EAClB,kBAAkB;EAClB,6BAA6B;EAC7B,eAAe;AACjB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,wBAAwB;EACxB,QAAQ;AACV;;AAEA;EACE,yBAAyB;EACzB,WAAW;AACb;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,iBAAiB;EACjB,6BAA6B;AAC/B;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,mCAAmC;EACnC,kBAAkB;EAClB,gBAAgB;EAChB,wCAAwC;EACxC,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,mCAAmC;AACrC",sourcesContent:['a {\n  text-decoration: none;\n  color: aliceblue;\n}\n.header-line {\n  position: relative;\n  z-index: 3;\n}\n\n.header-logo > img {\n  width: 200px;\n  max-width: 100%;\n  margin-left: 10px;\n  position: relative;\n  z-index: 3;\n}\n\nheader {\n  position: fixed;\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 99;\n}\n\nheader:before {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background-color: rgb(151, 192, 222);\n  box-shadow: 0 7px 20px rgba(0, 0, 0, 0.3);\n  border-bottom: 3px solid rgb(238, 123, 81);\n  z-index: 2;\n}\n\n.header-body {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  height: 120px;\n  align-items: center;\n}\n\n.header-list-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  position: relative;\n  z-index: 3;\n}\n\n.header-link {\n  color: aliceblue;\n  font-size: 14px;\n  font-weight: 700px;\n  margin-right: 25px;\n  transition: color 0.3s linear;\n  cursor: pointer;\n}\n\n.header-link:hover {\n  color: rgb(238, 123, 81);\n}\n\n.container {\n  max-width: 1600px;\n  margin: 0px auto;\n  padding: 0px 10px;\n}\n\n.header-burger {\n  display: none;\n}\n\n.header-burger.active:before {\n  transform: rotate(45deg);\n  top: 9px;\n}\n\n.header-burger.active:after {\n  transform: rotate(-45deg);\n  bottom: 9px;\n}\n\n.header-burger.active span {\n  transform: scale(0);\n}\n\n.header-phone {\n  padding-left: 20px;\n  position: relative;\n  z-index: 2;\n}\n\n.header-phone-number {\n  display: flex;\n  align-items: center;\n}\n\n.header-phone-text {\n  font-size: 14px;\n  font-weight: 400;\n  color: aliceblue;\n}\n\n.num {\n  color: aliceblue;\n  font-weight: 700;\n  margin-left: 10px;\n  transition: color 0.3s linear;\n}\n\n.num:hover {\n  color: rgb(238, 123, 81);\n}\n\n.button {\n  background-color: rgb(238, 123, 81);\n  padding: 14px 18px;\n  font-weight: 700;\n  transition: background-color 0.3s linear;\n  position: relative;\n  z-index: 2;\n}\n\n.button:hover {\n  background-color: rgb(255, 104, 70);\n}\n'],sourceRoot:""}]);const A=a},208:(n,e,t)=>{t.r(e),t.d(e,{default:()=>A});var r=t(354),o=t.n(r),i=t(314),a=t.n(i)()(o());a.push([n.id,'html,\nbody {\n  height: 100%;\n}\n\n*,\n*:before,\n*:after {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  box-sizing: border-box;\n}\n\na {\n  text-decoration: none;\n  color: aliceblue;\n}\n\nbody {\n  font-family: "Open Sans", sans-serif;\n  margin: 0;\n  padding: 0;\n  background-color: rgb(164, 200, 226);\n  color: aliceblue;\n  padding-top: 134px;\n}\n\n@media (max-width: 1200px) {\n  body.lock {\n    overflow: hidden;\n  }\n  .first-container {\n    height: auto;\n    margin-top: 50px;\n  }\n  .header-nav,\n  .header-line,\n  .btn {\n    display: none;\n  }\n  .img {\n    display: none;\n  }\n  .header-burger {\n    display: block;\n    position: relative;\n    width: 30px;\n    height: 20px;\n    margin-right: 30px;\n    position: relative;\n    z-index: 3;\n  }\n  .header-burger span {\n    position: absolute;\n    background-color: rgb(238, 123, 81);\n    left: 0;\n    width: 100%;\n    height: 2px;\n    top: 9px;\n    transition: all 0.3s ease 0s;\n  }\n  .header-burger:before,\n  .header-burger:after {\n    position: absolute;\n    content: "";\n    background-color: rgb(238, 123, 81);\n    width: 100%;\n    height: 2px;\n    left: 0;\n    transition: all 0.3s ease 0s;\n  }\n  .header-burger:before {\n    top: 0;\n  }\n  .header-burger:after {\n    bottom: 0;\n  }\n  .header-list {\n    overflow: auto;\n    position: fixed;\n    top: -100%;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(236, 147, 115, 0.99);\n    z-index: 1;\n    padding: 150px 10px 30px 20px;\n    transition: all 0.9s ease 0s;\n  }\n  .header-list-container {\n    display: flex;\n    flex-direction: column;\n    height: 50%;\n  }\n  .third-container {\n    max-width: 450px;\n    height: 450px;\n  }\n  .header-list.active {\n    top: 1%;\n  }\n}\n\n@media (max-width: 767px) {\n  .header-logo > img {\n    max-width: 130px;\n    height: auto;\n  }\n  .header-list {\n    padding: 110px 10px 30px 20px;\n  }\n  .third-container {\n    max-width: 300px;\n    height: 300px;\n  }\n  .first-container {\n    margin: 0px;\n    margin-right: 20px;\n  }\n  .ul-item {\n    font-size: 15px;\n    color: aliceblue;\n    margin: 10px 0px 0px 10px;\n  }\n  .card-img {\n    width: 200px;\n  }\n  .header-body {\n    height: 80px;\n  }\n  .header-phone {\n    overflow: auto;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    position: fixed;\n    top: -100%;\n    left: 0;\n    width: 100%;\n    height: 35%;\n    margin-top: 80vh;\n    z-index: 1;\n    transition: all 0.9s ease 0s;\n  }\n  .header-phone-text {\n    display: none;\n  }\n  .header-phone.active {\n    top: 1%;\n  }\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;EAEE,YAAY;AACd;;AAEA;;;EAGE,UAAU;EACV,SAAS;EACT,SAAS;EACT,sBAAsB;AACxB;;AAEA;EACE,qBAAqB;EACrB,gBAAgB;AAClB;;AAEA;EACE,oCAAoC;EACpC,SAAS;EACT,UAAU;EACV,oCAAoC;EACpC,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE;IACE,gBAAgB;EAClB;EACA;IACE,YAAY;IACZ,gBAAgB;EAClB;EACA;;;IAGE,aAAa;EACf;EACA;IACE,aAAa;EACf;EACA;IACE,cAAc;IACd,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;IAClB,UAAU;EACZ;EACA;IACE,kBAAkB;IAClB,mCAAmC;IACnC,OAAO;IACP,WAAW;IACX,WAAW;IACX,QAAQ;IACR,4BAA4B;EAC9B;EACA;;IAEE,kBAAkB;IAClB,WAAW;IACX,mCAAmC;IACnC,WAAW;IACX,WAAW;IACX,OAAO;IACP,4BAA4B;EAC9B;EACA;IACE,MAAM;EACR;EACA;IACE,SAAS;EACX;EACA;IACE,cAAc;IACd,eAAe;IACf,UAAU;IACV,OAAO;IACP,WAAW;IACX,YAAY;IACZ,2CAA2C;IAC3C,UAAU;IACV,6BAA6B;IAC7B,4BAA4B;EAC9B;EACA;IACE,aAAa;IACb,sBAAsB;IACtB,WAAW;EACb;EACA;IACE,gBAAgB;IAChB,aAAa;EACf;EACA;IACE,OAAO;EACT;AACF;;AAEA;EACE;IACE,gBAAgB;IAChB,YAAY;EACd;EACA;IACE,6BAA6B;EAC/B;EACA;IACE,gBAAgB;IAChB,aAAa;EACf;EACA;IACE,WAAW;IACX,kBAAkB;EACpB;EACA;IACE,eAAe;IACf,gBAAgB;IAChB,yBAAyB;EAC3B;EACA;IACE,YAAY;EACd;EACA;IACE,YAAY;EACd;EACA;IACE,cAAc;IACd,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,eAAe;IACf,UAAU;IACV,OAAO;IACP,WAAW;IACX,WAAW;IACX,gBAAgB;IAChB,UAAU;IACV,4BAA4B;EAC9B;EACA;IACE,aAAa;EACf;EACA;IACE,OAAO;EACT;AACF",sourcesContent:['html,\nbody {\n  height: 100%;\n}\n\n*,\n*:before,\n*:after {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  box-sizing: border-box;\n}\n\na {\n  text-decoration: none;\n  color: aliceblue;\n}\n\nbody {\n  font-family: "Open Sans", sans-serif;\n  margin: 0;\n  padding: 0;\n  background-color: rgb(164, 200, 226);\n  color: aliceblue;\n  padding-top: 134px;\n}\n\n@media (max-width: 1200px) {\n  body.lock {\n    overflow: hidden;\n  }\n  .first-container {\n    height: auto;\n    margin-top: 50px;\n  }\n  .header-nav,\n  .header-line,\n  .btn {\n    display: none;\n  }\n  .img {\n    display: none;\n  }\n  .header-burger {\n    display: block;\n    position: relative;\n    width: 30px;\n    height: 20px;\n    margin-right: 30px;\n    position: relative;\n    z-index: 3;\n  }\n  .header-burger span {\n    position: absolute;\n    background-color: rgb(238, 123, 81);\n    left: 0;\n    width: 100%;\n    height: 2px;\n    top: 9px;\n    transition: all 0.3s ease 0s;\n  }\n  .header-burger:before,\n  .header-burger:after {\n    position: absolute;\n    content: "";\n    background-color: rgb(238, 123, 81);\n    width: 100%;\n    height: 2px;\n    left: 0;\n    transition: all 0.3s ease 0s;\n  }\n  .header-burger:before {\n    top: 0;\n  }\n  .header-burger:after {\n    bottom: 0;\n  }\n  .header-list {\n    overflow: auto;\n    position: fixed;\n    top: -100%;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(236, 147, 115, 0.99);\n    z-index: 1;\n    padding: 150px 10px 30px 20px;\n    transition: all 0.9s ease 0s;\n  }\n  .header-list-container {\n    display: flex;\n    flex-direction: column;\n    height: 50%;\n  }\n  .third-container {\n    max-width: 450px;\n    height: 450px;\n  }\n  .header-list.active {\n    top: 1%;\n  }\n}\n\n@media (max-width: 767px) {\n  .header-logo > img {\n    max-width: 130px;\n    height: auto;\n  }\n  .header-list {\n    padding: 110px 10px 30px 20px;\n  }\n  .third-container {\n    max-width: 300px;\n    height: 300px;\n  }\n  .first-container {\n    margin: 0px;\n    margin-right: 20px;\n  }\n  .ul-item {\n    font-size: 15px;\n    color: aliceblue;\n    margin: 10px 0px 0px 10px;\n  }\n  .card-img {\n    width: 200px;\n  }\n  .header-body {\n    height: 80px;\n  }\n  .header-phone {\n    overflow: auto;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    position: fixed;\n    top: -100%;\n    left: 0;\n    width: 100%;\n    height: 35%;\n    margin-top: 80vh;\n    z-index: 1;\n    transition: all 0.9s ease 0s;\n  }\n  .header-phone-text {\n    display: none;\n  }\n  .header-phone.active {\n    top: 1%;\n  }\n}\n'],sourceRoot:""}]);const A=a},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(a[d]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);r&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},467:(n,e,t)=>{t.r(e),t.d(e,{default:()=>b});var r=t(72),o=t.n(r),i=t(825),a=t.n(i),A=t(659),d=t.n(A),l=t(56),c=t.n(l),s=t(540),p=t.n(s),u=t(113),f=t.n(u),h=t(320),C={};C.styleTagTransform=f(),C.setAttributes=c(),C.insert=d().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=p();var g=o()(h.default,C);if(!h.default.locals||n.hot.invalidate){var E=!h.default.locals,m=E?h:h.default.locals;n.hot.accept(320,(e=>{h=t(320),function(n,e,t){if(!n&&e||n&&!e)return!1;var r;for(r in n)if((!t||"default"!==r)&&n[r]!==e[r])return!1;for(r in e)if(!(t&&"default"===r||n[r]))return!1;return!0}(m,E?h:h.default.locals,E)?(m=E?h:h.default.locals,g(h.default)):n.hot.invalidate()}))}n.hot.dispose((function(){g()}));const b=h.default&&h.default.locals?h.default.locals:void 0},371:(n,e,t)=>{t.r(e),t.d(e,{default:()=>b});var r=t(72),o=t.n(r),i=t(825),a=t.n(i),A=t(659),d=t.n(A),l=t(56),c=t.n(l),s=t(540),p=t.n(s),u=t(113),f=t.n(u),h=t(90),C={};C.styleTagTransform=f(),C.setAttributes=c(),C.insert=d().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=p();var g=o()(h.default,C);if(!h.default.locals||n.hot.invalidate){var E=!h.default.locals,m=E?h:h.default.locals;n.hot.accept(90,(e=>{h=t(90),function(n,e,t){if(!n&&e||n&&!e)return!1;var r;for(r in n)if((!t||"default"!==r)&&n[r]!==e[r])return!1;for(r in e)if(!(t&&"default"===r||n[r]))return!1;return!0}(m,E?h:h.default.locals,E)?(m=E?h:h.default.locals,g(h.default)):n.hot.invalidate()}))}n.hot.dispose((function(){g()}));const b=h.default&&h.default.locals?h.default.locals:void 0},617:(n,e,t)=>{t.r(e),t.d(e,{default:()=>b});var r=t(72),o=t.n(r),i=t(825),a=t.n(i),A=t(659),d=t.n(A),l=t(56),c=t.n(l),s=t(540),p=t.n(s),u=t(113),f=t.n(u),h=t(336),C={};C.styleTagTransform=f(),C.setAttributes=c(),C.insert=d().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=p();var g=o()(h.default,C);if(!h.default.locals||n.hot.invalidate){var E=!h.default.locals,m=E?h:h.default.locals;n.hot.accept(336,(e=>{h=t(336),function(n,e,t){if(!n&&e||n&&!e)return!1;var r;for(r in n)if((!t||"default"!==r)&&n[r]!==e[r])return!1;for(r in e)if(!(t&&"default"===r||n[r]))return!1;return!0}(m,E?h:h.default.locals,E)?(m=E?h:h.default.locals,g(h.default)):n.hot.invalidate()}))}n.hot.dispose((function(){g()}));const b=h.default&&h.default.locals?h.default.locals:void 0},511:(n,e,t)=>{t.r(e),t.d(e,{default:()=>b});var r=t(72),o=t.n(r),i=t(825),a=t.n(i),A=t(659),d=t.n(A),l=t(56),c=t.n(l),s=t(540),p=t.n(s),u=t(113),f=t.n(u),h=t(208),C={};C.styleTagTransform=f(),C.setAttributes=c(),C.insert=d().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=p();var g=o()(h.default,C);if(!h.default.locals||n.hot.invalidate){var E=!h.default.locals,m=E?h:h.default.locals;n.hot.accept(208,(e=>{h=t(208),function(n,e,t){if(!n&&e||n&&!e)return!1;var r;for(r in n)if((!t||"default"!==r)&&n[r]!==e[r])return!1;for(r in e)if(!(t&&"default"===r||n[r]))return!1;return!0}(m,E?h:h.default.locals,E)?(m=E?h:h.default.locals,g(h.default)):n.hot.invalidate()}))}n.hot.dispose((function(){g()}));const b=h.default&&h.default.locals?h.default.locals:void 0},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],A=0;A<n.length;A++){var d=n[A],l=r.base?d[0]+r.base:d[0],c=i[l]||0,s="".concat(l," ").concat(c);i[l]=c+1;var p=t(s),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:s,updater:f,references:1})}a.push(s)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var d=r(n,o),l=0;l<i.length;l++){var c=t(i[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=d}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},493:(n,e,t)=>{t(617),t(511),t(371),t(467)}},r={};function o(n){var e=r[n];if(void 0!==e){if(void 0!==e.error)throw e.error;return e.exports}var i=r[n]={id:n,exports:{}};try{var a={id:n,module:i,factory:t[n],require:o};o.i.forEach((function(n){n(a)})),i=a.module,a.factory.call(i.exports,i,i.exports,a.require)}catch(n){throw i.error=n,n}return i.exports}o.m=t,o.c=r,o.i=[],o.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return o.d(e,{a:e}),e},o.d=(n,e)=>{for(var t in e)o.o(e,t)&&!o.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},o.hu=n=>n+"."+o.h()+".hot-update.js",o.hmrF=()=>"about."+o.h()+".hot-update.json",o.h=()=>"5e339afedcd44f6937fd",o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),o.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),n={},e="first_layout:",o.l=(t,r,i,a)=>{if(n[t])n[t].push(r);else{var A,d;if(void 0!==i)for(var l=document.getElementsByTagName("script"),c=0;c<l.length;c++){var s=l[c];if(s.getAttribute("src")==t||s.getAttribute("data-webpack")==e+i){A=s;break}}A||(d=!0,(A=document.createElement("script")).charset="utf-8",A.timeout=120,o.nc&&A.setAttribute("nonce",o.nc),A.setAttribute("data-webpack",e+i),A.src=t),n[t]=[r];var p=(e,r)=>{A.onerror=A.onload=null,clearTimeout(u);var o=n[t];if(delete n[t],A.parentNode&&A.parentNode.removeChild(A),o&&o.forEach((n=>n(r))),e)return e(r)},u=setTimeout(p.bind(null,void 0,{type:"timeout",target:A}),12e4);A.onerror=p.bind(null,A.onerror),A.onload=p.bind(null,A.onload),d&&document.head.appendChild(A)}},o.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{var n,e,t,r={},i=o.c,a=[],A=[],d="idle",l=0,c=[];function s(n){d=n;for(var e=[],t=0;t<A.length;t++)e[t]=A[t].call(null,n);return Promise.all(e).then((function(){}))}function p(){0==--l&&s("ready").then((function(){if(0===l){var n=c;c=[];for(var e=0;e<n.length;e++)n[e]()}}))}function u(n){if("idle"!==d)throw new Error("check() is only allowed in idle status");return s("check").then(o.hmrM).then((function(t){return t?s("prepare").then((function(){var r=[];return e=[],Promise.all(Object.keys(o.hmrC).reduce((function(n,i){return o.hmrC[i](t.c,t.r,t.m,n,e,r),n}),[])).then((function(){return e=function(){return n?h(n):s("ready").then((function(){return r}))},0===l?e():new Promise((function(n){c.push((function(){n(e())}))}));var e}))})):s(C()?"ready":"idle").then((function(){return null}))}))}function f(n){return"ready"!==d?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+d+")")})):h(n)}function h(n){n=n||{},C();var r=e.map((function(e){return e(n)}));e=void 0;var o=r.map((function(n){return n.error})).filter(Boolean);if(o.length>0)return s("abort").then((function(){throw o[0]}));var i=s("dispose");r.forEach((function(n){n.dispose&&n.dispose()}));var a,A=s("apply"),d=function(n){a||(a=n)},l=[];return r.forEach((function(n){if(n.apply){var e=n.apply(d);if(e)for(var t=0;t<e.length;t++)l.push(e[t])}})),Promise.all([i,A]).then((function(){return a?s("fail").then((function(){throw a})):t?h(n).then((function(n){return l.forEach((function(e){n.indexOf(e)<0&&n.push(e)})),n})):s("idle").then((function(){return l}))}))}function C(){if(t)return e||(e=[]),Object.keys(o.hmrI).forEach((function(n){t.forEach((function(t){o.hmrI[n](t,e)}))})),t=void 0,!0}o.hmrD=r,o.i.push((function(c){var h,C,g,E,m=c.module,b=function(e,t){var r=i[t];if(!r)return e;var o=function(o){if(r.hot.active){if(i[o]){var A=i[o].parents;-1===A.indexOf(t)&&A.push(t)}else a=[t],n=o;-1===r.children.indexOf(o)&&r.children.push(o)}else console.warn("[HMR] unexpected require("+o+") from disposed module "+t),a=[];return e(o)},A=function(n){return{configurable:!0,enumerable:!0,get:function(){return e[n]},set:function(t){e[n]=t}}};for(var c in e)Object.prototype.hasOwnProperty.call(e,c)&&"e"!==c&&Object.defineProperty(o,c,A(c));return o.e=function(n,t){return function(n){switch(d){case"ready":s("prepare");case"prepare":return l++,n.then(p,p),n;default:return n}}(e.e(n,t))},o}(c.require,c.id);m.hot=(h=c.id,C=m,E={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:g=n!==h,_requireSelf:function(){a=C.parents.slice(),n=g?void 0:h,o(h)},active:!0,accept:function(n,e,t){if(void 0===n)E._selfAccepted=!0;else if("function"==typeof n)E._selfAccepted=n;else if("object"==typeof n&&null!==n)for(var r=0;r<n.length;r++)E._acceptedDependencies[n[r]]=e||function(){},E._acceptedErrorHandlers[n[r]]=t;else E._acceptedDependencies[n]=e||function(){},E._acceptedErrorHandlers[n]=t},decline:function(n){if(void 0===n)E._selfDeclined=!0;else if("object"==typeof n&&null!==n)for(var e=0;e<n.length;e++)E._declinedDependencies[n[e]]=!0;else E._declinedDependencies[n]=!0},dispose:function(n){E._disposeHandlers.push(n)},addDisposeHandler:function(n){E._disposeHandlers.push(n)},removeDisposeHandler:function(n){var e=E._disposeHandlers.indexOf(n);e>=0&&E._disposeHandlers.splice(e,1)},invalidate:function(){switch(this._selfInvalidated=!0,d){case"idle":e=[],Object.keys(o.hmrI).forEach((function(n){o.hmrI[n](h,e)})),s("ready");break;case"ready":Object.keys(o.hmrI).forEach((function(n){o.hmrI[n](h,e)}));break;case"prepare":case"check":case"dispose":case"apply":(t=t||[]).push(h)}},check:u,apply:f,status:function(n){if(!n)return d;A.push(n)},addStatusHandler:function(n){A.push(n)},removeStatusHandler:function(n){var e=A.indexOf(n);e>=0&&A.splice(e,1)},data:r[h]},n=void 0,E),m.parents=a,m.children=[],a=[],c.require=b})),o.hmrC={},o.hmrI={}})(),(()=>{var n;o.g.importScripts&&(n=o.g.location+"");var e=o.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");if(t.length)for(var r=t.length-1;r>-1&&(!n||!/^http(s?):/.test(n));)n=t[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=n})(),(()=>{var n,e,t,r,i,a=o.hmrS_jsonp=o.hmrS_jsonp||{594:0},A={};function d(e,t){return n=t,new Promise(((n,t)=>{A[e]=n;var r=o.p+o.hu(e),i=new Error;o.l(r,(n=>{if(A[e]){A[e]=void 0;var r=n&&("load"===n.type?"missing":n.type),o=n&&n.target&&n.target.src;i.message="Loading hot update chunk "+e+" failed.\n("+r+": "+o+")",i.name="ChunkLoadError",i.type=r,i.request=o,t(i)}}))}))}function l(n){function A(n){for(var e=[n],t={},r=e.map((function(n){return{chain:[n],id:n}}));r.length>0;){var i=r.pop(),a=i.id,A=i.chain,l=o.c[a];if(l&&(!l.hot._selfAccepted||l.hot._selfInvalidated)){if(l.hot._selfDeclined)return{type:"self-declined",chain:A,moduleId:a};if(l.hot._main)return{type:"unaccepted",chain:A,moduleId:a};for(var c=0;c<l.parents.length;c++){var s=l.parents[c],p=o.c[s];if(p){if(p.hot._declinedDependencies[a])return{type:"declined",chain:A.concat([s]),moduleId:a,parentId:s};-1===e.indexOf(s)&&(p.hot._acceptedDependencies[a]?(t[s]||(t[s]=[]),d(t[s],[a])):(delete t[s],e.push(s),r.push({chain:A.concat([s]),id:s})))}}}}return{type:"accepted",moduleId:n,outdatedModules:e,outdatedDependencies:t}}function d(n,e){for(var t=0;t<e.length;t++){var r=e[t];-1===n.indexOf(r)&&n.push(r)}}o.f&&delete o.f.jsonpHmr,e=void 0;var l={},c=[],s={},p=function(n){console.warn("[HMR] unexpected require("+n.id+") to disposed module")};for(var u in t)if(o.o(t,u)){var f,h=t[u],C=!1,g=!1,E=!1,m="";switch((f=h?A(u):{type:"disposed",moduleId:u}).chain&&(m="\nUpdate propagation: "+f.chain.join(" -> ")),f.type){case"self-declined":n.onDeclined&&n.onDeclined(f),n.ignoreDeclined||(C=new Error("Aborted because of self decline: "+f.moduleId+m));break;case"declined":n.onDeclined&&n.onDeclined(f),n.ignoreDeclined||(C=new Error("Aborted because of declined dependency: "+f.moduleId+" in "+f.parentId+m));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(f),n.ignoreUnaccepted||(C=new Error("Aborted because "+u+" is not accepted"+m));break;case"accepted":n.onAccepted&&n.onAccepted(f),g=!0;break;case"disposed":n.onDisposed&&n.onDisposed(f),E=!0;break;default:throw new Error("Unexception type "+f.type)}if(C)return{error:C};if(g)for(u in s[u]=h,d(c,f.outdatedModules),f.outdatedDependencies)o.o(f.outdatedDependencies,u)&&(l[u]||(l[u]=[]),d(l[u],f.outdatedDependencies[u]));E&&(d(c,[f.moduleId]),s[u]=p)}t=void 0;for(var b,x=[],B=0;B<c.length;B++){var v=c[B],y=o.c[v];y&&(y.hot._selfAccepted||y.hot._main)&&s[v]!==p&&!y.hot._selfInvalidated&&x.push({module:v,require:y.hot._requireSelf,errorHandler:y.hot._selfAccepted})}return{dispose:function(){var n;r.forEach((function(n){delete a[n]})),r=void 0;for(var e,t=c.slice();t.length>0;){var i=t.pop(),A=o.c[i];if(A){var d={},s=A.hot._disposeHandlers;for(B=0;B<s.length;B++)s[B].call(null,d);for(o.hmrD[i]=d,A.hot.active=!1,delete o.c[i],delete l[i],B=0;B<A.children.length;B++){var p=o.c[A.children[B]];p&&(n=p.parents.indexOf(i))>=0&&p.parents.splice(n,1)}}}for(var u in l)if(o.o(l,u)&&(A=o.c[u]))for(b=l[u],B=0;B<b.length;B++)e=b[B],(n=A.children.indexOf(e))>=0&&A.children.splice(n,1)},apply:function(e){for(var t in s)o.o(s,t)&&(o.m[t]=s[t]);for(var r=0;r<i.length;r++)i[r](o);for(var a in l)if(o.o(l,a)){var A=o.c[a];if(A){b=l[a];for(var d=[],p=[],u=[],f=0;f<b.length;f++){var h=b[f],C=A.hot._acceptedDependencies[h],g=A.hot._acceptedErrorHandlers[h];if(C){if(-1!==d.indexOf(C))continue;d.push(C),p.push(g),u.push(h)}}for(var E=0;E<d.length;E++)try{d[E].call(null,b)}catch(t){if("function"==typeof p[E])try{p[E](t,{moduleId:a,dependencyId:u[E]})}catch(r){n.onErrored&&n.onErrored({type:"accept-error-handler-errored",moduleId:a,dependencyId:u[E],error:r,originalError:t}),n.ignoreErrored||(e(r),e(t))}else n.onErrored&&n.onErrored({type:"accept-errored",moduleId:a,dependencyId:u[E],error:t}),n.ignoreErrored||e(t)}}}for(var m=0;m<x.length;m++){var B=x[m],v=B.module;try{B.require(v)}catch(t){if("function"==typeof B.errorHandler)try{B.errorHandler(t,{moduleId:v,module:o.c[v]})}catch(r){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:v,error:r,originalError:t}),n.ignoreErrored||(e(r),e(t))}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:v,error:t}),n.ignoreErrored||e(t)}}return c}}}self.webpackHotUpdatefirst_layout=(e,r,a)=>{for(var d in r)o.o(r,d)&&(t[d]=r[d],n&&n.push(d));a&&i.push(a),A[e]&&(A[e](),A[e]=void 0)},o.hmrI.jsonp=function(n,e){t||(t={},i=[],r=[],e.push(l)),o.o(t,n)||(t[n]=o.m[n])},o.hmrC.jsonp=function(n,A,c,s,p,u){p.push(l),e={},r=A,t=c.reduce((function(n,e){return n[e]=!1,n}),{}),i=[],n.forEach((function(n){o.o(a,n)&&void 0!==a[n]?(s.push(d(n,u)),e[n]=!0):e[n]=!1})),o.f&&(o.f.jsonpHmr=function(n,t){e&&o.o(e,n)&&!e[n]&&(t.push(d(n)),e[n]=!0)})},o.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(o.p+o.hmrF()).then((n=>{if(404!==n.status){if(!n.ok)throw new Error("Failed to fetch update manifest "+n.statusText);return n.json()}}))}})(),o.nc=void 0,o(493)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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R0FFbEQyRCxHQUNBakosRUFBb0JtQixFQUFFOEgsRUFBcUJ4SCxLQUMxQ3dILEVBQW9CeEgsS0FFckI2RCxFQUFTbE0sS0FBS29RLEVBQWdCL0gsSUFDOUJ3SCxFQUFvQnhILElBQVcsRUFFakMsRUFFRixFQUVBekIsRUFBb0JpRixLQUFPLEtBQzFCLEdBQXFCLG9CQUFWK0gsTUFBdUIsTUFBTSxJQUFJak8sTUFBTSxzQ0FDbEQsT0FBT2lPLE1BQU1oTixFQUFvQjNELEVBQUkyRCxFQUFvQjJCLFFBQVFrRCxNQUFNb0ksSUFDdEUsR0FBdUIsTUFBcEJBLEVBQVMxRSxPQUFaLENBQ0EsSUFBSTBFLEVBQVNDLEdBQUksTUFBTSxJQUFJbk8sTUFBTSxtQ0FBcUNrTyxFQUFTRSxZQUMvRSxPQUFPRixFQUFTRyxNQUZrQixDQUVaLEdBQ3JCLEMsS0N6ZkhwTixFQUFvQjZDLFFBQUtwSSxFQ0dDdUYsRUFBb0IsSSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZpcnN0X2xheW91dC93ZWJwYWNrL3J1bnRpbWUvbG9hZCBzY3JpcHQiLCJ3ZWJwYWNrOi8vZmlyc3RfbGF5b3V0Ly4vc3JjL2Fib3V0LmNzcyIsIndlYnBhY2s6Ly9maXJzdF9sYXlvdXQvLi9zcmMvZm9vdGVyLmNzcyIsIndlYnBhY2s6Ly9maXJzdF9sYXlvdXQvLi9zcmMvaGVhZGVyLmNzcyIsIndlYnBhY2s6Ly9maXJzdF9sYXlvdXQvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL2ZpcnN0X2xheW91dC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vZmlyc3RfbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vZmlyc3RfbGF5b3V0Ly4vc3JjL2Fib3V0LmNzcz80ODQ4Iiwid2VicGFjazovL2ZpcnN0X2xheW91dC8uL3NyYy9mb290ZXIuY3NzPzgxZDciLCJ3ZWJwYWNrOi8vZmlyc3RfbGF5b3V0Ly4vc3JjL2hlYWRlci5jc3M/YWIyZCIsIndlYnBhY2s6Ly9maXJzdF9sYXlvdXQvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vZmlyc3RfbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL2ZpcnN0X2xheW91dC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vZmlyc3RfbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2ZpcnN0X2xheW91dC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9maXJzdF9sYXlvdXQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9maXJzdF9sYXlvdXQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9maXJzdF9sYXlvdXQvLi9zcmMvYWJvdXQudHMiLCJ3ZWJwYWNrOi8vZmlyc3RfbGF5b3V0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2ZpcnN0X2xheW91dC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9maXJzdF9sYXlvdXQvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2ZpcnN0X2xheW91dC93ZWJwYWNrL3J1bnRpbWUvZ2V0IGphdmFzY3JpcHQgdXBkYXRlIGNodW5rIGZpbGVuYW1lIiwid2VicGFjazovL2ZpcnN0X2xheW91dC93ZWJwYWNrL3J1bnRpbWUvZ2V0IHVwZGF0ZSBtYW5pZmVzdCBmaWxlbmFtZSIsIndlYnBhY2s6Ly9maXJzdF9sYXlvdXQvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIiwid2VicGFjazovL2ZpcnN0X2xheW91dC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2ZpcnN0X2xheW91dC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2ZpcnN0X2xheW91dC93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL2ZpcnN0X2xheW91dC93ZWJwYWNrL3J1bnRpbWUvaG90IG1vZHVsZSByZXBsYWNlbWVudCIsIndlYnBhY2s6Ly9maXJzdF9sYXlvdXQvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vZmlyc3RfbGF5b3V0L3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL2ZpcnN0X2xheW91dC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vZmlyc3RfbGF5b3V0L3dlYnBhY2svc3RhcnR1cCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaW5Qcm9ncmVzcyA9IHt9O1xudmFyIGRhdGFXZWJwYWNrUHJlZml4ID0gXCJmaXJzdF9sYXlvdXQ6XCI7XG4vLyBsb2FkU2NyaXB0IGZ1bmN0aW9uIHRvIGxvYWQgYSBzY3JpcHQgdmlhIHNjcmlwdCB0YWdcbl9fd2VicGFja19yZXF1aXJlX18ubCA9ICh1cmwsIGRvbmUsIGtleSwgY2h1bmtJZCkgPT4ge1xuXHRpZihpblByb2dyZXNzW3VybF0pIHsgaW5Qcm9ncmVzc1t1cmxdLnB1c2goZG9uZSk7IHJldHVybjsgfVxuXHR2YXIgc2NyaXB0LCBuZWVkQXR0YWNoO1xuXHRpZihrZXkgIT09IHVuZGVmaW5lZCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHNjcmlwdHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBzID0gc2NyaXB0c1tpXTtcblx0XHRcdGlmKHMuZ2V0QXR0cmlidXRlKFwic3JjXCIpID09IHVybCB8fCBzLmdldEF0dHJpYnV0ZShcImRhdGEtd2VicGFja1wiKSA9PSBkYXRhV2VicGFja1ByZWZpeCArIGtleSkgeyBzY3JpcHQgPSBzOyBicmVhazsgfVxuXHRcdH1cblx0fVxuXHRpZighc2NyaXB0KSB7XG5cdFx0bmVlZEF0dGFjaCA9IHRydWU7XG5cdFx0c2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG5cblx0XHRzY3JpcHQuY2hhcnNldCA9ICd1dGYtOCc7XG5cdFx0c2NyaXB0LnRpbWVvdXQgPSAxMjA7XG5cdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubmMpIHtcblx0XHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBfX3dlYnBhY2tfcmVxdWlyZV9fLm5jKTtcblx0XHR9XG5cdFx0c2NyaXB0LnNldEF0dHJpYnV0ZShcImRhdGEtd2VicGFja1wiLCBkYXRhV2VicGFja1ByZWZpeCArIGtleSk7XG5cblx0XHRzY3JpcHQuc3JjID0gdXJsO1xuXHR9XG5cdGluUHJvZ3Jlc3NbdXJsXSA9IFtkb25lXTtcblx0dmFyIG9uU2NyaXB0Q29tcGxldGUgPSAocHJldiwgZXZlbnQpID0+IHtcblx0XHQvLyBhdm9pZCBtZW0gbGVha3MgaW4gSUUuXG5cdFx0c2NyaXB0Lm9uZXJyb3IgPSBzY3JpcHQub25sb2FkID0gbnVsbDtcblx0XHRjbGVhclRpbWVvdXQodGltZW91dCk7XG5cdFx0dmFyIGRvbmVGbnMgPSBpblByb2dyZXNzW3VybF07XG5cdFx0ZGVsZXRlIGluUHJvZ3Jlc3NbdXJsXTtcblx0XHRzY3JpcHQucGFyZW50Tm9kZSAmJiBzY3JpcHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzY3JpcHQpO1xuXHRcdGRvbmVGbnMgJiYgZG9uZUZucy5mb3JFYWNoKChmbikgPT4gKGZuKGV2ZW50KSkpO1xuXHRcdGlmKHByZXYpIHJldHVybiBwcmV2KGV2ZW50KTtcblx0fVxuXHR2YXIgdGltZW91dCA9IHNldFRpbWVvdXQob25TY3JpcHRDb21wbGV0ZS5iaW5kKG51bGwsIHVuZGVmaW5lZCwgeyB0eXBlOiAndGltZW91dCcsIHRhcmdldDogc2NyaXB0IH0pLCAxMjAwMDApO1xuXHRzY3JpcHQub25lcnJvciA9IG9uU2NyaXB0Q29tcGxldGUuYmluZChudWxsLCBzY3JpcHQub25lcnJvcik7XG5cdHNjcmlwdC5vbmxvYWQgPSBvblNjcmlwdENvbXBsZXRlLmJpbmQobnVsbCwgc2NyaXB0Lm9ubG9hZCk7XG5cdG5lZWRBdHRhY2ggJiYgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHQpO1xufTsiLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLm1hdGVyaWFscyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtYXJnaW46IDYwcHg7XG59XG4uY29udGFpbmVyLWJsb2NrIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG59XG5cbi5jb250YWluZXItaW1nIHtcbiAgd2lkdGg6IDMwMHB4O1xuICBoZWlnaHQ6IGF1dG87XG4gIGJvcmRlcjogM3B4IHNvbGlkIGFsaWNlYmx1ZTtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbn1cblxuLmNvbnRhaW5lci1ibG9jay1jYXJkIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAwcHggMzBweDtcbiAgcGFkZGluZy1ib3R0b206IDEwMHB4O1xufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvYWJvdXQuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixZQUFZO0FBQ2Q7QUFDQTtFQUNFLGFBQWE7RUFDYiw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtFQUNaLDJCQUEyQjtFQUMzQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFDaEIscUJBQXFCO0FBQ3ZCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5tYXRlcmlhbHMge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgbWFyZ2luOiA2MHB4O1xcbn1cXG4uY29udGFpbmVyLWJsb2NrIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXG59XFxuXFxuLmNvbnRhaW5lci1pbWcge1xcbiAgd2lkdGg6IDMwMHB4O1xcbiAgaGVpZ2h0OiBhdXRvO1xcbiAgYm9yZGVyOiAzcHggc29saWQgYWxpY2VibHVlO1xcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcXG59XFxuXFxuLmNvbnRhaW5lci1ibG9jay1jYXJkIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIG1hcmdpbjogMHB4IDMwcHg7XFxuICBwYWRkaW5nLWJvdHRvbTogMTAwcHg7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgZm9vdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE1MSwgMTkyLCAyMjIpO1xuICBib3JkZXItdG9wOiAzcHggc29saWQgcmdiKDIzOCwgMTIzLCA4MSk7XG4gIGhlaWdodDogMTUwcHg7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4uZm9vdGVyLWluZm8ge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLnNvY2lhbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xufVxuXG4uc29jaWFsLXZrIHtcbiAgaGVpZ2h0OiA1MHB4O1xufVxuXG4uc29jaWFsLXdoYXRzYXBwIHtcbiAgaGVpZ2h0OiA1MHB4O1xufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvZm9vdGVyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLG9DQUFvQztFQUNwQyx1Q0FBdUM7RUFDdkMsYUFBYTtFQUNiLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2IsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7QUFDZFwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJmb290ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE1MSwgMTkyLCAyMjIpO1xcbiAgYm9yZGVyLXRvcDogM3B4IHNvbGlkIHJnYigyMzgsIDEyMywgODEpO1xcbiAgaGVpZ2h0OiAxNTBweDtcXG4gIHdpZHRoOiBhdXRvO1xcbn1cXG5cXG4uZm9vdGVyLWluZm8ge1xcbiAgbWFyZ2luLXRvcDogMjBweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLnNvY2lhbCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxufVxcblxcbi5zb2NpYWwtdmsge1xcbiAgaGVpZ2h0OiA1MHB4O1xcbn1cXG5cXG4uc29jaWFsLXdoYXRzYXBwIHtcXG4gIGhlaWdodDogNTBweDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogYWxpY2VibHVlO1xufVxuLmhlYWRlci1saW5lIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAzO1xufVxuXG4uaGVhZGVyLWxvZ28gPiBpbWcge1xuICB3aWR0aDogMjAwcHg7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMztcbn1cblxuaGVhZGVyIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB3aWR0aDogMTAwJTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiA5OTtcbn1cblxuaGVhZGVyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTUxLCAxOTIsIDIyMik7XG4gIGJveC1zaGFkb3c6IDAgN3B4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICBib3JkZXItYm90dG9tOiAzcHggc29saWQgcmdiKDIzOCwgMTIzLCA4MSk7XG4gIHotaW5kZXg6IDI7XG59XG5cbi5oZWFkZXItYm9keSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBoZWlnaHQ6IDEyMHB4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uaGVhZGVyLWxpc3QtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMztcbn1cblxuLmhlYWRlci1saW5rIHtcbiAgY29sb3I6IGFsaWNlYmx1ZTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNzAwcHg7XG4gIG1hcmdpbi1yaWdodDogMjVweDtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmhlYWRlci1saW5rOmhvdmVyIHtcbiAgY29sb3I6IHJnYigyMzgsIDEyMywgODEpO1xufVxuXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxNjAwcHg7XG4gIG1hcmdpbjogMHB4IGF1dG87XG4gIHBhZGRpbmc6IDBweCAxMHB4O1xufVxuXG4uaGVhZGVyLWJ1cmdlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXItYnVyZ2VyLmFjdGl2ZTpiZWZvcmUge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gIHRvcDogOXB4O1xufVxuXG4uaGVhZGVyLWJ1cmdlci5hY3RpdmU6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICBib3R0b206IDlweDtcbn1cblxuLmhlYWRlci1idXJnZXIuYWN0aXZlIHNwYW4ge1xuICB0cmFuc2Zvcm06IHNjYWxlKDApO1xufVxuXG4uaGVhZGVyLXBob25lIHtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDI7XG59XG5cbi5oZWFkZXItcGhvbmUtbnVtYmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmhlYWRlci1waG9uZS10ZXh0IHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNDAwO1xuICBjb2xvcjogYWxpY2VibHVlO1xufVxuXG4ubnVtIHtcbiAgY29sb3I6IGFsaWNlYmx1ZTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgbGluZWFyO1xufVxuXG4ubnVtOmhvdmVyIHtcbiAgY29sb3I6IHJnYigyMzgsIDEyMywgODEpO1xufVxuXG4uYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzOCwgMTIzLCA4MSk7XG4gIHBhZGRpbmc6IDE0cHggMThweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGxpbmVhcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyO1xufVxuXG4uYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMTA0LCA3MCk7XG59XG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9oZWFkZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UscUJBQXFCO0VBQ3JCLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFlBQVk7RUFDWixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsV0FBVztFQUNYLE1BQU07RUFDTixPQUFPO0VBQ1AsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUNaLE1BQU07RUFDTixPQUFPO0VBQ1Asb0NBQW9DO0VBQ3BDLHlDQUF5QztFQUN6QywwQ0FBMEM7RUFDMUMsVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsYUFBYTtFQUNiLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsNkJBQTZCO0VBQzdCLGtCQUFrQjtFQUNsQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsNkJBQTZCO0VBQzdCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHdCQUF3QjtFQUN4QixRQUFRO0FBQ1Y7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsV0FBVztBQUNiOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQiw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSx3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSxtQ0FBbUM7RUFDbkMsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQix3Q0FBd0M7RUFDeEMsa0JBQWtCO0VBQ2xCLFVBQVU7QUFDWjs7QUFFQTtFQUNFLG1DQUFtQztBQUNyQ1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCJhIHtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIGNvbG9yOiBhbGljZWJsdWU7XFxufVxcbi5oZWFkZXItbGluZSB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB6LWluZGV4OiAzO1xcbn1cXG5cXG4uaGVhZGVyLWxvZ28gPiBpbWcge1xcbiAgd2lkdGg6IDIwMHB4O1xcbiAgbWF4LXdpZHRoOiAxMDAlO1xcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB6LWluZGV4OiAzO1xcbn1cXG5cXG5oZWFkZXIge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgd2lkdGg6IDEwMCU7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbiAgei1pbmRleDogOTk7XFxufVxcblxcbmhlYWRlcjpiZWZvcmUge1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDA7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTUxLCAxOTIsIDIyMik7XFxuICBib3gtc2hhZG93OiAwIDdweCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcXG4gIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCByZ2IoMjM4LCAxMjMsIDgxKTtcXG4gIHotaW5kZXg6IDI7XFxufVxcblxcbi5oZWFkZXItYm9keSB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgaGVpZ2h0OiAxMjBweDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5oZWFkZXItbGlzdC1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHotaW5kZXg6IDM7XFxufVxcblxcbi5oZWFkZXItbGluayB7XFxuICBjb2xvcjogYWxpY2VibHVlO1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbiAgZm9udC13ZWlnaHQ6IDcwMHB4O1xcbiAgbWFyZ2luLXJpZ2h0OiAyNXB4O1xcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5oZWFkZXItbGluazpob3ZlciB7XFxuICBjb2xvcjogcmdiKDIzOCwgMTIzLCA4MSk7XFxufVxcblxcbi5jb250YWluZXIge1xcbiAgbWF4LXdpZHRoOiAxNjAwcHg7XFxuICBtYXJnaW46IDBweCBhdXRvO1xcbiAgcGFkZGluZzogMHB4IDEwcHg7XFxufVxcblxcbi5oZWFkZXItYnVyZ2VyIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5oZWFkZXItYnVyZ2VyLmFjdGl2ZTpiZWZvcmUge1xcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xcbiAgdG9wOiA5cHg7XFxufVxcblxcbi5oZWFkZXItYnVyZ2VyLmFjdGl2ZTphZnRlciB7XFxuICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xcbiAgYm90dG9tOiA5cHg7XFxufVxcblxcbi5oZWFkZXItYnVyZ2VyLmFjdGl2ZSBzcGFuIHtcXG4gIHRyYW5zZm9ybTogc2NhbGUoMCk7XFxufVxcblxcbi5oZWFkZXItcGhvbmUge1xcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgei1pbmRleDogMjtcXG59XFxuXFxuLmhlYWRlci1waG9uZS1udW1iZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5oZWFkZXItcGhvbmUtdGV4dCB7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgY29sb3I6IGFsaWNlYmx1ZTtcXG59XFxuXFxuLm51bSB7XFxuICBjb2xvcjogYWxpY2VibHVlO1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XFxufVxcblxcbi5udW06aG92ZXIge1xcbiAgY29sb3I6IHJnYigyMzgsIDEyMywgODEpO1xcbn1cXG5cXG4uYnV0dG9uIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzgsIDEyMywgODEpO1xcbiAgcGFkZGluZzogMTRweCAxOHB4O1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBsaW5lYXI7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB6LWluZGV4OiAyO1xcbn1cXG5cXG4uYnV0dG9uOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDEwNCwgNzApO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGh0bWwsXG5ib2R5IHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4qLFxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiBhbGljZWJsdWU7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTY0LCAyMDAsIDIyNik7XG4gIGNvbG9yOiBhbGljZWJsdWU7XG4gIHBhZGRpbmctdG9wOiAxMzRweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCkge1xuICBib2R5LmxvY2sge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLmZpcnN0LWNvbnRhaW5lciB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1hcmdpbi10b3A6IDUwcHg7XG4gIH1cbiAgLmhlYWRlci1uYXYsXG4gIC5oZWFkZXItbGluZSxcbiAgLmJ0biB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaW1nIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5oZWFkZXItYnVyZ2VyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDMwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIG1hcmdpbi1yaWdodDogMzBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMztcbiAgfVxuICAuaGVhZGVyLWJ1cmdlciBzcGFuIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzOCwgMTIzLCA4MSk7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDJweDtcbiAgICB0b3A6IDlweDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlIDBzO1xuICB9XG4gIC5oZWFkZXItYnVyZ2VyOmJlZm9yZSxcbiAgLmhlYWRlci1idXJnZXI6YWZ0ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzgsIDEyMywgODEpO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMnB4O1xuICAgIGxlZnQ6IDA7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZSAwcztcbiAgfVxuICAuaGVhZGVyLWJ1cmdlcjpiZWZvcmUge1xuICAgIHRvcDogMDtcbiAgfVxuICAuaGVhZGVyLWJ1cmdlcjphZnRlciB7XG4gICAgYm90dG9tOiAwO1xuICB9XG4gIC5oZWFkZXItbGlzdCB7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogLTEwMCU7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMzYsIDE0NywgMTE1LCAwLjk5KTtcbiAgICB6LWluZGV4OiAxO1xuICAgIHBhZGRpbmc6IDE1MHB4IDEwcHggMzBweCAyMHB4O1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjlzIGVhc2UgMHM7XG4gIH1cbiAgLmhlYWRlci1saXN0LWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGhlaWdodDogNTAlO1xuICB9XG4gIC50aGlyZC1jb250YWluZXIge1xuICAgIG1heC13aWR0aDogNDUwcHg7XG4gICAgaGVpZ2h0OiA0NTBweDtcbiAgfVxuICAuaGVhZGVyLWxpc3QuYWN0aXZlIHtcbiAgICB0b3A6IDElO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuaGVhZGVyLWxvZ28gPiBpbWcge1xuICAgIG1heC13aWR0aDogMTMwcHg7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICB9XG4gIC5oZWFkZXItbGlzdCB7XG4gICAgcGFkZGluZzogMTEwcHggMTBweCAzMHB4IDIwcHg7XG4gIH1cbiAgLnRoaXJkLWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAzMDBweDtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICB9XG4gIC5maXJzdC1jb250YWluZXIge1xuICAgIG1hcmdpbjogMHB4O1xuICAgIG1hcmdpbi1yaWdodDogMjBweDtcbiAgfVxuICAudWwtaXRlbSB7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGNvbG9yOiBhbGljZWJsdWU7XG4gICAgbWFyZ2luOiAxMHB4IDBweCAwcHggMTBweDtcbiAgfVxuICAuY2FyZC1pbWcge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgfVxuICAuaGVhZGVyLWJvZHkge1xuICAgIGhlaWdodDogODBweDtcbiAgfVxuICAuaGVhZGVyLXBob25lIHtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAtMTAwJTtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMzUlO1xuICAgIG1hcmdpbi10b3A6IDgwdmg7XG4gICAgei1pbmRleDogMTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC45cyBlYXNlIDBzO1xuICB9XG4gIC5oZWFkZXItcGhvbmUtdGV4dCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuaGVhZGVyLXBob25lLmFjdGl2ZSB7XG4gICAgdG9wOiAxJTtcbiAgfVxufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBOztFQUVFLFlBQVk7QUFDZDs7QUFFQTs7O0VBR0UsVUFBVTtFQUNWLFNBQVM7RUFDVCxTQUFTO0VBQ1Qsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLG9DQUFvQztFQUNwQyxTQUFTO0VBQ1QsVUFBVTtFQUNWLG9DQUFvQztFQUNwQyxnQkFBZ0I7RUFDaEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0U7SUFDRSxnQkFBZ0I7RUFDbEI7RUFDQTtJQUNFLFlBQVk7SUFDWixnQkFBZ0I7RUFDbEI7RUFDQTs7O0lBR0UsYUFBYTtFQUNmO0VBQ0E7SUFDRSxhQUFhO0VBQ2Y7RUFDQTtJQUNFLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLFVBQVU7RUFDWjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLG1DQUFtQztJQUNuQyxPQUFPO0lBQ1AsV0FBVztJQUNYLFdBQVc7SUFDWCxRQUFRO0lBQ1IsNEJBQTRCO0VBQzlCO0VBQ0E7O0lBRUUsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxtQ0FBbUM7SUFDbkMsV0FBVztJQUNYLFdBQVc7SUFDWCxPQUFPO0lBQ1AsNEJBQTRCO0VBQzlCO0VBQ0E7SUFDRSxNQUFNO0VBQ1I7RUFDQTtJQUNFLFNBQVM7RUFDWDtFQUNBO0lBQ0UsY0FBYztJQUNkLGVBQWU7SUFDZixVQUFVO0lBQ1YsT0FBTztJQUNQLFdBQVc7SUFDWCxZQUFZO0lBQ1osMkNBQTJDO0lBQzNDLFVBQVU7SUFDViw2QkFBNkI7SUFDN0IsNEJBQTRCO0VBQzlCO0VBQ0E7SUFDRSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFdBQVc7RUFDYjtFQUNBO0lBQ0UsZ0JBQWdCO0lBQ2hCLGFBQWE7RUFDZjtFQUNBO0lBQ0UsT0FBTztFQUNUO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLGdCQUFnQjtJQUNoQixZQUFZO0VBQ2Q7RUFDQTtJQUNFLDZCQUE2QjtFQUMvQjtFQUNBO0lBQ0UsZ0JBQWdCO0lBQ2hCLGFBQWE7RUFDZjtFQUNBO0lBQ0UsV0FBVztJQUNYLGtCQUFrQjtFQUNwQjtFQUNBO0lBQ0UsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQix5QkFBeUI7RUFDM0I7RUFDQTtJQUNFLFlBQVk7RUFDZDtFQUNBO0lBQ0UsWUFBWTtFQUNkO0VBQ0E7SUFDRSxjQUFjO0lBQ2QsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsZUFBZTtJQUNmLFVBQVU7SUFDVixPQUFPO0lBQ1AsV0FBVztJQUNYLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIsVUFBVTtJQUNWLDRCQUE0QjtFQUM5QjtFQUNBO0lBQ0UsYUFBYTtFQUNmO0VBQ0E7SUFDRSxPQUFPO0VBQ1Q7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJodG1sLFxcbmJvZHkge1xcbiAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5cXG4qLFxcbio6YmVmb3JlLFxcbio6YWZ0ZXIge1xcbiAgcGFkZGluZzogMDtcXG4gIG1hcmdpbjogMDtcXG4gIGJvcmRlcjogMDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbmEge1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgY29sb3I6IGFsaWNlYmx1ZTtcXG59XFxuXFxuYm9keSB7XFxuICBmb250LWZhbWlseTogXFxcIk9wZW4gU2Fuc1xcXCIsIHNhbnMtc2VyaWY7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE2NCwgMjAwLCAyMjYpO1xcbiAgY29sb3I6IGFsaWNlYmx1ZTtcXG4gIHBhZGRpbmctdG9wOiAxMzRweDtcXG59XFxuXFxuQG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCkge1xcbiAgYm9keS5sb2NrIHtcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIH1cXG4gIC5maXJzdC1jb250YWluZXIge1xcbiAgICBoZWlnaHQ6IGF1dG87XFxuICAgIG1hcmdpbi10b3A6IDUwcHg7XFxuICB9XFxuICAuaGVhZGVyLW5hdixcXG4gIC5oZWFkZXItbGluZSxcXG4gIC5idG4ge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbiAgfVxcbiAgLmltZyB7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxuICB9XFxuICAuaGVhZGVyLWJ1cmdlciB7XFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIHdpZHRoOiAzMHB4O1xcbiAgICBoZWlnaHQ6IDIwcHg7XFxuICAgIG1hcmdpbi1yaWdodDogMzBweDtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICB6LWluZGV4OiAzO1xcbiAgfVxcbiAgLmhlYWRlci1idXJnZXIgc3BhbiB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzOCwgMTIzLCA4MSk7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDJweDtcXG4gICAgdG9wOiA5cHg7XFxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UgMHM7XFxuICB9XFxuICAuaGVhZGVyLWJ1cmdlcjpiZWZvcmUsXFxuICAuaGVhZGVyLWJ1cmdlcjphZnRlciB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgY29udGVudDogXFxcIlxcXCI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzgsIDEyMywgODEpO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgaGVpZ2h0OiAycHg7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UgMHM7XFxuICB9XFxuICAuaGVhZGVyLWJ1cmdlcjpiZWZvcmUge1xcbiAgICB0b3A6IDA7XFxuICB9XFxuICAuaGVhZGVyLWJ1cmdlcjphZnRlciB7XFxuICAgIGJvdHRvbTogMDtcXG4gIH1cXG4gIC5oZWFkZXItbGlzdCB7XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIHRvcDogLTEwMCU7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjM2LCAxNDcsIDExNSwgMC45OSk7XFxuICAgIHotaW5kZXg6IDE7XFxuICAgIHBhZGRpbmc6IDE1MHB4IDEwcHggMzBweCAyMHB4O1xcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC45cyBlYXNlIDBzO1xcbiAgfVxcbiAgLmhlYWRlci1saXN0LWNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGhlaWdodDogNTAlO1xcbiAgfVxcbiAgLnRoaXJkLWNvbnRhaW5lciB7XFxuICAgIG1heC13aWR0aDogNDUwcHg7XFxuICAgIGhlaWdodDogNDUwcHg7XFxuICB9XFxuICAuaGVhZGVyLWxpc3QuYWN0aXZlIHtcXG4gICAgdG9wOiAxJTtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XFxuICAuaGVhZGVyLWxvZ28gPiBpbWcge1xcbiAgICBtYXgtd2lkdGg6IDEzMHB4O1xcbiAgICBoZWlnaHQ6IGF1dG87XFxuICB9XFxuICAuaGVhZGVyLWxpc3Qge1xcbiAgICBwYWRkaW5nOiAxMTBweCAxMHB4IDMwcHggMjBweDtcXG4gIH1cXG4gIC50aGlyZC1jb250YWluZXIge1xcbiAgICBtYXgtd2lkdGg6IDMwMHB4O1xcbiAgICBoZWlnaHQ6IDMwMHB4O1xcbiAgfVxcbiAgLmZpcnN0LWNvbnRhaW5lciB7XFxuICAgIG1hcmdpbjogMHB4O1xcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XFxuICB9XFxuICAudWwtaXRlbSB7XFxuICAgIGZvbnQtc2l6ZTogMTVweDtcXG4gICAgY29sb3I6IGFsaWNlYmx1ZTtcXG4gICAgbWFyZ2luOiAxMHB4IDBweCAwcHggMTBweDtcXG4gIH1cXG4gIC5jYXJkLWltZyB7XFxuICAgIHdpZHRoOiAyMDBweDtcXG4gIH1cXG4gIC5oZWFkZXItYm9keSB7XFxuICAgIGhlaWdodDogODBweDtcXG4gIH1cXG4gIC5oZWFkZXItcGhvbmUge1xcbiAgICBvdmVyZmxvdzogYXV0bztcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICB0b3A6IC0xMDAlO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgaGVpZ2h0OiAzNSU7XFxuICAgIG1hcmdpbi10b3A6IDgwdmg7XFxuICAgIHotaW5kZXg6IDE7XFxuICAgIHRyYW5zaXRpb246IGFsbCAwLjlzIGVhc2UgMHM7XFxuICB9XFxuICAuaGVhZGVyLXBob25lLXRleHQge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbiAgfVxcbiAgLmhlYWRlci1waG9uZS5hY3RpdmUge1xcbiAgICB0b3A6IDElO1xcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hYm91dC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgaWYgKCFjb250ZW50LmxvY2FscyB8fCBtb2R1bGUuaG90LmludmFsaWRhdGUpIHtcbiAgICB2YXIgaXNFcXVhbExvY2FscyA9IGZ1bmN0aW9uIGlzRXF1YWxMb2NhbHMoYSwgYiwgaXNOYW1lZEV4cG9ydCkge1xuICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBwO1xuICBmb3IgKHAgaW4gYSkge1xuICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICBmb3IgKHAgaW4gYikge1xuICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAoIWFbcF0pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBpc05hbWVkRXhwb3J0ID0gIWNvbnRlbnQubG9jYWxzO1xuICAgIHZhciBvbGRMb2NhbHMgPSBpc05hbWVkRXhwb3J0ID8gbmFtZWRFeHBvcnQgOiBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYWJvdXQuY3NzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghaXNFcXVhbExvY2FscyhvbGRMb2NhbHMsIGlzTmFtZWRFeHBvcnQgPyBuYW1lZEV4cG9ydCA6IGNvbnRlbnQubG9jYWxzLCBpc05hbWVkRXhwb3J0KSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gaXNOYW1lZEV4cG9ydCA/IG5hbWVkRXhwb3J0IDogY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hYm91dC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZm9vdGVyLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5pZiAobW9kdWxlLmhvdCkge1xuICBpZiAoIWNvbnRlbnQubG9jYWxzIHx8IG1vZHVsZS5ob3QuaW52YWxpZGF0ZSkge1xuICAgIHZhciBpc0VxdWFsTG9jYWxzID0gZnVuY3Rpb24gaXNFcXVhbExvY2FscyhhLCBiLCBpc05hbWVkRXhwb3J0KSB7XG4gIGlmICghYSAmJiBiIHx8IGEgJiYgIWIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIHA7XG4gIGZvciAocCBpbiBhKSB7XG4gICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChhW3BdICE9PSBiW3BdKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIGZvciAocCBpbiBiKSB7XG4gICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmICghYVtwXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn07XG4gICAgdmFyIGlzTmFtZWRFeHBvcnQgPSAhY29udGVudC5sb2NhbHM7XG4gICAgdmFyIG9sZExvY2FscyA9IGlzTmFtZWRFeHBvcnQgPyBuYW1lZEV4cG9ydCA6IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXG4gICAgICBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9mb290ZXIuY3NzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghaXNFcXVhbExvY2FscyhvbGRMb2NhbHMsIGlzTmFtZWRFeHBvcnQgPyBuYW1lZEV4cG9ydCA6IGNvbnRlbnQubG9jYWxzLCBpc05hbWVkRXhwb3J0KSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gaXNOYW1lZEV4cG9ydCA/IG5hbWVkRXhwb3J0IDogY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9mb290ZXIuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2hlYWRlci5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgaWYgKCFjb250ZW50LmxvY2FscyB8fCBtb2R1bGUuaG90LmludmFsaWRhdGUpIHtcbiAgICB2YXIgaXNFcXVhbExvY2FscyA9IGZ1bmN0aW9uIGlzRXF1YWxMb2NhbHMoYSwgYiwgaXNOYW1lZEV4cG9ydCkge1xuICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBwO1xuICBmb3IgKHAgaW4gYSkge1xuICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICBmb3IgKHAgaW4gYikge1xuICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAoIWFbcF0pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBpc05hbWVkRXhwb3J0ID0gIWNvbnRlbnQubG9jYWxzO1xuICAgIHZhciBvbGRMb2NhbHMgPSBpc05hbWVkRXhwb3J0ID8gbmFtZWRFeHBvcnQgOiBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaGVhZGVyLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBpc05hbWVkRXhwb3J0ID8gbmFtZWRFeHBvcnQgOiBjb250ZW50LmxvY2FscywgaXNOYW1lZEV4cG9ydCkpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGlzTmFtZWRFeHBvcnQgPyBuYW1lZEV4cG9ydCA6IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaGVhZGVyLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgaWYgKCFjb250ZW50LmxvY2FscyB8fCBtb2R1bGUuaG90LmludmFsaWRhdGUpIHtcbiAgICB2YXIgaXNFcXVhbExvY2FscyA9IGZ1bmN0aW9uIGlzRXF1YWxMb2NhbHMoYSwgYiwgaXNOYW1lZEV4cG9ydCkge1xuICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBwO1xuICBmb3IgKHAgaW4gYSkge1xuICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICBmb3IgKHAgaW4gYikge1xuICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAoIWFbcF0pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBpc05hbWVkRXhwb3J0ID0gIWNvbnRlbnQubG9jYWxzO1xuICAgIHZhciBvbGRMb2NhbHMgPSBpc05hbWVkRXhwb3J0ID8gbmFtZWRFeHBvcnQgOiBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghaXNFcXVhbExvY2FscyhvbGRMb2NhbHMsIGlzTmFtZWRFeHBvcnQgPyBuYW1lZEV4cG9ydCA6IGNvbnRlbnQubG9jYWxzLCBpc05hbWVkRXhwb3J0KSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gaXNOYW1lZEV4cG9ydCA/IG5hbWVkRXhwb3J0IDogY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xucmVxdWlyZShcIi4vaGVhZGVyLmNzc1wiKTtcbnJlcXVpcmUoXCIuL3N0eWxlLmNzc1wiKTtcbnJlcXVpcmUoXCIuL2Zvb3Rlci5jc3NcIik7XG5yZXF1aXJlKFwiLi9hYm91dC5jc3NcIik7XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0aWYgKGNhY2hlZE1vZHVsZS5lcnJvciAhPT0gdW5kZWZpbmVkKSB0aHJvdyBjYWNoZWRNb2R1bGUuZXJyb3I7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdHRyeSB7XG5cdFx0dmFyIGV4ZWNPcHRpb25zID0geyBpZDogbW9kdWxlSWQsIG1vZHVsZTogbW9kdWxlLCBmYWN0b3J5OiBfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXSwgcmVxdWlyZTogX193ZWJwYWNrX3JlcXVpcmVfXyB9O1xuXHRcdF9fd2VicGFja19yZXF1aXJlX18uaS5mb3JFYWNoKGZ1bmN0aW9uKGhhbmRsZXIpIHsgaGFuZGxlcihleGVjT3B0aW9ucyk7IH0pO1xuXHRcdG1vZHVsZSA9IGV4ZWNPcHRpb25zLm1vZHVsZTtcblx0XHRleGVjT3B0aW9ucy5mYWN0b3J5LmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIGV4ZWNPcHRpb25zLnJlcXVpcmUpO1xuXHR9IGNhdGNoKGUpIHtcblx0XHRtb2R1bGUuZXJyb3IgPSBlO1xuXHRcdHRocm93IGU7XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4vLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuX193ZWJwYWNrX3JlcXVpcmVfXy5jID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fO1xuXG4vLyBleHBvc2UgdGhlIG1vZHVsZSBleGVjdXRpb24gaW50ZXJjZXB0b3Jcbl9fd2VicGFja19yZXF1aXJlX18uaSA9IFtdO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIi8vIFRoaXMgZnVuY3Rpb24gYWxsb3cgdG8gcmVmZXJlbmNlIGFsbCBjaHVua3Ncbl9fd2VicGFja19yZXF1aXJlX18uaHUgPSAoY2h1bmtJZCkgPT4ge1xuXHQvLyByZXR1cm4gdXJsIGZvciBmaWxlbmFtZXMgYmFzZWQgb24gdGVtcGxhdGVcblx0cmV0dXJuIFwiXCIgKyBjaHVua0lkICsgXCIuXCIgKyBfX3dlYnBhY2tfcmVxdWlyZV9fLmgoKSArIFwiLmhvdC11cGRhdGUuanNcIjtcbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5obXJGID0gKCkgPT4gKFwiYWJvdXQuXCIgKyBfX3dlYnBhY2tfcmVxdWlyZV9fLmgoKSArIFwiLmhvdC11cGRhdGUuanNvblwiKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCI1ZTMzOWFmZWRjZDQ0ZjY5MzdmZFwiKSIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsInZhciBjdXJyZW50TW9kdWxlRGF0YSA9IHt9O1xudmFyIGluc3RhbGxlZE1vZHVsZXMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmM7XG5cbi8vIG1vZHVsZSBhbmQgcmVxdWlyZSBjcmVhdGlvblxudmFyIGN1cnJlbnRDaGlsZE1vZHVsZTtcbnZhciBjdXJyZW50UGFyZW50cyA9IFtdO1xuXG4vLyBzdGF0dXNcbnZhciByZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMgPSBbXTtcbnZhciBjdXJyZW50U3RhdHVzID0gXCJpZGxlXCI7XG5cbi8vIHdoaWxlIGRvd25sb2FkaW5nXG52YXIgYmxvY2tpbmdQcm9taXNlcyA9IDA7XG52YXIgYmxvY2tpbmdQcm9taXNlc1dhaXRpbmcgPSBbXTtcblxuLy8gVGhlIHVwZGF0ZSBpbmZvXG52YXIgY3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnM7XG52YXIgcXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzO1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmhtckQgPSBjdXJyZW50TW9kdWxlRGF0YTtcblxuX193ZWJwYWNrX3JlcXVpcmVfXy5pLnB1c2goZnVuY3Rpb24gKG9wdGlvbnMpIHtcblx0dmFyIG1vZHVsZSA9IG9wdGlvbnMubW9kdWxlO1xuXHR2YXIgcmVxdWlyZSA9IGNyZWF0ZVJlcXVpcmUob3B0aW9ucy5yZXF1aXJlLCBvcHRpb25zLmlkKTtcblx0bW9kdWxlLmhvdCA9IGNyZWF0ZU1vZHVsZUhvdE9iamVjdChvcHRpb25zLmlkLCBtb2R1bGUpO1xuXHRtb2R1bGUucGFyZW50cyA9IGN1cnJlbnRQYXJlbnRzO1xuXHRtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0Y3VycmVudFBhcmVudHMgPSBbXTtcblx0b3B0aW9ucy5yZXF1aXJlID0gcmVxdWlyZTtcbn0pO1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmhtckMgPSB7fTtcbl9fd2VicGFja19yZXF1aXJlX18uaG1ySSA9IHt9O1xuXG5mdW5jdGlvbiBjcmVhdGVSZXF1aXJlKHJlcXVpcmUsIG1vZHVsZUlkKSB7XG5cdHZhciBtZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xuXHRpZiAoIW1lKSByZXR1cm4gcmVxdWlyZTtcblx0dmFyIGZuID0gZnVuY3Rpb24gKHJlcXVlc3QpIHtcblx0XHRpZiAobWUuaG90LmFjdGl2ZSkge1xuXHRcdFx0aWYgKGluc3RhbGxlZE1vZHVsZXNbcmVxdWVzdF0pIHtcblx0XHRcdFx0dmFyIHBhcmVudHMgPSBpbnN0YWxsZWRNb2R1bGVzW3JlcXVlc3RdLnBhcmVudHM7XG5cdFx0XHRcdGlmIChwYXJlbnRzLmluZGV4T2YobW9kdWxlSWQpID09PSAtMSkge1xuXHRcdFx0XHRcdHBhcmVudHMucHVzaChtb2R1bGVJZCk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGN1cnJlbnRQYXJlbnRzID0gW21vZHVsZUlkXTtcblx0XHRcdFx0Y3VycmVudENoaWxkTW9kdWxlID0gcmVxdWVzdDtcblx0XHRcdH1cblx0XHRcdGlmIChtZS5jaGlsZHJlbi5pbmRleE9mKHJlcXVlc3QpID09PSAtMSkge1xuXHRcdFx0XHRtZS5jaGlsZHJlbi5wdXNoKHJlcXVlc3QpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRjb25zb2xlLndhcm4oXG5cdFx0XHRcdFwiW0hNUl0gdW5leHBlY3RlZCByZXF1aXJlKFwiICtcblx0XHRcdFx0XHRyZXF1ZXN0ICtcblx0XHRcdFx0XHRcIikgZnJvbSBkaXNwb3NlZCBtb2R1bGUgXCIgK1xuXHRcdFx0XHRcdG1vZHVsZUlkXG5cdFx0XHQpO1xuXHRcdFx0Y3VycmVudFBhcmVudHMgPSBbXTtcblx0XHR9XG5cdFx0cmV0dXJuIHJlcXVpcmUocmVxdWVzdCk7XG5cdH07XG5cdHZhciBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IgPSBmdW5jdGlvbiAobmFtZSkge1xuXHRcdHJldHVybiB7XG5cdFx0XHRjb25maWd1cmFibGU6IHRydWUsXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdHJldHVybiByZXF1aXJlW25hbWVdO1xuXHRcdFx0fSxcblx0XHRcdHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XG5cdFx0XHRcdHJlcXVpcmVbbmFtZV0gPSB2YWx1ZTtcblx0XHRcdH1cblx0XHR9O1xuXHR9O1xuXHRmb3IgKHZhciBuYW1lIGluIHJlcXVpcmUpIHtcblx0XHRpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHJlcXVpcmUsIG5hbWUpICYmIG5hbWUgIT09IFwiZVwiKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZm4sIG5hbWUsIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvcihuYW1lKSk7XG5cdFx0fVxuXHR9XG5cdGZuLmUgPSBmdW5jdGlvbiAoY2h1bmtJZCwgZmV0Y2hQcmlvcml0eSkge1xuXHRcdHJldHVybiB0cmFja0Jsb2NraW5nUHJvbWlzZShyZXF1aXJlLmUoY2h1bmtJZCwgZmV0Y2hQcmlvcml0eSkpO1xuXHR9O1xuXHRyZXR1cm4gZm47XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZU1vZHVsZUhvdE9iamVjdChtb2R1bGVJZCwgbWUpIHtcblx0dmFyIF9tYWluID0gY3VycmVudENoaWxkTW9kdWxlICE9PSBtb2R1bGVJZDtcblx0dmFyIGhvdCA9IHtcblx0XHQvLyBwcml2YXRlIHN0dWZmXG5cdFx0X2FjY2VwdGVkRGVwZW5kZW5jaWVzOiB7fSxcblx0XHRfYWNjZXB0ZWRFcnJvckhhbmRsZXJzOiB7fSxcblx0XHRfZGVjbGluZWREZXBlbmRlbmNpZXM6IHt9LFxuXHRcdF9zZWxmQWNjZXB0ZWQ6IGZhbHNlLFxuXHRcdF9zZWxmRGVjbGluZWQ6IGZhbHNlLFxuXHRcdF9zZWxmSW52YWxpZGF0ZWQ6IGZhbHNlLFxuXHRcdF9kaXNwb3NlSGFuZGxlcnM6IFtdLFxuXHRcdF9tYWluOiBfbWFpbixcblx0XHRfcmVxdWlyZVNlbGY6IGZ1bmN0aW9uICgpIHtcblx0XHRcdGN1cnJlbnRQYXJlbnRzID0gbWUucGFyZW50cy5zbGljZSgpO1xuXHRcdFx0Y3VycmVudENoaWxkTW9kdWxlID0gX21haW4gPyB1bmRlZmluZWQgOiBtb2R1bGVJZDtcblx0XHRcdF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpO1xuXHRcdH0sXG5cblx0XHQvLyBNb2R1bGUgQVBJXG5cdFx0YWN0aXZlOiB0cnVlLFxuXHRcdGFjY2VwdDogZnVuY3Rpb24gKGRlcCwgY2FsbGJhY2ssIGVycm9ySGFuZGxlcikge1xuXHRcdFx0aWYgKGRlcCA9PT0gdW5kZWZpbmVkKSBob3QuX3NlbGZBY2NlcHRlZCA9IHRydWU7XG5cdFx0XHRlbHNlIGlmICh0eXBlb2YgZGVwID09PSBcImZ1bmN0aW9uXCIpIGhvdC5fc2VsZkFjY2VwdGVkID0gZGVwO1xuXHRcdFx0ZWxzZSBpZiAodHlwZW9mIGRlcCA9PT0gXCJvYmplY3RcIiAmJiBkZXAgIT09IG51bGwpIHtcblx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBkZXAubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0XHRob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW2RlcFtpXV0gPSBjYWxsYmFjayB8fCBmdW5jdGlvbiAoKSB7fTtcblx0XHRcdFx0XHRob3QuX2FjY2VwdGVkRXJyb3JIYW5kbGVyc1tkZXBbaV1dID0gZXJyb3JIYW5kbGVyO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW2RlcF0gPSBjYWxsYmFjayB8fCBmdW5jdGlvbiAoKSB7fTtcblx0XHRcdFx0aG90Ll9hY2NlcHRlZEVycm9ySGFuZGxlcnNbZGVwXSA9IGVycm9ySGFuZGxlcjtcblx0XHRcdH1cblx0XHR9LFxuXHRcdGRlY2xpbmU6IGZ1bmN0aW9uIChkZXApIHtcblx0XHRcdGlmIChkZXAgPT09IHVuZGVmaW5lZCkgaG90Ll9zZWxmRGVjbGluZWQgPSB0cnVlO1xuXHRcdFx0ZWxzZSBpZiAodHlwZW9mIGRlcCA9PT0gXCJvYmplY3RcIiAmJiBkZXAgIT09IG51bGwpXG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgZGVwLmxlbmd0aDsgaSsrKVxuXHRcdFx0XHRcdGhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbZGVwW2ldXSA9IHRydWU7XG5cdFx0XHRlbHNlIGhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbZGVwXSA9IHRydWU7XG5cdFx0fSxcblx0XHRkaXNwb3NlOiBmdW5jdGlvbiAoY2FsbGJhY2spIHtcblx0XHRcdGhvdC5fZGlzcG9zZUhhbmRsZXJzLnB1c2goY2FsbGJhY2spO1xuXHRcdH0sXG5cdFx0YWRkRGlzcG9zZUhhbmRsZXI6IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuXHRcdFx0aG90Ll9kaXNwb3NlSGFuZGxlcnMucHVzaChjYWxsYmFjayk7XG5cdFx0fSxcblx0XHRyZW1vdmVEaXNwb3NlSGFuZGxlcjogZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG5cdFx0XHR2YXIgaWR4ID0gaG90Ll9kaXNwb3NlSGFuZGxlcnMuaW5kZXhPZihjYWxsYmFjayk7XG5cdFx0XHRpZiAoaWR4ID49IDApIGhvdC5fZGlzcG9zZUhhbmRsZXJzLnNwbGljZShpZHgsIDEpO1xuXHRcdH0sXG5cdFx0aW52YWxpZGF0ZTogZnVuY3Rpb24gKCkge1xuXHRcdFx0dGhpcy5fc2VsZkludmFsaWRhdGVkID0gdHJ1ZTtcblx0XHRcdHN3aXRjaCAoY3VycmVudFN0YXR1cykge1xuXHRcdFx0XHRjYXNlIFwiaWRsZVwiOlxuXHRcdFx0XHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzID0gW107XG5cdFx0XHRcdFx0T2JqZWN0LmtleXMoX193ZWJwYWNrX3JlcXVpcmVfXy5obXJJKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uaG1ySVtrZXldKFxuXHRcdFx0XHRcdFx0XHRtb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0Y3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnNcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0c2V0U3RhdHVzKFwicmVhZHlcIik7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJyZWFkeVwiOlxuXHRcdFx0XHRcdE9iamVjdC5rZXlzKF9fd2VicGFja19yZXF1aXJlX18uaG1ySSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0XHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmhtcklba2V5XShcblx0XHRcdFx0XHRcdFx0bW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwicHJlcGFyZVwiOlxuXHRcdFx0XHRjYXNlIFwiY2hlY2tcIjpcblx0XHRcdFx0Y2FzZSBcImRpc3Bvc2VcIjpcblx0XHRcdFx0Y2FzZSBcImFwcGx5XCI6XG5cdFx0XHRcdFx0KHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcyA9IHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcyB8fCBbXSkucHVzaChcblx0XHRcdFx0XHRcdG1vZHVsZUlkXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHQvLyBpZ25vcmUgcmVxdWVzdHMgaW4gZXJyb3Igc3RhdGVzXG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIE1hbmFnZW1lbnQgQVBJXG5cdFx0Y2hlY2s6IGhvdENoZWNrLFxuXHRcdGFwcGx5OiBob3RBcHBseSxcblx0XHRzdGF0dXM6IGZ1bmN0aW9uIChsKSB7XG5cdFx0XHRpZiAoIWwpIHJldHVybiBjdXJyZW50U3RhdHVzO1xuXHRcdFx0cmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzLnB1c2gobCk7XG5cdFx0fSxcblx0XHRhZGRTdGF0dXNIYW5kbGVyOiBmdW5jdGlvbiAobCkge1xuXHRcdFx0cmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzLnB1c2gobCk7XG5cdFx0fSxcblx0XHRyZW1vdmVTdGF0dXNIYW5kbGVyOiBmdW5jdGlvbiAobCkge1xuXHRcdFx0dmFyIGlkeCA9IHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycy5pbmRleE9mKGwpO1xuXHRcdFx0aWYgKGlkeCA+PSAwKSByZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMuc3BsaWNlKGlkeCwgMSk7XG5cdFx0fSxcblxuXHRcdC8vaW5oZXJpdCBmcm9tIHByZXZpb3VzIGRpc3Bvc2UgY2FsbFxuXHRcdGRhdGE6IGN1cnJlbnRNb2R1bGVEYXRhW21vZHVsZUlkXVxuXHR9O1xuXHRjdXJyZW50Q2hpbGRNb2R1bGUgPSB1bmRlZmluZWQ7XG5cdHJldHVybiBob3Q7XG59XG5cbmZ1bmN0aW9uIHNldFN0YXR1cyhuZXdTdGF0dXMpIHtcblx0Y3VycmVudFN0YXR1cyA9IG5ld1N0YXR1cztcblx0dmFyIHJlc3VsdHMgPSBbXTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycy5sZW5ndGg7IGkrKylcblx0XHRyZXN1bHRzW2ldID0gcmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzW2ldLmNhbGwobnVsbCwgbmV3U3RhdHVzKTtcblxuXHRyZXR1cm4gUHJvbWlzZS5hbGwocmVzdWx0cykudGhlbihmdW5jdGlvbiAoKSB7fSk7XG59XG5cbmZ1bmN0aW9uIHVuYmxvY2soKSB7XG5cdGlmICgtLWJsb2NraW5nUHJvbWlzZXMgPT09IDApIHtcblx0XHRzZXRTdGF0dXMoXCJyZWFkeVwiKS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRcdGlmIChibG9ja2luZ1Byb21pc2VzID09PSAwKSB7XG5cdFx0XHRcdHZhciBsaXN0ID0gYmxvY2tpbmdQcm9taXNlc1dhaXRpbmc7XG5cdFx0XHRcdGJsb2NraW5nUHJvbWlzZXNXYWl0aW5nID0gW107XG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdGxpc3RbaV0oKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0pO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHRyYWNrQmxvY2tpbmdQcm9taXNlKHByb21pc2UpIHtcblx0c3dpdGNoIChjdXJyZW50U3RhdHVzKSB7XG5cdFx0Y2FzZSBcInJlYWR5XCI6XG5cdFx0XHRzZXRTdGF0dXMoXCJwcmVwYXJlXCIpO1xuXHRcdC8qIGZhbGx0aHJvdWdoICovXG5cdFx0Y2FzZSBcInByZXBhcmVcIjpcblx0XHRcdGJsb2NraW5nUHJvbWlzZXMrKztcblx0XHRcdHByb21pc2UudGhlbih1bmJsb2NrLCB1bmJsb2NrKTtcblx0XHRcdHJldHVybiBwcm9taXNlO1xuXHRcdGRlZmF1bHQ6XG5cdFx0XHRyZXR1cm4gcHJvbWlzZTtcblx0fVxufVxuXG5mdW5jdGlvbiB3YWl0Rm9yQmxvY2tpbmdQcm9taXNlcyhmbikge1xuXHRpZiAoYmxvY2tpbmdQcm9taXNlcyA9PT0gMCkgcmV0dXJuIGZuKCk7XG5cdHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuXHRcdGJsb2NraW5nUHJvbWlzZXNXYWl0aW5nLnB1c2goZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVzb2x2ZShmbigpKTtcblx0XHR9KTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGhvdENoZWNrKGFwcGx5T25VcGRhdGUpIHtcblx0aWYgKGN1cnJlbnRTdGF0dXMgIT09IFwiaWRsZVwiKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiY2hlY2soKSBpcyBvbmx5IGFsbG93ZWQgaW4gaWRsZSBzdGF0dXNcIik7XG5cdH1cblx0cmV0dXJuIHNldFN0YXR1cyhcImNoZWNrXCIpXG5cdFx0LnRoZW4oX193ZWJwYWNrX3JlcXVpcmVfXy5obXJNKVxuXHRcdC50aGVuKGZ1bmN0aW9uICh1cGRhdGUpIHtcblx0XHRcdGlmICghdXBkYXRlKSB7XG5cdFx0XHRcdHJldHVybiBzZXRTdGF0dXMoYXBwbHlJbnZhbGlkYXRlZE1vZHVsZXMoKSA/IFwicmVhZHlcIiA6IFwiaWRsZVwiKS50aGVuKFxuXHRcdFx0XHRcdGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0KTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHNldFN0YXR1cyhcInByZXBhcmVcIikudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdHZhciB1cGRhdGVkTW9kdWxlcyA9IFtdO1xuXHRcdFx0XHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycyA9IFtdO1xuXG5cdFx0XHRcdHJldHVybiBQcm9taXNlLmFsbChcblx0XHRcdFx0XHRPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckMpLnJlZHVjZShmdW5jdGlvbiAoXG5cdFx0XHRcdFx0XHRwcm9taXNlcyxcblx0XHRcdFx0XHRcdGtleVxuXHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5obXJDW2tleV0oXG5cdFx0XHRcdFx0XHRcdHVwZGF0ZS5jLFxuXHRcdFx0XHRcdFx0XHR1cGRhdGUucixcblx0XHRcdFx0XHRcdFx0dXBkYXRlLm0sXG5cdFx0XHRcdFx0XHRcdHByb21pc2VzLFxuXHRcdFx0XHRcdFx0XHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycyxcblx0XHRcdFx0XHRcdFx0dXBkYXRlZE1vZHVsZXNcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gcHJvbWlzZXM7XG5cdFx0XHRcdFx0fSwgW10pXG5cdFx0XHRcdCkudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHdhaXRGb3JCbG9ja2luZ1Byb21pc2VzKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdGlmIChhcHBseU9uVXBkYXRlKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBpbnRlcm5hbEFwcGx5KGFwcGx5T25VcGRhdGUpO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHNldFN0YXR1cyhcInJlYWR5XCIpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiB1cGRhdGVkTW9kdWxlcztcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cdFx0fSk7XG59XG5cbmZ1bmN0aW9uIGhvdEFwcGx5KG9wdGlvbnMpIHtcblx0aWYgKGN1cnJlbnRTdGF0dXMgIT09IFwicmVhZHlcIikge1xuXHRcdHJldHVybiBQcm9taXNlLnJlc29sdmUoKS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcihcblx0XHRcdFx0XCJhcHBseSgpIGlzIG9ubHkgYWxsb3dlZCBpbiByZWFkeSBzdGF0dXMgKHN0YXRlOiBcIiArXG5cdFx0XHRcdFx0Y3VycmVudFN0YXR1cyArXG5cdFx0XHRcdFx0XCIpXCJcblx0XHRcdCk7XG5cdFx0fSk7XG5cdH1cblx0cmV0dXJuIGludGVybmFsQXBwbHkob3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIGludGVybmFsQXBwbHkob3B0aW9ucykge1xuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRhcHBseUludmFsaWRhdGVkTW9kdWxlcygpO1xuXG5cdHZhciByZXN1bHRzID0gY3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMubWFwKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG5cdFx0cmV0dXJuIGhhbmRsZXIob3B0aW9ucyk7XG5cdH0pO1xuXHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycyA9IHVuZGVmaW5lZDtcblxuXHR2YXIgZXJyb3JzID0gcmVzdWx0c1xuXHRcdC5tYXAoZnVuY3Rpb24gKHIpIHtcblx0XHRcdHJldHVybiByLmVycm9yO1xuXHRcdH0pXG5cdFx0LmZpbHRlcihCb29sZWFuKTtcblxuXHRpZiAoZXJyb3JzLmxlbmd0aCA+IDApIHtcblx0XHRyZXR1cm4gc2V0U3RhdHVzKFwiYWJvcnRcIikudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHR0aHJvdyBlcnJvcnNbMF07XG5cdFx0fSk7XG5cdH1cblxuXHQvLyBOb3cgaW4gXCJkaXNwb3NlXCIgcGhhc2Vcblx0dmFyIGRpc3Bvc2VQcm9taXNlID0gc2V0U3RhdHVzKFwiZGlzcG9zZVwiKTtcblxuXHRyZXN1bHRzLmZvckVhY2goZnVuY3Rpb24gKHJlc3VsdCkge1xuXHRcdGlmIChyZXN1bHQuZGlzcG9zZSkgcmVzdWx0LmRpc3Bvc2UoKTtcblx0fSk7XG5cblx0Ly8gTm93IGluIFwiYXBwbHlcIiBwaGFzZVxuXHR2YXIgYXBwbHlQcm9taXNlID0gc2V0U3RhdHVzKFwiYXBwbHlcIik7XG5cblx0dmFyIGVycm9yO1xuXHR2YXIgcmVwb3J0RXJyb3IgPSBmdW5jdGlvbiAoZXJyKSB7XG5cdFx0aWYgKCFlcnJvcikgZXJyb3IgPSBlcnI7XG5cdH07XG5cblx0dmFyIG91dGRhdGVkTW9kdWxlcyA9IFtdO1xuXHRyZXN1bHRzLmZvckVhY2goZnVuY3Rpb24gKHJlc3VsdCkge1xuXHRcdGlmIChyZXN1bHQuYXBwbHkpIHtcblx0XHRcdHZhciBtb2R1bGVzID0gcmVzdWx0LmFwcGx5KHJlcG9ydEVycm9yKTtcblx0XHRcdGlmIChtb2R1bGVzKSB7XG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdG91dGRhdGVkTW9kdWxlcy5wdXNoKG1vZHVsZXNbaV0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9KTtcblxuXHRyZXR1cm4gUHJvbWlzZS5hbGwoW2Rpc3Bvc2VQcm9taXNlLCBhcHBseVByb21pc2VdKS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHQvLyBoYW5kbGUgZXJyb3JzIGluIGFjY2VwdCBoYW5kbGVycyBhbmQgc2VsZiBhY2NlcHRlZCBtb2R1bGUgbG9hZFxuXHRcdGlmIChlcnJvcikge1xuXHRcdFx0cmV0dXJuIHNldFN0YXR1cyhcImZhaWxcIikudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdHRocm93IGVycm9yO1xuXHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0aWYgKHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcykge1xuXHRcdFx0cmV0dXJuIGludGVybmFsQXBwbHkob3B0aW9ucykudGhlbihmdW5jdGlvbiAobGlzdCkge1xuXHRcdFx0XHRvdXRkYXRlZE1vZHVsZXMuZm9yRWFjaChmdW5jdGlvbiAobW9kdWxlSWQpIHtcblx0XHRcdFx0XHRpZiAobGlzdC5pbmRleE9mKG1vZHVsZUlkKSA8IDApIGxpc3QucHVzaChtb2R1bGVJZCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRyZXR1cm4gbGlzdDtcblx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdHJldHVybiBzZXRTdGF0dXMoXCJpZGxlXCIpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIG91dGRhdGVkTW9kdWxlcztcblx0XHR9KTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGFwcGx5SW52YWxpZGF0ZWRNb2R1bGVzKCkge1xuXHRpZiAocXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzKSB7XG5cdFx0aWYgKCFjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycykgY3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMgPSBbXTtcblx0XHRPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdFx0cXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24gKG1vZHVsZUlkKSB7XG5cdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uaG1ySVtrZXldKFxuXHRcdFx0XHRcdG1vZHVsZUlkLFxuXHRcdFx0XHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzXG5cdFx0XHRcdCk7XG5cdFx0XHR9KTtcblx0XHR9KTtcblx0XHRxdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMgPSB1bmRlZmluZWQ7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cbn0iLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkge1xuXHRcdFx0dmFyIGkgPSBzY3JpcHRzLmxlbmd0aCAtIDE7XG5cdFx0XHR3aGlsZSAoaSA+IC0xICYmICghc2NyaXB0VXJsIHx8ICEvXmh0dHAocz8pOi8udGVzdChzY3JpcHRVcmwpKSkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIi8vIG5vIGJhc2VVUklcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0gX193ZWJwYWNrX3JlcXVpcmVfXy5obXJTX2pzb25wID0gX193ZWJwYWNrX3JlcXVpcmVfXy5obXJTX2pzb25wIHx8IHtcblx0NTk0OiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxudmFyIGN1cnJlbnRVcGRhdGVkTW9kdWxlc0xpc3Q7XG52YXIgd2FpdGluZ1VwZGF0ZVJlc29sdmVzID0ge307XG5mdW5jdGlvbiBsb2FkVXBkYXRlQ2h1bmsoY2h1bmtJZCwgdXBkYXRlZE1vZHVsZXNMaXN0KSB7XG5cdGN1cnJlbnRVcGRhdGVkTW9kdWxlc0xpc3QgPSB1cGRhdGVkTW9kdWxlc0xpc3Q7XG5cdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0d2FpdGluZ1VwZGF0ZVJlc29sdmVzW2NodW5rSWRdID0gcmVzb2x2ZTtcblx0XHQvLyBzdGFydCB1cGRhdGUgY2h1bmsgbG9hZGluZ1xuXHRcdHZhciB1cmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLnAgKyBfX3dlYnBhY2tfcmVxdWlyZV9fLmh1KGNodW5rSWQpO1xuXHRcdC8vIGNyZWF0ZSBlcnJvciBiZWZvcmUgc3RhY2sgdW53b3VuZCB0byBnZXQgdXNlZnVsIHN0YWNrdHJhY2UgbGF0ZXJcblx0XHR2YXIgZXJyb3IgPSBuZXcgRXJyb3IoKTtcblx0XHR2YXIgbG9hZGluZ0VuZGVkID0gKGV2ZW50KSA9PiB7XG5cdFx0XHRpZih3YWl0aW5nVXBkYXRlUmVzb2x2ZXNbY2h1bmtJZF0pIHtcblx0XHRcdFx0d2FpdGluZ1VwZGF0ZVJlc29sdmVzW2NodW5rSWRdID0gdW5kZWZpbmVkXG5cdFx0XHRcdHZhciBlcnJvclR5cGUgPSBldmVudCAmJiAoZXZlbnQudHlwZSA9PT0gJ2xvYWQnID8gJ21pc3NpbmcnIDogZXZlbnQudHlwZSk7XG5cdFx0XHRcdHZhciByZWFsU3JjID0gZXZlbnQgJiYgZXZlbnQudGFyZ2V0ICYmIGV2ZW50LnRhcmdldC5zcmM7XG5cdFx0XHRcdGVycm9yLm1lc3NhZ2UgPSAnTG9hZGluZyBob3QgdXBkYXRlIGNodW5rICcgKyBjaHVua0lkICsgJyBmYWlsZWQuXFxuKCcgKyBlcnJvclR5cGUgKyAnOiAnICsgcmVhbFNyYyArICcpJztcblx0XHRcdFx0ZXJyb3IubmFtZSA9ICdDaHVua0xvYWRFcnJvcic7XG5cdFx0XHRcdGVycm9yLnR5cGUgPSBlcnJvclR5cGU7XG5cdFx0XHRcdGVycm9yLnJlcXVlc3QgPSByZWFsU3JjO1xuXHRcdFx0XHRyZWplY3QoZXJyb3IpO1xuXHRcdFx0fVxuXHRcdH07XG5cdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5sKHVybCwgbG9hZGluZ0VuZGVkKTtcblx0fSk7XG59XG5cbnNlbGZbXCJ3ZWJwYWNrSG90VXBkYXRlZmlyc3RfbGF5b3V0XCJdID0gKGNodW5rSWQsIG1vcmVNb2R1bGVzLCBydW50aW1lKSA9PiB7XG5cdGZvcih2YXIgbW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8obW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuXHRcdFx0Y3VycmVudFVwZGF0ZVttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG5cdFx0XHRpZihjdXJyZW50VXBkYXRlZE1vZHVsZXNMaXN0KSBjdXJyZW50VXBkYXRlZE1vZHVsZXNMaXN0LnB1c2gobW9kdWxlSWQpO1xuXHRcdH1cblx0fVxuXHRpZihydW50aW1lKSBjdXJyZW50VXBkYXRlUnVudGltZS5wdXNoKHJ1bnRpbWUpO1xuXHRpZih3YWl0aW5nVXBkYXRlUmVzb2x2ZXNbY2h1bmtJZF0pIHtcblx0XHR3YWl0aW5nVXBkYXRlUmVzb2x2ZXNbY2h1bmtJZF0oKTtcblx0XHR3YWl0aW5nVXBkYXRlUmVzb2x2ZXNbY2h1bmtJZF0gPSB1bmRlZmluZWQ7XG5cdH1cbn07XG5cbnZhciBjdXJyZW50VXBkYXRlQ2h1bmtzO1xudmFyIGN1cnJlbnRVcGRhdGU7XG52YXIgY3VycmVudFVwZGF0ZVJlbW92ZWRDaHVua3M7XG52YXIgY3VycmVudFVwZGF0ZVJ1bnRpbWU7XG5mdW5jdGlvbiBhcHBseUhhbmRsZXIob3B0aW9ucykge1xuXHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5mKSBkZWxldGUgX193ZWJwYWNrX3JlcXVpcmVfXy5mLmpzb25wSG1yO1xuXHRjdXJyZW50VXBkYXRlQ2h1bmtzID0gdW5kZWZpbmVkO1xuXHRmdW5jdGlvbiBnZXRBZmZlY3RlZE1vZHVsZUVmZmVjdHModXBkYXRlTW9kdWxlSWQpIHtcblx0XHR2YXIgb3V0ZGF0ZWRNb2R1bGVzID0gW3VwZGF0ZU1vZHVsZUlkXTtcblx0XHR2YXIgb3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSB7fTtcblxuXHRcdHZhciBxdWV1ZSA9IG91dGRhdGVkTW9kdWxlcy5tYXAoZnVuY3Rpb24gKGlkKSB7XG5cdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRjaGFpbjogW2lkXSxcblx0XHRcdFx0aWQ6IGlkXG5cdFx0XHR9O1xuXHRcdH0pO1xuXHRcdHdoaWxlIChxdWV1ZS5sZW5ndGggPiAwKSB7XG5cdFx0XHR2YXIgcXVldWVJdGVtID0gcXVldWUucG9wKCk7XG5cdFx0XHR2YXIgbW9kdWxlSWQgPSBxdWV1ZUl0ZW0uaWQ7XG5cdFx0XHR2YXIgY2hhaW4gPSBxdWV1ZUl0ZW0uY2hhaW47XG5cdFx0XHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW21vZHVsZUlkXTtcblx0XHRcdGlmIChcblx0XHRcdFx0IW1vZHVsZSB8fFxuXHRcdFx0XHQobW9kdWxlLmhvdC5fc2VsZkFjY2VwdGVkICYmICFtb2R1bGUuaG90Ll9zZWxmSW52YWxpZGF0ZWQpXG5cdFx0XHQpXG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0aWYgKG1vZHVsZS5ob3QuX3NlbGZEZWNsaW5lZCkge1xuXHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdHR5cGU6IFwic2VsZi1kZWNsaW5lZFwiLFxuXHRcdFx0XHRcdGNoYWluOiBjaGFpbixcblx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWRcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHRcdGlmIChtb2R1bGUuaG90Ll9tYWluKSB7XG5cdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0dHlwZTogXCJ1bmFjY2VwdGVkXCIsXG5cdFx0XHRcdFx0Y2hhaW46IGNoYWluLFxuXHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZFxuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtb2R1bGUucGFyZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHR2YXIgcGFyZW50SWQgPSBtb2R1bGUucGFyZW50c1tpXTtcblx0XHRcdFx0dmFyIHBhcmVudCA9IF9fd2VicGFja19yZXF1aXJlX18uY1twYXJlbnRJZF07XG5cdFx0XHRcdGlmICghcGFyZW50KSBjb250aW51ZTtcblx0XHRcdFx0aWYgKHBhcmVudC5ob3QuX2RlY2xpbmVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSkge1xuXHRcdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0XHR0eXBlOiBcImRlY2xpbmVkXCIsXG5cdFx0XHRcdFx0XHRjaGFpbjogY2hhaW4uY29uY2F0KFtwYXJlbnRJZF0pLFxuXHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0cGFyZW50SWQ6IHBhcmVudElkXG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAob3V0ZGF0ZWRNb2R1bGVzLmluZGV4T2YocGFyZW50SWQpICE9PSAtMSkgY29udGludWU7XG5cdFx0XHRcdGlmIChwYXJlbnQuaG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0pIHtcblx0XHRcdFx0XHRpZiAoIW91dGRhdGVkRGVwZW5kZW5jaWVzW3BhcmVudElkXSlcblx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW3BhcmVudElkXSA9IFtdO1xuXHRcdFx0XHRcdGFkZEFsbFRvU2V0KG91dGRhdGVkRGVwZW5kZW5jaWVzW3BhcmVudElkXSwgW21vZHVsZUlkXSk7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZGVsZXRlIG91dGRhdGVkRGVwZW5kZW5jaWVzW3BhcmVudElkXTtcblx0XHRcdFx0b3V0ZGF0ZWRNb2R1bGVzLnB1c2gocGFyZW50SWQpO1xuXHRcdFx0XHRxdWV1ZS5wdXNoKHtcblx0XHRcdFx0XHRjaGFpbjogY2hhaW4uY29uY2F0KFtwYXJlbnRJZF0pLFxuXHRcdFx0XHRcdGlkOiBwYXJlbnRJZFxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4ge1xuXHRcdFx0dHlwZTogXCJhY2NlcHRlZFwiLFxuXHRcdFx0bW9kdWxlSWQ6IHVwZGF0ZU1vZHVsZUlkLFxuXHRcdFx0b3V0ZGF0ZWRNb2R1bGVzOiBvdXRkYXRlZE1vZHVsZXMsXG5cdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llczogb3V0ZGF0ZWREZXBlbmRlbmNpZXNcblx0XHR9O1xuXHR9XG5cblx0ZnVuY3Rpb24gYWRkQWxsVG9TZXQoYSwgYikge1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgYi5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBiW2ldO1xuXHRcdFx0aWYgKGEuaW5kZXhPZihpdGVtKSA9PT0gLTEpIGEucHVzaChpdGVtKTtcblx0XHR9XG5cdH1cblxuXHQvLyBhdCBiZWdpbiBhbGwgdXBkYXRlcyBtb2R1bGVzIGFyZSBvdXRkYXRlZFxuXHQvLyB0aGUgXCJvdXRkYXRlZFwiIHN0YXR1cyBjYW4gcHJvcGFnYXRlIHRvIHBhcmVudHMgaWYgdGhleSBkb24ndCBhY2NlcHQgdGhlIGNoaWxkcmVuXG5cdHZhciBvdXRkYXRlZERlcGVuZGVuY2llcyA9IHt9O1xuXHR2YXIgb3V0ZGF0ZWRNb2R1bGVzID0gW107XG5cdHZhciBhcHBsaWVkVXBkYXRlID0ge307XG5cblx0dmFyIHdhcm5VbmV4cGVjdGVkUmVxdWlyZSA9IGZ1bmN0aW9uIHdhcm5VbmV4cGVjdGVkUmVxdWlyZShtb2R1bGUpIHtcblx0XHRjb25zb2xlLndhcm4oXG5cdFx0XHRcIltITVJdIHVuZXhwZWN0ZWQgcmVxdWlyZShcIiArIG1vZHVsZS5pZCArIFwiKSB0byBkaXNwb3NlZCBtb2R1bGVcIlxuXHRcdCk7XG5cdH07XG5cblx0Zm9yICh2YXIgbW9kdWxlSWQgaW4gY3VycmVudFVwZGF0ZSkge1xuXHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm8oY3VycmVudFVwZGF0ZSwgbW9kdWxlSWQpKSB7XG5cdFx0XHR2YXIgbmV3TW9kdWxlRmFjdG9yeSA9IGN1cnJlbnRVcGRhdGVbbW9kdWxlSWRdO1xuXHRcdFx0LyoqIEB0eXBlIHtUT0RPfSAqL1xuXHRcdFx0dmFyIHJlc3VsdDtcblx0XHRcdGlmIChuZXdNb2R1bGVGYWN0b3J5KSB7XG5cdFx0XHRcdHJlc3VsdCA9IGdldEFmZmVjdGVkTW9kdWxlRWZmZWN0cyhtb2R1bGVJZCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXN1bHQgPSB7XG5cdFx0XHRcdFx0dHlwZTogXCJkaXNwb3NlZFwiLFxuXHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZFxuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdFx0LyoqIEB0eXBlIHtFcnJvcnxmYWxzZX0gKi9cblx0XHRcdHZhciBhYm9ydEVycm9yID0gZmFsc2U7XG5cdFx0XHR2YXIgZG9BcHBseSA9IGZhbHNlO1xuXHRcdFx0dmFyIGRvRGlzcG9zZSA9IGZhbHNlO1xuXHRcdFx0dmFyIGNoYWluSW5mbyA9IFwiXCI7XG5cdFx0XHRpZiAocmVzdWx0LmNoYWluKSB7XG5cdFx0XHRcdGNoYWluSW5mbyA9IFwiXFxuVXBkYXRlIHByb3BhZ2F0aW9uOiBcIiArIHJlc3VsdC5jaGFpbi5qb2luKFwiIC0+IFwiKTtcblx0XHRcdH1cblx0XHRcdHN3aXRjaCAocmVzdWx0LnR5cGUpIHtcblx0XHRcdFx0Y2FzZSBcInNlbGYtZGVjbGluZWRcIjpcblx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkRlY2xpbmVkKSBvcHRpb25zLm9uRGVjbGluZWQocmVzdWx0KTtcblx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRGVjbGluZWQpXG5cdFx0XHRcdFx0XHRhYm9ydEVycm9yID0gbmV3IEVycm9yKFxuXHRcdFx0XHRcdFx0XHRcIkFib3J0ZWQgYmVjYXVzZSBvZiBzZWxmIGRlY2xpbmU6IFwiICtcblx0XHRcdFx0XHRcdFx0XHRyZXN1bHQubW9kdWxlSWQgK1xuXHRcdFx0XHRcdFx0XHRcdGNoYWluSW5mb1xuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcImRlY2xpbmVkXCI6XG5cdFx0XHRcdFx0aWYgKG9wdGlvbnMub25EZWNsaW5lZCkgb3B0aW9ucy5vbkRlY2xpbmVkKHJlc3VsdCk7XG5cdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZURlY2xpbmVkKVxuXHRcdFx0XHRcdFx0YWJvcnRFcnJvciA9IG5ldyBFcnJvcihcblx0XHRcdFx0XHRcdFx0XCJBYm9ydGVkIGJlY2F1c2Ugb2YgZGVjbGluZWQgZGVwZW5kZW5jeTogXCIgK1xuXHRcdFx0XHRcdFx0XHRcdHJlc3VsdC5tb2R1bGVJZCArXG5cdFx0XHRcdFx0XHRcdFx0XCIgaW4gXCIgK1xuXHRcdFx0XHRcdFx0XHRcdHJlc3VsdC5wYXJlbnRJZCArXG5cdFx0XHRcdFx0XHRcdFx0Y2hhaW5JbmZvXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwidW5hY2NlcHRlZFwiOlxuXHRcdFx0XHRcdGlmIChvcHRpb25zLm9uVW5hY2NlcHRlZCkgb3B0aW9ucy5vblVuYWNjZXB0ZWQocmVzdWx0KTtcblx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlVW5hY2NlcHRlZClcblx0XHRcdFx0XHRcdGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXG5cdFx0XHRcdFx0XHRcdFwiQWJvcnRlZCBiZWNhdXNlIFwiICsgbW9kdWxlSWQgKyBcIiBpcyBub3QgYWNjZXB0ZWRcIiArIGNoYWluSW5mb1xuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcImFjY2VwdGVkXCI6XG5cdFx0XHRcdFx0aWYgKG9wdGlvbnMub25BY2NlcHRlZCkgb3B0aW9ucy5vbkFjY2VwdGVkKHJlc3VsdCk7XG5cdFx0XHRcdFx0ZG9BcHBseSA9IHRydWU7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJkaXNwb3NlZFwiOlxuXHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRGlzcG9zZWQpIG9wdGlvbnMub25EaXNwb3NlZChyZXN1bHQpO1xuXHRcdFx0XHRcdGRvRGlzcG9zZSA9IHRydWU7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiVW5leGNlcHRpb24gdHlwZSBcIiArIHJlc3VsdC50eXBlKTtcblx0XHRcdH1cblx0XHRcdGlmIChhYm9ydEVycm9yKSB7XG5cdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0ZXJyb3I6IGFib3J0RXJyb3Jcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHRcdGlmIChkb0FwcGx5KSB7XG5cdFx0XHRcdGFwcGxpZWRVcGRhdGVbbW9kdWxlSWRdID0gbmV3TW9kdWxlRmFjdG9yeTtcblx0XHRcdFx0YWRkQWxsVG9TZXQob3V0ZGF0ZWRNb2R1bGVzLCByZXN1bHQub3V0ZGF0ZWRNb2R1bGVzKTtcblx0XHRcdFx0Zm9yIChtb2R1bGVJZCBpbiByZXN1bHQub3V0ZGF0ZWREZXBlbmRlbmNpZXMpIHtcblx0XHRcdFx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5vKHJlc3VsdC5vdXRkYXRlZERlcGVuZGVuY2llcywgbW9kdWxlSWQpKSB7XG5cdFx0XHRcdFx0XHRpZiAoIW91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSlcblx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdID0gW107XG5cdFx0XHRcdFx0XHRhZGRBbGxUb1NldChcblx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdLFxuXHRcdFx0XHRcdFx0XHRyZXN1bHQub3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0aWYgKGRvRGlzcG9zZSkge1xuXHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZE1vZHVsZXMsIFtyZXN1bHQubW9kdWxlSWRdKTtcblx0XHRcdFx0YXBwbGllZFVwZGF0ZVttb2R1bGVJZF0gPSB3YXJuVW5leHBlY3RlZFJlcXVpcmU7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdGN1cnJlbnRVcGRhdGUgPSB1bmRlZmluZWQ7XG5cblx0Ly8gU3RvcmUgc2VsZiBhY2NlcHRlZCBvdXRkYXRlZCBtb2R1bGVzIHRvIHJlcXVpcmUgdGhlbSBsYXRlciBieSB0aGUgbW9kdWxlIHN5c3RlbVxuXHR2YXIgb3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzID0gW107XG5cdGZvciAodmFyIGogPSAwOyBqIDwgb3V0ZGF0ZWRNb2R1bGVzLmxlbmd0aDsgaisrKSB7XG5cdFx0dmFyIG91dGRhdGVkTW9kdWxlSWQgPSBvdXRkYXRlZE1vZHVsZXNbal07XG5cdFx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19yZXF1aXJlX18uY1tvdXRkYXRlZE1vZHVsZUlkXTtcblx0XHRpZiAoXG5cdFx0XHRtb2R1bGUgJiZcblx0XHRcdChtb2R1bGUuaG90Ll9zZWxmQWNjZXB0ZWQgfHwgbW9kdWxlLmhvdC5fbWFpbikgJiZcblx0XHRcdC8vIHJlbW92ZWQgc2VsZi1hY2NlcHRlZCBtb2R1bGVzIHNob3VsZCBub3QgYmUgcmVxdWlyZWRcblx0XHRcdGFwcGxpZWRVcGRhdGVbb3V0ZGF0ZWRNb2R1bGVJZF0gIT09IHdhcm5VbmV4cGVjdGVkUmVxdWlyZSAmJlxuXHRcdFx0Ly8gd2hlbiBjYWxsZWQgaW52YWxpZGF0ZSBzZWxmLWFjY2VwdGluZyBpcyBub3QgcG9zc2libGVcblx0XHRcdCFtb2R1bGUuaG90Ll9zZWxmSW52YWxpZGF0ZWRcblx0XHQpIHtcblx0XHRcdG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcy5wdXNoKHtcblx0XHRcdFx0bW9kdWxlOiBvdXRkYXRlZE1vZHVsZUlkLFxuXHRcdFx0XHRyZXF1aXJlOiBtb2R1bGUuaG90Ll9yZXF1aXJlU2VsZixcblx0XHRcdFx0ZXJyb3JIYW5kbGVyOiBtb2R1bGUuaG90Ll9zZWxmQWNjZXB0ZWRcblx0XHRcdH0pO1xuXHRcdH1cblx0fVxuXG5cdHZhciBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcztcblxuXHRyZXR1cm4ge1xuXHRcdGRpc3Bvc2U6IGZ1bmN0aW9uICgpIHtcblx0XHRcdGN1cnJlbnRVcGRhdGVSZW1vdmVkQ2h1bmtzLmZvckVhY2goZnVuY3Rpb24gKGNodW5rSWQpIHtcblx0XHRcdFx0ZGVsZXRlIGluc3RhbGxlZENodW5rc1tjaHVua0lkXTtcblx0XHRcdH0pO1xuXHRcdFx0Y3VycmVudFVwZGF0ZVJlbW92ZWRDaHVua3MgPSB1bmRlZmluZWQ7XG5cblx0XHRcdHZhciBpZHg7XG5cdFx0XHR2YXIgcXVldWUgPSBvdXRkYXRlZE1vZHVsZXMuc2xpY2UoKTtcblx0XHRcdHdoaWxlIChxdWV1ZS5sZW5ndGggPiAwKSB7XG5cdFx0XHRcdHZhciBtb2R1bGVJZCA9IHF1ZXVlLnBvcCgpO1xuXHRcdFx0XHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW21vZHVsZUlkXTtcblx0XHRcdFx0aWYgKCFtb2R1bGUpIGNvbnRpbnVlO1xuXG5cdFx0XHRcdHZhciBkYXRhID0ge307XG5cblx0XHRcdFx0Ly8gQ2FsbCBkaXNwb3NlIGhhbmRsZXJzXG5cdFx0XHRcdHZhciBkaXNwb3NlSGFuZGxlcnMgPSBtb2R1bGUuaG90Ll9kaXNwb3NlSGFuZGxlcnM7XG5cdFx0XHRcdGZvciAoaiA9IDA7IGogPCBkaXNwb3NlSGFuZGxlcnMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0XHRkaXNwb3NlSGFuZGxlcnNbal0uY2FsbChudWxsLCBkYXRhKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckRbbW9kdWxlSWRdID0gZGF0YTtcblxuXHRcdFx0XHQvLyBkaXNhYmxlIG1vZHVsZSAodGhpcyBkaXNhYmxlcyByZXF1aXJlcyBmcm9tIHRoaXMgbW9kdWxlKVxuXHRcdFx0XHRtb2R1bGUuaG90LmFjdGl2ZSA9IGZhbHNlO1xuXG5cdFx0XHRcdC8vIHJlbW92ZSBtb2R1bGUgZnJvbSBjYWNoZVxuXHRcdFx0XHRkZWxldGUgX193ZWJwYWNrX3JlcXVpcmVfXy5jW21vZHVsZUlkXTtcblxuXHRcdFx0XHQvLyB3aGVuIGRpc3Bvc2luZyB0aGVyZSBpcyBubyBuZWVkIHRvIGNhbGwgZGlzcG9zZSBoYW5kbGVyXG5cdFx0XHRcdGRlbGV0ZSBvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF07XG5cblx0XHRcdFx0Ly8gcmVtb3ZlIFwicGFyZW50c1wiIHJlZmVyZW5jZXMgZnJvbSBhbGwgY2hpbGRyZW5cblx0XHRcdFx0Zm9yIChqID0gMDsgaiA8IG1vZHVsZS5jaGlsZHJlbi5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRcdHZhciBjaGlsZCA9IF9fd2VicGFja19yZXF1aXJlX18uY1ttb2R1bGUuY2hpbGRyZW5bal1dO1xuXHRcdFx0XHRcdGlmICghY2hpbGQpIGNvbnRpbnVlO1xuXHRcdFx0XHRcdGlkeCA9IGNoaWxkLnBhcmVudHMuaW5kZXhPZihtb2R1bGVJZCk7XG5cdFx0XHRcdFx0aWYgKGlkeCA+PSAwKSB7XG5cdFx0XHRcdFx0XHRjaGlsZC5wYXJlbnRzLnNwbGljZShpZHgsIDEpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyByZW1vdmUgb3V0ZGF0ZWQgZGVwZW5kZW5jeSBmcm9tIG1vZHVsZSBjaGlsZHJlblxuXHRcdFx0dmFyIGRlcGVuZGVuY3k7XG5cdFx0XHRmb3IgKHZhciBvdXRkYXRlZE1vZHVsZUlkIGluIG91dGRhdGVkRGVwZW5kZW5jaWVzKSB7XG5cdFx0XHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm8ob3V0ZGF0ZWREZXBlbmRlbmNpZXMsIG91dGRhdGVkTW9kdWxlSWQpKSB7XG5cdFx0XHRcdFx0bW9kdWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW291dGRhdGVkTW9kdWxlSWRdO1xuXHRcdFx0XHRcdGlmIChtb2R1bGUpIHtcblx0XHRcdFx0XHRcdG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzID1cblx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbb3V0ZGF0ZWRNb2R1bGVJZF07XG5cdFx0XHRcdFx0XHRmb3IgKGogPSAwOyBqIDwgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0XHRcdFx0ZGVwZW5kZW5jeSA9IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzW2pdO1xuXHRcdFx0XHRcdFx0XHRpZHggPSBtb2R1bGUuY2hpbGRyZW4uaW5kZXhPZihkZXBlbmRlbmN5KTtcblx0XHRcdFx0XHRcdFx0aWYgKGlkeCA+PSAwKSBtb2R1bGUuY2hpbGRyZW4uc3BsaWNlKGlkeCwgMSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRhcHBseTogZnVuY3Rpb24gKHJlcG9ydEVycm9yKSB7XG5cdFx0XHQvLyBpbnNlcnQgbmV3IGNvZGVcblx0XHRcdGZvciAodmFyIHVwZGF0ZU1vZHVsZUlkIGluIGFwcGxpZWRVcGRhdGUpIHtcblx0XHRcdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubyhhcHBsaWVkVXBkYXRlLCB1cGRhdGVNb2R1bGVJZCkpIHtcblx0XHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLm1bdXBkYXRlTW9kdWxlSWRdID0gYXBwbGllZFVwZGF0ZVt1cGRhdGVNb2R1bGVJZF07XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gcnVuIG5ldyBydW50aW1lIG1vZHVsZXNcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgY3VycmVudFVwZGF0ZVJ1bnRpbWUubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0Y3VycmVudFVwZGF0ZVJ1bnRpbWVbaV0oX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIGNhbGwgYWNjZXB0IGhhbmRsZXJzXG5cdFx0XHRmb3IgKHZhciBvdXRkYXRlZE1vZHVsZUlkIGluIG91dGRhdGVkRGVwZW5kZW5jaWVzKSB7XG5cdFx0XHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm8ob3V0ZGF0ZWREZXBlbmRlbmNpZXMsIG91dGRhdGVkTW9kdWxlSWQpKSB7XG5cdFx0XHRcdFx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19yZXF1aXJlX18uY1tvdXRkYXRlZE1vZHVsZUlkXTtcblx0XHRcdFx0XHRpZiAobW9kdWxlKSB7XG5cdFx0XHRcdFx0XHRtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcyA9XG5cdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW291dGRhdGVkTW9kdWxlSWRdO1xuXHRcdFx0XHRcdFx0dmFyIGNhbGxiYWNrcyA9IFtdO1xuXHRcdFx0XHRcdFx0dmFyIGVycm9ySGFuZGxlcnMgPSBbXTtcblx0XHRcdFx0XHRcdHZhciBkZXBlbmRlbmNpZXNGb3JDYWxsYmFja3MgPSBbXTtcblx0XHRcdFx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0XHRcdFx0dmFyIGRlcGVuZGVuY3kgPSBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llc1tqXTtcblx0XHRcdFx0XHRcdFx0dmFyIGFjY2VwdENhbGxiYWNrID1cblx0XHRcdFx0XHRcdFx0XHRtb2R1bGUuaG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1tkZXBlbmRlbmN5XTtcblx0XHRcdFx0XHRcdFx0dmFyIGVycm9ySGFuZGxlciA9XG5cdFx0XHRcdFx0XHRcdFx0bW9kdWxlLmhvdC5fYWNjZXB0ZWRFcnJvckhhbmRsZXJzW2RlcGVuZGVuY3ldO1xuXHRcdFx0XHRcdFx0XHRpZiAoYWNjZXB0Q2FsbGJhY2spIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAoY2FsbGJhY2tzLmluZGV4T2YoYWNjZXB0Q2FsbGJhY2spICE9PSAtMSkgY29udGludWU7XG5cdFx0XHRcdFx0XHRcdFx0Y2FsbGJhY2tzLnB1c2goYWNjZXB0Q2FsbGJhY2spO1xuXHRcdFx0XHRcdFx0XHRcdGVycm9ySGFuZGxlcnMucHVzaChlcnJvckhhbmRsZXIpO1xuXHRcdFx0XHRcdFx0XHRcdGRlcGVuZGVuY2llc0ZvckNhbGxiYWNrcy5wdXNoKGRlcGVuZGVuY3kpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRmb3IgKHZhciBrID0gMDsgayA8IGNhbGxiYWNrcy5sZW5ndGg7IGsrKykge1xuXHRcdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRcdGNhbGxiYWNrc1trXS5jYWxsKG51bGwsIG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzKTtcblx0XHRcdFx0XHRcdFx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKHR5cGVvZiBlcnJvckhhbmRsZXJzW2tdID09PSBcImZ1bmN0aW9uXCIpIHtcblx0XHRcdFx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGVycm9ySGFuZGxlcnNba10oZXJyLCB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG91dGRhdGVkTW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZGVwZW5kZW5jeUlkOiBkZXBlbmRlbmNpZXNGb3JDYWxsYmFja3Nba11cblx0XHRcdFx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdFx0XHR9IGNhdGNoIChlcnIyKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHR5cGU6IFwiYWNjZXB0LWVycm9yLWhhbmRsZXItZXJyb3JlZFwiLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG91dGRhdGVkTW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZXBlbmRlbmN5SWQ6IGRlcGVuZGVuY2llc0ZvckNhbGxiYWNrc1trXSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGVycm9yOiBlcnIyLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0b3JpZ2luYWxFcnJvcjogZXJyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXBvcnRFcnJvcihlcnIyKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXBvcnRFcnJvcihlcnIpO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJhY2NlcHQtZXJyb3JlZFwiLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBvdXRkYXRlZE1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGRlcGVuZGVuY3lJZDogZGVwZW5kZW5jaWVzRm9yQ2FsbGJhY2tzW2tdLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGVycm9yOiBlcnJcblx0XHRcdFx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXBvcnRFcnJvcihlcnIpO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBMb2FkIHNlbGYgYWNjZXB0ZWQgbW9kdWxlc1xuXHRcdFx0Zm9yICh2YXIgbyA9IDA7IG8gPCBvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMubGVuZ3RoOyBvKyspIHtcblx0XHRcdFx0dmFyIGl0ZW0gPSBvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXNbb107XG5cdFx0XHRcdHZhciBtb2R1bGVJZCA9IGl0ZW0ubW9kdWxlO1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGl0ZW0ucmVxdWlyZShtb2R1bGVJZCk7XG5cdFx0XHRcdH0gY2F0Y2ggKGVycikge1xuXHRcdFx0XHRcdGlmICh0eXBlb2YgaXRlbS5lcnJvckhhbmRsZXIgPT09IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0aXRlbS5lcnJvckhhbmRsZXIoZXJyLCB7XG5cdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRcdG1vZHVsZTogX193ZWJwYWNrX3JlcXVpcmVfXy5jW21vZHVsZUlkXVxuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdH0gY2F0Y2ggKGVycjIpIHtcblx0XHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vbkVycm9yZWQoe1xuXHRcdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJzZWxmLWFjY2VwdC1lcnJvci1oYW5kbGVyLWVycm9yZWRcIixcblx0XHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0XHRcdGVycm9yOiBlcnIyLFxuXHRcdFx0XHRcdFx0XHRcdFx0b3JpZ2luYWxFcnJvcjogZXJyXG5cdFx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRyZXBvcnRFcnJvcihlcnIyKTtcblx0XHRcdFx0XHRcdFx0XHRyZXBvcnRFcnJvcihlcnIpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XG5cdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJzZWxmLWFjY2VwdC1lcnJvcmVkXCIsXG5cdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRcdGVycm9yOiBlcnJcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRyZXBvcnRFcnJvcihlcnIpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gb3V0ZGF0ZWRNb2R1bGVzO1xuXHRcdH1cblx0fTtcbn1cbl9fd2VicGFja19yZXF1aXJlX18uaG1ySS5qc29ucCA9IGZ1bmN0aW9uIChtb2R1bGVJZCwgYXBwbHlIYW5kbGVycykge1xuXHRpZiAoIWN1cnJlbnRVcGRhdGUpIHtcblx0XHRjdXJyZW50VXBkYXRlID0ge307XG5cdFx0Y3VycmVudFVwZGF0ZVJ1bnRpbWUgPSBbXTtcblx0XHRjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcyA9IFtdO1xuXHRcdGFwcGx5SGFuZGxlcnMucHVzaChhcHBseUhhbmRsZXIpO1xuXHR9XG5cdGlmICghX193ZWJwYWNrX3JlcXVpcmVfXy5vKGN1cnJlbnRVcGRhdGUsIG1vZHVsZUlkKSkge1xuXHRcdGN1cnJlbnRVcGRhdGVbbW9kdWxlSWRdID0gX193ZWJwYWNrX3JlcXVpcmVfXy5tW21vZHVsZUlkXTtcblx0fVxufTtcbl9fd2VicGFja19yZXF1aXJlX18uaG1yQy5qc29ucCA9IGZ1bmN0aW9uIChcblx0Y2h1bmtJZHMsXG5cdHJlbW92ZWRDaHVua3MsXG5cdHJlbW92ZWRNb2R1bGVzLFxuXHRwcm9taXNlcyxcblx0YXBwbHlIYW5kbGVycyxcblx0dXBkYXRlZE1vZHVsZXNMaXN0XG4pIHtcblx0YXBwbHlIYW5kbGVycy5wdXNoKGFwcGx5SGFuZGxlcik7XG5cdGN1cnJlbnRVcGRhdGVDaHVua3MgPSB7fTtcblx0Y3VycmVudFVwZGF0ZVJlbW92ZWRDaHVua3MgPSByZW1vdmVkQ2h1bmtzO1xuXHRjdXJyZW50VXBkYXRlID0gcmVtb3ZlZE1vZHVsZXMucmVkdWNlKGZ1bmN0aW9uIChvYmosIGtleSkge1xuXHRcdG9ialtrZXldID0gZmFsc2U7XG5cdFx0cmV0dXJuIG9iajtcblx0fSwge30pO1xuXHRjdXJyZW50VXBkYXRlUnVudGltZSA9IFtdO1xuXHRjaHVua0lkcy5mb3JFYWNoKGZ1bmN0aW9uIChjaHVua0lkKSB7XG5cdFx0aWYgKFxuXHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkgJiZcblx0XHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXSAhPT0gdW5kZWZpbmVkXG5cdFx0KSB7XG5cdFx0XHRwcm9taXNlcy5wdXNoKGxvYWRVcGRhdGVDaHVuayhjaHVua0lkLCB1cGRhdGVkTW9kdWxlc0xpc3QpKTtcblx0XHRcdGN1cnJlbnRVcGRhdGVDaHVua3NbY2h1bmtJZF0gPSB0cnVlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRjdXJyZW50VXBkYXRlQ2h1bmtzW2NodW5rSWRdID0gZmFsc2U7XG5cdFx0fVxuXHR9KTtcblx0aWYgKF9fd2VicGFja19yZXF1aXJlX18uZikge1xuXHRcdF9fd2VicGFja19yZXF1aXJlX18uZi5qc29ucEhtciA9IGZ1bmN0aW9uIChjaHVua0lkLCBwcm9taXNlcykge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRjdXJyZW50VXBkYXRlQ2h1bmtzICYmXG5cdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18ubyhjdXJyZW50VXBkYXRlQ2h1bmtzLCBjaHVua0lkKSAmJlxuXHRcdFx0XHQhY3VycmVudFVwZGF0ZUNodW5rc1tjaHVua0lkXVxuXHRcdFx0KSB7XG5cdFx0XHRcdHByb21pc2VzLnB1c2gobG9hZFVwZGF0ZUNodW5rKGNodW5rSWQpKTtcblx0XHRcdFx0Y3VycmVudFVwZGF0ZUNodW5rc1tjaHVua0lkXSA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxufTtcblxuX193ZWJwYWNrX3JlcXVpcmVfXy5obXJNID0gKCkgPT4ge1xuXHRpZiAodHlwZW9mIGZldGNoID09PSBcInVuZGVmaW5lZFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJObyBicm93c2VyIHN1cHBvcnQ6IG5lZWQgZmV0Y2ggQVBJXCIpO1xuXHRyZXR1cm4gZmV0Y2goX193ZWJwYWNrX3JlcXVpcmVfXy5wICsgX193ZWJwYWNrX3JlcXVpcmVfXy5obXJGKCkpLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG5cdFx0aWYocmVzcG9uc2Uuc3RhdHVzID09PSA0MDQpIHJldHVybjsgLy8gbm8gdXBkYXRlIGF2YWlsYWJsZVxuXHRcdGlmKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGZldGNoIHVwZGF0ZSBtYW5pZmVzdCBcIiArIHJlc3BvbnNlLnN0YXR1c1RleHQpO1xuXHRcdHJldHVybiByZXNwb25zZS5qc29uKCk7XG5cdH0pO1xufTtcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiLy8gbW9kdWxlIGNhY2hlIGFyZSB1c2VkIHNvIGVudHJ5IGlubGluaW5nIGlzIGRpc2FibGVkXG4vLyBzdGFydHVwXG4vLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbnZhciBfX3dlYnBhY2tfZXhwb3J0c19fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0OTMpO1xuIl0sIm5hbWVzIjpbImluUHJvZ3Jlc3MiLCJkYXRhV2VicGFja1ByZWZpeCIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsIm9wdGlvbnMiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsInNldEF0dHJpYnV0ZXMiLCJpbnNlcnQiLCJkb21BUEkiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJ1cGRhdGUiLCJsb2NhbHMiLCJob3QiLCJpbnZhbGlkYXRlIiwiaXNOYW1lZEV4cG9ydCIsIm9sZExvY2FscyIsImFjY2VwdCIsImEiLCJiIiwicCIsImlzRXF1YWxMb2NhbHMiLCJkaXNwb3NlIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsImVycm9yIiwiZXhlY09wdGlvbnMiLCJmYWN0b3J5IiwiX193ZWJwYWNrX21vZHVsZXNfXyIsInJlcXVpcmUiLCJmb3JFYWNoIiwiaGFuZGxlciIsImNhbGwiLCJtIiwiYyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiaHUiLCJjaHVua0lkIiwiaCIsImhtckYiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwibCIsInVybCIsImRvbmUiLCJzY3JpcHQiLCJuZWVkQXR0YWNoIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicyIsImdldEF0dHJpYnV0ZSIsImNoYXJzZXQiLCJ0aW1lb3V0IiwibmMiLCJzcmMiLCJvblNjcmlwdENvbXBsZXRlIiwicHJldiIsImV2ZW50Iiwib25lcnJvciIsIm9ubG9hZCIsImNsZWFyVGltZW91dCIsImRvbmVGbnMiLCJmbiIsInNldFRpbWVvdXQiLCJiaW5kIiwidHlwZSIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwiY3VycmVudENoaWxkTW9kdWxlIiwiY3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMiLCJxdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMiLCJjdXJyZW50TW9kdWxlRGF0YSIsImluc3RhbGxlZE1vZHVsZXMiLCJjdXJyZW50UGFyZW50cyIsInJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycyIsImN1cnJlbnRTdGF0dXMiLCJibG9ja2luZ1Byb21pc2VzIiwiYmxvY2tpbmdQcm9taXNlc1dhaXRpbmciLCJzZXRTdGF0dXMiLCJuZXdTdGF0dXMiLCJyZXN1bHRzIiwiUHJvbWlzZSIsImFsbCIsInRoZW4iLCJ1bmJsb2NrIiwiaG90Q2hlY2siLCJhcHBseU9uVXBkYXRlIiwiaG1yTSIsInVwZGF0ZWRNb2R1bGVzIiwia2V5cyIsImhtckMiLCJyZWR1Y2UiLCJwcm9taXNlcyIsImludGVybmFsQXBwbHkiLCJyZXNvbHZlIiwiYXBwbHlJbnZhbGlkYXRlZE1vZHVsZXMiLCJob3RBcHBseSIsImVycm9ycyIsImZpbHRlciIsIkJvb2xlYW4iLCJkaXNwb3NlUHJvbWlzZSIsImFwcGx5UHJvbWlzZSIsInJlcG9ydEVycm9yIiwiZXJyIiwib3V0ZGF0ZWRNb2R1bGVzIiwiaW5kZXhPZiIsImhtckkiLCJobXJEIiwibWUiLCJfbWFpbiIsInJlcXVlc3QiLCJhY3RpdmUiLCJwYXJlbnRzIiwiY2hpbGRyZW4iLCJjb25zb2xlIiwid2FybiIsImNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciIsIm5hbWUiLCJjb25maWd1cmFibGUiLCJzZXQiLCJmZXRjaFByaW9yaXR5IiwicHJvbWlzZSIsInRyYWNrQmxvY2tpbmdQcm9taXNlIiwiY3JlYXRlUmVxdWlyZSIsIl9hY2NlcHRlZERlcGVuZGVuY2llcyIsIl9hY2NlcHRlZEVycm9ySGFuZGxlcnMiLCJfZGVjbGluZWREZXBlbmRlbmNpZXMiLCJfc2VsZkFjY2VwdGVkIiwiX3NlbGZEZWNsaW5lZCIsIl9zZWxmSW52YWxpZGF0ZWQiLCJfZGlzcG9zZUhhbmRsZXJzIiwiX3JlcXVpcmVTZWxmIiwic2xpY2UiLCJkZXAiLCJjYWxsYmFjayIsImVycm9ySGFuZGxlciIsImRlY2xpbmUiLCJhZGREaXNwb3NlSGFuZGxlciIsInJlbW92ZURpc3Bvc2VIYW5kbGVyIiwiaWR4IiwiY2hlY2siLCJzdGF0dXMiLCJhZGRTdGF0dXNIYW5kbGVyIiwicmVtb3ZlU3RhdHVzSGFuZGxlciIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJ0ZXN0IiwicmVwbGFjZSIsImN1cnJlbnRVcGRhdGVkTW9kdWxlc0xpc3QiLCJjdXJyZW50VXBkYXRlQ2h1bmtzIiwiY3VycmVudFVwZGF0ZSIsImN1cnJlbnRVcGRhdGVSZW1vdmVkQ2h1bmtzIiwiY3VycmVudFVwZGF0ZVJ1bnRpbWUiLCJpbnN0YWxsZWRDaHVua3MiLCJobXJTX2pzb25wIiwid2FpdGluZ1VwZGF0ZVJlc29sdmVzIiwibG9hZFVwZGF0ZUNodW5rIiwidXBkYXRlZE1vZHVsZXNMaXN0IiwicmVqZWN0IiwiZXJyb3JUeXBlIiwicmVhbFNyYyIsIm1lc3NhZ2UiLCJhcHBseUhhbmRsZXIiLCJnZXRBZmZlY3RlZE1vZHVsZUVmZmVjdHMiLCJ1cGRhdGVNb2R1bGVJZCIsIm91dGRhdGVkRGVwZW5kZW5jaWVzIiwicXVldWUiLCJjaGFpbiIsInF1ZXVlSXRlbSIsInBvcCIsInBhcmVudElkIiwicGFyZW50IiwiYWRkQWxsVG9TZXQiLCJmIiwianNvbnBIbXIiLCJhcHBsaWVkVXBkYXRlIiwid2FyblVuZXhwZWN0ZWRSZXF1aXJlIiwibmV3TW9kdWxlRmFjdG9yeSIsImFib3J0RXJyb3IiLCJkb0FwcGx5IiwiZG9EaXNwb3NlIiwiY2hhaW5JbmZvIiwib25EZWNsaW5lZCIsImlnbm9yZURlY2xpbmVkIiwib25VbmFjY2VwdGVkIiwiaWdub3JlVW5hY2NlcHRlZCIsIm9uQWNjZXB0ZWQiLCJvbkRpc3Bvc2VkIiwibW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMiLCJvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMiLCJqIiwib3V0ZGF0ZWRNb2R1bGVJZCIsImRlcGVuZGVuY3kiLCJkaXNwb3NlSGFuZGxlcnMiLCJjaGlsZCIsImNhbGxiYWNrcyIsImVycm9ySGFuZGxlcnMiLCJkZXBlbmRlbmNpZXNGb3JDYWxsYmFja3MiLCJhY2NlcHRDYWxsYmFjayIsImRlcGVuZGVuY3lJZCIsImVycjIiLCJvbkVycm9yZWQiLCJvcmlnaW5hbEVycm9yIiwiaWdub3JlRXJyb3JlZCIsInNlbGYiLCJtb3JlTW9kdWxlcyIsInJ1bnRpbWUiLCJqc29ucCIsImFwcGx5SGFuZGxlcnMiLCJjaHVua0lkcyIsInJlbW92ZWRDaHVua3MiLCJyZW1vdmVkTW9kdWxlcyIsImZldGNoIiwicmVzcG9uc2UiLCJvayIsInN0YXR1c1RleHQiLCJqc29uIl0sInNvdXJjZVJvb3QiOiIifQ==