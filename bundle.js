(()=>{"use strict";var n,e,r={208:(n,e,r)=>{r.r(e),r.d(e,{default:()=>A});var t=r(354),o=r.n(t),i=r(314),a=r.n(i)()(o());a.push([n.id,'html,\nbody {\n  height: 100%;\n}\n\n*,\n*:before,\n*:after {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  box-sizing: border-box;\n}\n\na {\n  text-decoration: none;\n  color: aliceblue;\n}\n\nbody {\n  font-family: "Open Sans", sans-serif;\n  margin: 0;\n  padding: 0;\n  background-color: rgb(164, 200, 226);\n  color: aliceblue;\n  padding-top: 134px;\n}\n\n.header-line {\n  position: relative;\n  z-index: 3;\n}\n\n.header-logo > img {\n  width: 200px;\n  max-width: 100%;\n  margin-left: 10px;\n  position: relative;\n  z-index: 3;\n}\n\nheader {\n  position: fixed;\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 99;\n}\n\nheader:before {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background-color: rgb(151, 192, 222);\n  box-shadow: 0 7px 20px rgba(0, 0, 0, 0.3);\n  border-bottom: 3px solid rgb(238, 123, 81);\n  z-index: 2;\n}\n\n.header-body {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  height: 120px;\n  align-items: center;\n}\n\n.header-list {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  position: relative;\n  z-index: 3;\n}\n\n.header-list li {\n  list-style: none;\n  margin: 0px 0px 0px 20px;\n}\n\n.header-link {\n  color: aliceblue;\n  font-size: 14px;\n  font-weight: 700px;\n  margin-right: 25px;\n  transition: color 0.3s linear;\n  cursor: pointer;\n}\n\n.header-link:hover {\n  color: rgb(238, 123, 81);\n}\n\n.container {\n  max-width: 1600px;\n  margin: 0px auto;\n  padding: 0px 10px;\n}\n\n.header-burger {\n  display: none;\n}\n\n.header-burger.active:before {\n  transform: rotate(45deg);\n  top: 9px;\n}\n\n.header-burger.active:after {\n  transform: rotate(-45deg);\n  bottom: 9px;\n}\n\n.header-burger.active span {\n  transform: scale(0);\n}\n\n.header-phone {\n  padding-left: 20px;\n  position: relative;\n  z-index: 2;\n}\n\n.header-phone-number {\n  display: flex;\n  align-items: center;\n}\n\n.header-phone-text {\n  font-size: 14px;\n  font-weight: 400;\n  color: aliceblue;\n}\n\n.num {\n  color: aliceblue;\n  font-weight: 700;\n  margin-left: 10px;\n  transition: color 0.3s linear;\n}\n\n.num:hover {\n  color: rgb(238, 123, 81);\n}\n\n.button {\n  background-color: rgb(238, 123, 81);\n  padding: 14px 18px;\n  font-weight: 700;\n  transition: background-color 0.3s linear;\n  position: relative;\n  z-index: 2;\n}\n\n.button:hover {\n  background-color: rgb(255, 104, 70);\n}\n\n.img > img {\n  max-width: 650px;\n  height: auto;\n}\n\n.first-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0px 20px 0px 20px;\n  height: 610px;\n}\n\n.first-container-info {\n  display: flex;\n  flex-direction: column;\n  border-top: 3px solid rgb(238, 123, 81);\n  border-bottom: 3px solid rgb(238, 123, 81);\n  margin-left: 20px;\n  height: 80%;\n}\n\n.ul-item {\n  font-size: large;\n  color: aliceblue;\n  margin: 10px 0px 0px 10px;\n}\n\n.services {\n  display: flex;\n  justify-content: center;\n  margin: 25px;\n}\n\n.card-img {\n  width: 300px;\n  height: auto;\n  border: 5px solid aliceblue;\n  border-radius: 10px;\n  margin: 20px;\n}\n\n.card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.cards {\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  margin: 75px;\n}\n\n.work-photo {\n  display: flex;\n  justify-content: center;\n  margin: 25px;\n}\n\nfooter {\n  background-color: rgb(151, 192, 222);\n  border-top: 3px solid rgb(238, 123, 81);\n  height: 150px;\n  width: auto;\n}\n\n.footer-info {\n  display: flex;\n  justify-content: center;\n}\n\n.social {\n  display: flex;\n  justify-content: space-around;\n}\n\n.social-vk {\n  height: 50px;\n}\n\n.social-whatsapp {\n  height: 50px;\n}\n\nbutton {\n  border: none;\n  outline: none;\n  background-color: transparent;\n}\n\n@media (max-width: 1200px) {\n  body.lock {\n    overflow: hidden;\n  }\n  .first-container {\n    height: auto;\n    margin-top: 50px;\n  }\n  .header-nav,\n  .header-line,\n  .btn {\n    display: none;\n  }\n  .img {\n    display: none;\n  }\n  .header-burger {\n    display: block;\n    position: relative;\n    width: 30px;\n    height: 20px;\n    margin-right: 30px;\n    position: relative;\n    z-index: 3;\n  }\n  .header-burger span {\n    position: absolute;\n    background-color: rgb(238, 123, 81);\n    left: 0;\n    width: 100%;\n    height: 2px;\n    top: 9px;\n    transition: all 0.3s ease 0s;\n  }\n  .header-burger:before,\n  .header-burger:after {\n    position: absolute;\n    content: "";\n    background-color: rgb(238, 123, 81);\n    width: 100%;\n    height: 2px;\n    left: 0;\n    transition: all 0.3s ease 0s;\n  }\n  .header-burger:before {\n    top: 0;\n  }\n  .header-burger:after {\n    bottom: 0;\n  }\n  .header-list {\n    overflow: auto;\n    display: block;\n    position: fixed;\n    top: -100%;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(236, 147, 115, 0.99);\n    z-index: 1;\n    padding: 150px 10px 30px 20px;\n    transition: all 0.9s ease 0s;\n  }\n  .header-list.active {\n    top: 0;\n  }\n  .header-phone {\n    display: none;\n  }\n}\n\n@media (max-width: 767px) {\n  .header-logo > img {\n    max-width: 130px;\n    height: auto;\n  }\n  .header-list {\n    padding: 100px 10px 30px 20px;\n  }\n  .third-container {\n    max-width: 250px;\n    height: 250px;\n  }\n  .first-container {\n    margin: 0px;\n    margin-right: 20px;\n  }\n  .ul-item {\n    font-size: 15px;\n    color: aliceblue;\n    margin: 10px 0px 0px 10px;\n  }\n  .card-img {\n    width: 200px;\n  }\n  .header-body {\n    height: 80px;\n  }\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['html,\nbody {\n  height: 100%;\n}\n\n*,\n*:before,\n*:after {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  box-sizing: border-box;\n}\n\na {\n  text-decoration: none;\n  color: aliceblue;\n}\n\nbody {\n  font-family: "Open Sans", sans-serif;\n  margin: 0;\n  padding: 0;\n  background-color: rgb(164, 200, 226);\n  color: aliceblue;\n  padding-top: 134px;\n}\n\n.header-line {\n  position: relative;\n  z-index: 3;\n}\n\n.header-logo > img {\n  width: 200px;\n  max-width: 100%;\n  margin-left: 10px;\n  position: relative;\n  z-index: 3;\n}\n\nheader {\n  position: fixed;\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 99;\n}\n\nheader:before {\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background-color: rgb(151, 192, 222);\n  box-shadow: 0 7px 20px rgba(0, 0, 0, 0.3);\n  border-bottom: 3px solid rgb(238, 123, 81);\n  z-index: 2;\n}\n\n.header-body {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  height: 120px;\n  align-items: center;\n}\n\n.header-list {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  position: relative;\n  z-index: 3;\n}\n\n.header-list li {\n  list-style: none;\n  margin: 0px 0px 0px 20px;\n}\n\n.header-link {\n  color: aliceblue;\n  font-size: 14px;\n  font-weight: 700px;\n  margin-right: 25px;\n  transition: color 0.3s linear;\n  cursor: pointer;\n}\n\n.header-link:hover {\n  color: rgb(238, 123, 81);\n}\n\n.container {\n  max-width: 1600px;\n  margin: 0px auto;\n  padding: 0px 10px;\n}\n\n.header-burger {\n  display: none;\n}\n\n.header-burger.active:before {\n  transform: rotate(45deg);\n  top: 9px;\n}\n\n.header-burger.active:after {\n  transform: rotate(-45deg);\n  bottom: 9px;\n}\n\n.header-burger.active span {\n  transform: scale(0);\n}\n\n.header-phone {\n  padding-left: 20px;\n  position: relative;\n  z-index: 2;\n}\n\n.header-phone-number {\n  display: flex;\n  align-items: center;\n}\n\n.header-phone-text {\n  font-size: 14px;\n  font-weight: 400;\n  color: aliceblue;\n}\n\n.num {\n  color: aliceblue;\n  font-weight: 700;\n  margin-left: 10px;\n  transition: color 0.3s linear;\n}\n\n.num:hover {\n  color: rgb(238, 123, 81);\n}\n\n.button {\n  background-color: rgb(238, 123, 81);\n  padding: 14px 18px;\n  font-weight: 700;\n  transition: background-color 0.3s linear;\n  position: relative;\n  z-index: 2;\n}\n\n.button:hover {\n  background-color: rgb(255, 104, 70);\n}\n\n.img > img {\n  max-width: 650px;\n  height: auto;\n}\n\n.first-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0px 20px 0px 20px;\n  height: 610px;\n}\n\n.first-container-info {\n  display: flex;\n  flex-direction: column;\n  border-top: 3px solid rgb(238, 123, 81);\n  border-bottom: 3px solid rgb(238, 123, 81);\n  margin-left: 20px;\n  height: 80%;\n}\n\n.ul-item {\n  font-size: large;\n  color: aliceblue;\n  margin: 10px 0px 0px 10px;\n}\n\n.services {\n  display: flex;\n  justify-content: center;\n  margin: 25px;\n}\n\n.card-img {\n  width: 300px;\n  height: auto;\n  border: 5px solid aliceblue;\n  border-radius: 10px;\n  margin: 20px;\n}\n\n.card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.cards {\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  margin: 75px;\n}\n\n.work-photo {\n  display: flex;\n  justify-content: center;\n  margin: 25px;\n}\n\nfooter {\n  background-color: rgb(151, 192, 222);\n  border-top: 3px solid rgb(238, 123, 81);\n  height: 150px;\n  width: auto;\n}\n\n.footer-info {\n  display: flex;\n  justify-content: center;\n}\n\n.social {\n  display: flex;\n  justify-content: space-around;\n}\n\n.social-vk {\n  height: 50px;\n}\n\n.social-whatsapp {\n  height: 50px;\n}\n\nbutton {\n  border: none;\n  outline: none;\n  background-color: transparent;\n}\n\n@media (max-width: 1200px) {\n  body.lock {\n    overflow: hidden;\n  }\n  .first-container {\n    height: auto;\n    margin-top: 50px;\n  }\n  .header-nav,\n  .header-line,\n  .btn {\n    display: none;\n  }\n  .img {\n    display: none;\n  }\n  .header-burger {\n    display: block;\n    position: relative;\n    width: 30px;\n    height: 20px;\n    margin-right: 30px;\n    position: relative;\n    z-index: 3;\n  }\n  .header-burger span {\n    position: absolute;\n    background-color: rgb(238, 123, 81);\n    left: 0;\n    width: 100%;\n    height: 2px;\n    top: 9px;\n    transition: all 0.3s ease 0s;\n  }\n  .header-burger:before,\n  .header-burger:after {\n    position: absolute;\n    content: "";\n    background-color: rgb(238, 123, 81);\n    width: 100%;\n    height: 2px;\n    left: 0;\n    transition: all 0.3s ease 0s;\n  }\n  .header-burger:before {\n    top: 0;\n  }\n  .header-burger:after {\n    bottom: 0;\n  }\n  .header-list {\n    overflow: auto;\n    display: block;\n    position: fixed;\n    top: -100%;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(236, 147, 115, 0.99);\n    z-index: 1;\n    padding: 150px 10px 30px 20px;\n    transition: all 0.9s ease 0s;\n  }\n  .header-list.active {\n    top: 0;\n  }\n  .header-phone {\n    display: none;\n  }\n}\n\n@media (max-width: 767px) {\n  .header-logo > img {\n    max-width: 130px;\n    height: auto;\n  }\n  .header-list {\n    padding: 100px 10px 30px 20px;\n  }\n  .third-container {\n    max-width: 250px;\n    height: 250px;\n  }\n  .first-container {\n    margin: 0px;\n    margin-right: 20px;\n  }\n  .ul-item {\n    font-size: 15px;\n    color: aliceblue;\n    margin: 10px 0px 0px 10px;\n  }\n  .card-img {\n    width: 200px;\n  }\n  .header-body {\n    height: 80px;\n  }\n}\n'],sourceRoot:""}]);const A=a},182:(n,e,r)=>{r.r(e),r.d(e,{default:()=>A});var t=r(354),o=r.n(t),i=r(314),a=r.n(i)()(o());a.push([n.id,".third-container {\n  display: flex;\n  overflow: hidden;\n  max-width: 450px;\n  width: 100%;\n  height: 450px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 50px;\n  border: 5px solid aliceblue;\n  position: relative;\n  border-radius: 10px;\n}\n\n.fullArea {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n}\n\n.points {\n  width: 150px;\n  display: flex;\n  justify-content: space-between;\n  position: absolute;\n  bottom: 5%;\n}\n\n.point {\n  display: flex;\n  width: 12px;\n  height: 12px;\n  background-color: aliceblue;\n  border-radius: 100px;\n  cursor: pointer;\n}\n\n.point:hover {\n  background-color: rgb(238, 123, 81);\n}\n\n.gallery {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n\n.card-img-work.active-img {\n  display: flex;\n}\n\n.active-point {\n  background-color: rgb(238, 123, 81);\n}\n\n.card-img-work {\n  display: none;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  animation: slide 3s;\n}\n\n.third-container-buttons {\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  width: 95%;\n}\n\ni.fa.fa-angle-left,\ni.fa.fa-angle-right {\n  color: rgb(238, 123, 81);\n  font-size: 34px;\n  cursor: pointer;\n  font-weight: 800;\n}\n\n.block-arrow > i {\n  display: flex;\n  width: 40px;\n  height: 40px;\n  background-color: aliceblue;\n  border: 1px solid rgb(238, 123, 81);\n  border-radius: 50px;\n  align-items: center;\n  justify-content: center;\n  transition: color 0.3s linear;\n}\n\n.block-arrow > i:hover {\n  background-color: rgba(238, 123, 81, 0.69);\n  border-radius: 50px;\n  color: aliceblue;\n  cursor: pointer;\n}\n\n.block-arrow > i:active {\n  background: rgba(238, 123, 81, 0.79);\n  border-radius: 50px;\n  color: aliceblue;\n  cursor: pointer;\n}\n\n@keyframes slide {\n  0% {\n    opacity: 0.25;\n  }\n  100% {\n    opacity: 2;\n  }\n}\n","",{version:3,sources:["webpack://./src/stylesSlider.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,gBAAgB;EAChB,gBAAgB;EAChB,WAAW;EACX,aAAa;EACb,iBAAiB;EACjB,kBAAkB;EAClB,mBAAmB;EACnB,2BAA2B;EAC3B,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,8BAA8B;EAC9B,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,WAAW;EACX,YAAY;EACZ,2BAA2B;EAC3B,oBAAoB;EACpB,eAAe;AACjB;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,8BAA8B;EAC9B,UAAU;AACZ;;AAEA;;EAEE,wBAAwB;EACxB,eAAe;EACf,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,YAAY;EACZ,2BAA2B;EAC3B,mCAAmC;EACnC,mBAAmB;EACnB,mBAAmB;EACnB,uBAAuB;EACvB,6BAA6B;AAC/B;;AAEA;EACE,0CAA0C;EAC1C,mBAAmB;EACnB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,oCAAoC;EACpC,mBAAmB;EACnB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE;IACE,aAAa;EACf;EACA;IACE,UAAU;EACZ;AACF",sourcesContent:[".third-container {\n  display: flex;\n  overflow: hidden;\n  max-width: 450px;\n  width: 100%;\n  height: 450px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 50px;\n  border: 5px solid aliceblue;\n  position: relative;\n  border-radius: 10px;\n}\n\n.fullArea {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n}\n\n.points {\n  width: 150px;\n  display: flex;\n  justify-content: space-between;\n  position: absolute;\n  bottom: 5%;\n}\n\n.point {\n  display: flex;\n  width: 12px;\n  height: 12px;\n  background-color: aliceblue;\n  border-radius: 100px;\n  cursor: pointer;\n}\n\n.point:hover {\n  background-color: rgb(238, 123, 81);\n}\n\n.gallery {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n\n.card-img-work.active-img {\n  display: flex;\n}\n\n.active-point {\n  background-color: rgb(238, 123, 81);\n}\n\n.card-img-work {\n  display: none;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  animation: slide 3s;\n}\n\n.third-container-buttons {\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  width: 95%;\n}\n\ni.fa.fa-angle-left,\ni.fa.fa-angle-right {\n  color: rgb(238, 123, 81);\n  font-size: 34px;\n  cursor: pointer;\n  font-weight: 800;\n}\n\n.block-arrow > i {\n  display: flex;\n  width: 40px;\n  height: 40px;\n  background-color: aliceblue;\n  border: 1px solid rgb(238, 123, 81);\n  border-radius: 50px;\n  align-items: center;\n  justify-content: center;\n  transition: color 0.3s linear;\n}\n\n.block-arrow > i:hover {\n  background-color: rgba(238, 123, 81, 0.69);\n  border-radius: 50px;\n  color: aliceblue;\n  cursor: pointer;\n}\n\n.block-arrow > i:active {\n  background: rgba(238, 123, 81, 0.79);\n  border-radius: 50px;\n  color: aliceblue;\n  cursor: pointer;\n}\n\n@keyframes slide {\n  0% {\n    opacity: 0.25;\n  }\n  100% {\n    opacity: 2;\n  }\n}\n"],sourceRoot:""}]);const A=a},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(a[d]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);t&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),r&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=r):c[2]=r),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},354:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},511:(n,e,r)=>{r.r(e),r.d(e,{default:()=>B});var t=r(72),o=r.n(t),i=r(825),a=r.n(i),A=r(659),d=r.n(A),l=r(56),c=r.n(l),s=r(540),p=r.n(s),u=r(113),f=r.n(u),h=r(208),E={};E.styleTagTransform=f(),E.setAttributes=c(),E.insert=d().bind(null,"head"),E.domAPI=a(),E.insertStyleElement=p();var g=o()(h.default,E);if(!h.default.locals||n.hot.invalidate){var C=!h.default.locals,m=C?h:h.default.locals;n.hot.accept(208,(e=>{h=r(208),function(n,e,r){if(!n&&e||n&&!e)return!1;var t;for(t in n)if((!r||"default"!==t)&&n[t]!==e[t])return!1;for(t in e)if(!(r&&"default"===t||n[t]))return!1;return!0}(m,C?h:h.default.locals,C)?(m=C?h:h.default.locals,g(h.default)):n.hot.invalidate()}))}n.hot.dispose((function(){g()}));const B=h.default&&h.default.locals?h.default.locals:void 0},863:(n,e,r)=>{r.r(e),r.d(e,{default:()=>B});var t=r(72),o=r.n(t),i=r(825),a=r.n(i),A=r(659),d=r.n(A),l=r(56),c=r.n(l),s=r(540),p=r.n(s),u=r(113),f=r.n(u),h=r(182),E={};E.styleTagTransform=f(),E.setAttributes=c(),E.insert=d().bind(null,"head"),E.domAPI=a(),E.insertStyleElement=p();var g=o()(h.default,E);if(!h.default.locals||n.hot.invalidate){var C=!h.default.locals,m=C?h:h.default.locals;n.hot.accept(182,(e=>{h=r(182),function(n,e,r){if(!n&&e||n&&!e)return!1;var t;for(t in n)if((!r||"default"!==t)&&n[t]!==e[t])return!1;for(t in e)if(!(r&&"default"===t||n[t]))return!1;return!0}(m,C?h:h.default.locals,C)?(m=C?h:h.default.locals,g(h.default)):n.hot.invalidate()}))}n.hot.dispose((function(){g()}));const B=h.default&&h.default.locals?h.default.locals:void 0},72:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var i={},a=[],A=0;A<n.length;A++){var d=n[A],l=t.base?d[0]+t.base:d[0],c=i[l]||0,s="".concat(l," ").concat(c);i[l]=c+1;var p=r(s),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=o(u,t);t.byIndex=A,e.splice(A,0,{identifier:s,updater:f,references:1})}a.push(s)}return a}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var i=t(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=r(i[a]);e[A].references--}for(var d=t(n,o),l=0;l<i.length;l++){var c=r(i[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=d}}},659:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},156:(n,e,r)=>{r(863),r(511),r(271);const t=document.querySelector(".header-list"),o=document.querySelector(".header-burger");null==o||o.addEventListener("click",(()=>{t.classList.toggle("active"),o.classList.toggle("active"),document.body.classList.toggle("lock")}))},271:()=>{const n=document.querySelectorAll(".point"),e=document.querySelectorAll(".card-img-work"),r=document.getElementById("left-button"),t=document.getElementById("right-button");n[0].classList.add("active-point"),e[0].classList.add("active-img");let o,i,a=0;for(i=0;i<n.length;i++)n[i].addEventListener("click",(()=>{for(o=0;o<e.length;o++)n[o].classList.remove("active-point"),e[o].classList.remove("active-img");a=i,e[a].classList.add("active-img"),n[a].classList.add("active-point")}));function A(){for(let r=0;r<e.length;r++)n[r].classList.remove("active-point"),e[r].classList.remove("active-img");a++,a>=e.length&&(a=0),e[a].classList.add("active-img"),n[a].classList.add("active-point")}null==r||r.addEventListener("click",(()=>{for(o=0;o<e.length;o++)n[o].classList.remove("active-point"),e[o].classList.remove("active-img");a--,a<0&&(a=e.length-1),e[a].classList.add("active-img"),n[a].classList.add("active-point")})),null==t||t.addEventListener("click",(()=>{A()}));let d=setInterval((()=>A()),3e3);const l=document.querySelector(".third-container");null==l||l.addEventListener("mouseover",(()=>{clearInterval(d)})),null==l||l.addEventListener("mouseleave",(()=>{d=setInterval((()=>A()),3e3)}))}},t={};function o(n){var e=t[n];if(void 0!==e){if(void 0!==e.error)throw e.error;return e.exports}var i=t[n]={id:n,exports:{}};try{var a={id:n,module:i,factory:r[n],require:o};o.i.forEach((function(n){n(a)})),i=a.module,a.factory.call(i.exports,i,i.exports,a.require)}catch(n){throw i.error=n,n}return i.exports}o.m=r,o.c=t,o.i=[],o.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return o.d(e,{a:e}),e},o.d=(n,e)=>{for(var r in e)o.o(e,r)&&!o.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},o.hu=n=>n+"."+o.h()+".hot-update.js",o.hmrF=()=>"main."+o.h()+".hot-update.json",o.h=()=>"8c2caf4d5b392f57a052",o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),o.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),n={},e="first_layout:",o.l=(r,t,i,a)=>{if(n[r])n[r].push(t);else{var A,d;if(void 0!==i)for(var l=document.getElementsByTagName("script"),c=0;c<l.length;c++){var s=l[c];if(s.getAttribute("src")==r||s.getAttribute("data-webpack")==e+i){A=s;break}}A||(d=!0,(A=document.createElement("script")).charset="utf-8",A.timeout=120,o.nc&&A.setAttribute("nonce",o.nc),A.setAttribute("data-webpack",e+i),A.src=r),n[r]=[t];var p=(e,t)=>{A.onerror=A.onload=null,clearTimeout(u);var o=n[r];if(delete n[r],A.parentNode&&A.parentNode.removeChild(A),o&&o.forEach((n=>n(t))),e)return e(t)},u=setTimeout(p.bind(null,void 0,{type:"timeout",target:A}),12e4);A.onerror=p.bind(null,A.onerror),A.onload=p.bind(null,A.onload),d&&document.head.appendChild(A)}},o.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{var n,e,r,t={},i=o.c,a=[],A=[],d="idle",l=0,c=[];function s(n){d=n;for(var e=[],r=0;r<A.length;r++)e[r]=A[r].call(null,n);return Promise.all(e).then((function(){}))}function p(){0==--l&&s("ready").then((function(){if(0===l){var n=c;c=[];for(var e=0;e<n.length;e++)n[e]()}}))}function u(n){if("idle"!==d)throw new Error("check() is only allowed in idle status");return s("check").then(o.hmrM).then((function(r){return r?s("prepare").then((function(){var t=[];return e=[],Promise.all(Object.keys(o.hmrC).reduce((function(n,i){return o.hmrC[i](r.c,r.r,r.m,n,e,t),n}),[])).then((function(){return e=function(){return n?h(n):s("ready").then((function(){return t}))},0===l?e():new Promise((function(n){c.push((function(){n(e())}))}));var e}))})):s(E()?"ready":"idle").then((function(){return null}))}))}function f(n){return"ready"!==d?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+d+")")})):h(n)}function h(n){n=n||{},E();var t=e.map((function(e){return e(n)}));e=void 0;var o=t.map((function(n){return n.error})).filter(Boolean);if(o.length>0)return s("abort").then((function(){throw o[0]}));var i=s("dispose");t.forEach((function(n){n.dispose&&n.dispose()}));var a,A=s("apply"),d=function(n){a||(a=n)},l=[];return t.forEach((function(n){if(n.apply){var e=n.apply(d);if(e)for(var r=0;r<e.length;r++)l.push(e[r])}})),Promise.all([i,A]).then((function(){return a?s("fail").then((function(){throw a})):r?h(n).then((function(n){return l.forEach((function(e){n.indexOf(e)<0&&n.push(e)})),n})):s("idle").then((function(){return l}))}))}function E(){if(r)return e||(e=[]),Object.keys(o.hmrI).forEach((function(n){r.forEach((function(r){o.hmrI[n](r,e)}))})),r=void 0,!0}o.hmrD=t,o.i.push((function(c){var h,E,g,C,m=c.module,B=function(e,r){var t=i[r];if(!t)return e;var o=function(o){if(t.hot.active){if(i[o]){var A=i[o].parents;-1===A.indexOf(r)&&A.push(r)}else a=[r],n=o;-1===t.children.indexOf(o)&&t.children.push(o)}else console.warn("[HMR] unexpected require("+o+") from disposed module "+r),a=[];return e(o)},A=function(n){return{configurable:!0,enumerable:!0,get:function(){return e[n]},set:function(r){e[n]=r}}};for(var c in e)Object.prototype.hasOwnProperty.call(e,c)&&"e"!==c&&Object.defineProperty(o,c,A(c));return o.e=function(n,r){return function(n){switch(d){case"ready":s("prepare");case"prepare":return l++,n.then(p,p),n;default:return n}}(e.e(n,r))},o}(c.require,c.id);m.hot=(h=c.id,E=m,C={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:g=n!==h,_requireSelf:function(){a=E.parents.slice(),n=g?void 0:h,o(h)},active:!0,accept:function(n,e,r){if(void 0===n)C._selfAccepted=!0;else if("function"==typeof n)C._selfAccepted=n;else if("object"==typeof n&&null!==n)for(var t=0;t<n.length;t++)C._acceptedDependencies[n[t]]=e||function(){},C._acceptedErrorHandlers[n[t]]=r;else C._acceptedDependencies[n]=e||function(){},C._acceptedErrorHandlers[n]=r},decline:function(n){if(void 0===n)C._selfDeclined=!0;else if("object"==typeof n&&null!==n)for(var e=0;e<n.length;e++)C._declinedDependencies[n[e]]=!0;else C._declinedDependencies[n]=!0},dispose:function(n){C._disposeHandlers.push(n)},addDisposeHandler:function(n){C._disposeHandlers.push(n)},removeDisposeHandler:function(n){var e=C._disposeHandlers.indexOf(n);e>=0&&C._disposeHandlers.splice(e,1)},invalidate:function(){switch(this._selfInvalidated=!0,d){case"idle":e=[],Object.keys(o.hmrI).forEach((function(n){o.hmrI[n](h,e)})),s("ready");break;case"ready":Object.keys(o.hmrI).forEach((function(n){o.hmrI[n](h,e)}));break;case"prepare":case"check":case"dispose":case"apply":(r=r||[]).push(h)}},check:u,apply:f,status:function(n){if(!n)return d;A.push(n)},addStatusHandler:function(n){A.push(n)},removeStatusHandler:function(n){var e=A.indexOf(n);e>=0&&A.splice(e,1)},data:t[h]},n=void 0,C),m.parents=a,m.children=[],a=[],c.require=B})),o.hmrC={},o.hmrI={}})(),(()=>{var n;o.g.importScripts&&(n=o.g.location+"");var e=o.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var t=r.length-1;t>-1&&(!n||!/^http(s?):/.test(n));)n=r[t--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=n})(),(()=>{var n,e,r,t,i,a=o.hmrS_jsonp=o.hmrS_jsonp||{792:0},A={};function d(e,r){return n=r,new Promise(((n,r)=>{A[e]=n;var t=o.p+o.hu(e),i=new Error;o.l(t,(n=>{if(A[e]){A[e]=void 0;var t=n&&("load"===n.type?"missing":n.type),o=n&&n.target&&n.target.src;i.message="Loading hot update chunk "+e+" failed.\n("+t+": "+o+")",i.name="ChunkLoadError",i.type=t,i.request=o,r(i)}}))}))}function l(n){function A(n){for(var e=[n],r={},t=e.map((function(n){return{chain:[n],id:n}}));t.length>0;){var i=t.pop(),a=i.id,A=i.chain,l=o.c[a];if(l&&(!l.hot._selfAccepted||l.hot._selfInvalidated)){if(l.hot._selfDeclined)return{type:"self-declined",chain:A,moduleId:a};if(l.hot._main)return{type:"unaccepted",chain:A,moduleId:a};for(var c=0;c<l.parents.length;c++){var s=l.parents[c],p=o.c[s];if(p){if(p.hot._declinedDependencies[a])return{type:"declined",chain:A.concat([s]),moduleId:a,parentId:s};-1===e.indexOf(s)&&(p.hot._acceptedDependencies[a]?(r[s]||(r[s]=[]),d(r[s],[a])):(delete r[s],e.push(s),t.push({chain:A.concat([s]),id:s})))}}}}return{type:"accepted",moduleId:n,outdatedModules:e,outdatedDependencies:r}}function d(n,e){for(var r=0;r<e.length;r++){var t=e[r];-1===n.indexOf(t)&&n.push(t)}}o.f&&delete o.f.jsonpHmr,e=void 0;var l={},c=[],s={},p=function(n){console.warn("[HMR] unexpected require("+n.id+") to disposed module")};for(var u in r)if(o.o(r,u)){var f,h=r[u],E=!1,g=!1,C=!1,m="";switch((f=h?A(u):{type:"disposed",moduleId:u}).chain&&(m="\nUpdate propagation: "+f.chain.join(" -> ")),f.type){case"self-declined":n.onDeclined&&n.onDeclined(f),n.ignoreDeclined||(E=new Error("Aborted because of self decline: "+f.moduleId+m));break;case"declined":n.onDeclined&&n.onDeclined(f),n.ignoreDeclined||(E=new Error("Aborted because of declined dependency: "+f.moduleId+" in "+f.parentId+m));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(f),n.ignoreUnaccepted||(E=new Error("Aborted because "+u+" is not accepted"+m));break;case"accepted":n.onAccepted&&n.onAccepted(f),g=!0;break;case"disposed":n.onDisposed&&n.onDisposed(f),C=!0;break;default:throw new Error("Unexception type "+f.type)}if(E)return{error:E};if(g)for(u in s[u]=h,d(c,f.outdatedModules),f.outdatedDependencies)o.o(f.outdatedDependencies,u)&&(l[u]||(l[u]=[]),d(l[u],f.outdatedDependencies[u]));C&&(d(c,[f.moduleId]),s[u]=p)}r=void 0;for(var B,b=[],x=0;x<c.length;x++){var v=c[x],y=o.c[v];y&&(y.hot._selfAccepted||y.hot._main)&&s[v]!==p&&!y.hot._selfInvalidated&&b.push({module:v,require:y.hot._requireSelf,errorHandler:y.hot._selfAccepted})}return{dispose:function(){var n;t.forEach((function(n){delete a[n]})),t=void 0;for(var e,r=c.slice();r.length>0;){var i=r.pop(),A=o.c[i];if(A){var d={},s=A.hot._disposeHandlers;for(x=0;x<s.length;x++)s[x].call(null,d);for(o.hmrD[i]=d,A.hot.active=!1,delete o.c[i],delete l[i],x=0;x<A.children.length;x++){var p=o.c[A.children[x]];p&&(n=p.parents.indexOf(i))>=0&&p.parents.splice(n,1)}}}for(var u in l)if(o.o(l,u)&&(A=o.c[u]))for(B=l[u],x=0;x<B.length;x++)e=B[x],(n=A.children.indexOf(e))>=0&&A.children.splice(n,1)},apply:function(e){for(var r in s)o.o(s,r)&&(o.m[r]=s[r]);for(var t=0;t<i.length;t++)i[t](o);for(var a in l)if(o.o(l,a)){var A=o.c[a];if(A){B=l[a];for(var d=[],p=[],u=[],f=0;f<B.length;f++){var h=B[f],E=A.hot._acceptedDependencies[h],g=A.hot._acceptedErrorHandlers[h];if(E){if(-1!==d.indexOf(E))continue;d.push(E),p.push(g),u.push(h)}}for(var C=0;C<d.length;C++)try{d[C].call(null,B)}catch(r){if("function"==typeof p[C])try{p[C](r,{moduleId:a,dependencyId:u[C]})}catch(t){n.onErrored&&n.onErrored({type:"accept-error-handler-errored",moduleId:a,dependencyId:u[C],error:t,originalError:r}),n.ignoreErrored||(e(t),e(r))}else n.onErrored&&n.onErrored({type:"accept-errored",moduleId:a,dependencyId:u[C],error:r}),n.ignoreErrored||e(r)}}}for(var m=0;m<b.length;m++){var x=b[m],v=x.module;try{x.require(v)}catch(r){if("function"==typeof x.errorHandler)try{x.errorHandler(r,{moduleId:v,module:o.c[v]})}catch(t){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:v,error:t,originalError:r}),n.ignoreErrored||(e(t),e(r))}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:v,error:r}),n.ignoreErrored||e(r)}}return c}}}self.webpackHotUpdatefirst_layout=(e,t,a)=>{for(var d in t)o.o(t,d)&&(r[d]=t[d],n&&n.push(d));a&&i.push(a),A[e]&&(A[e](),A[e]=void 0)},o.hmrI.jsonp=function(n,e){r||(r={},i=[],t=[],e.push(l)),o.o(r,n)||(r[n]=o.m[n])},o.hmrC.jsonp=function(n,A,c,s,p,u){p.push(l),e={},t=A,r=c.reduce((function(n,e){return n[e]=!1,n}),{}),i=[],n.forEach((function(n){o.o(a,n)&&void 0!==a[n]?(s.push(d(n,u)),e[n]=!0):e[n]=!1})),o.f&&(o.f.jsonpHmr=function(n,r){e&&o.o(e,n)&&!e[n]&&(r.push(d(n)),e[n]=!0)})},o.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(o.p+o.hmrF()).then((n=>{if(404!==n.status){if(!n.ok)throw new Error("Failed to fetch update manifest "+n.statusText);return n.json()}}))}})(),o.nc=void 0,o(156)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,